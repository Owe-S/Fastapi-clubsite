{
  "openapi": "3.1.0",
  "info": {
    "title": "ClubSite Admin Struktur API",
    "version": "0.1.0"
  },
  "paths": {
    "/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login For Access Token",
        "operationId": "login_for_access_token_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_for_access_token_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Healthcheck",
        "operationId": "healthcheck_healthcheck_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/chat": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Chat",
        "operationId": "chat_chat_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Q"
            },
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get All",
        "operationId": "route_activities_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "Create One",
        "operationId": "route_activities_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities"
        ],
        "summary": "Delete All",
        "operationId": "route_activities_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities/{item_id}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get One",
        "operationId": "route_activities__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Activities"
        ],
        "summary": "Update One",
        "operationId": "route_activities__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities"
        ],
        "summary": "Delete One",
        "operationId": "route_activities__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_datetime": {
      "get": {
        "tags": [
          "Activities_datetime"
        ],
        "summary": "Get All",
        "operationId": "route_activities_datetime_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesDateTimeOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Datetime Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Activities_datetime"
        ],
        "summary": "Create One",
        "operationId": "route_activities_datetime_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesDateTimeIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesDateTimeOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_datetime"
        ],
        "summary": "Delete All",
        "operationId": "route_activities_datetime_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesDateTimeOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Datetime Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_datetime/{item_id}": {
      "get": {
        "tags": [
          "Activities_datetime"
        ],
        "summary": "Get One",
        "operationId": "route_activities_datetime__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesDateTimeOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Activities_datetime"
        ],
        "summary": "Update One",
        "operationId": "route_activities_datetime__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesDateTimeOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesDateTimeOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_datetime"
        ],
        "summary": "Delete One",
        "operationId": "route_activities_datetime__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesDateTimeOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_participants": {
      "get": {
        "tags": [
          "Activities_participants"
        ],
        "summary": "Get All",
        "operationId": "route_activities_participants_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesParticipantsOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Participants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Activities_participants"
        ],
        "summary": "Create One",
        "operationId": "route_activities_participants_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesParticipantsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesParticipantsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_participants"
        ],
        "summary": "Delete All",
        "operationId": "route_activities_participants_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesParticipantsOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Participants Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_participants/{item_id}": {
      "get": {
        "tags": [
          "Activities_participants"
        ],
        "summary": "Get One",
        "operationId": "route_activities_participants__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesParticipantsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Activities_participants"
        ],
        "summary": "Update One",
        "operationId": "route_activities_participants__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesParticipantsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesParticipantsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_participants"
        ],
        "summary": "Delete One",
        "operationId": "route_activities_participants__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesParticipantsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_pricegroup_prices": {
      "get": {
        "tags": [
          "Activities_pricegroup_prices"
        ],
        "summary": "Get All",
        "operationId": "route_activities_pricegroup_prices_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesPricegroupPricesOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Pricegroup Prices Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Activities_pricegroup_prices"
        ],
        "summary": "Create One",
        "operationId": "route_activities_pricegroup_prices_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesPricegroupPricesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricegroupPricesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_pricegroup_prices"
        ],
        "summary": "Delete All",
        "operationId": "route_activities_pricegroup_prices_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesPricegroupPricesOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Pricegroup Prices Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_pricegroup_prices/{item_id}": {
      "get": {
        "tags": [
          "Activities_pricegroup_prices"
        ],
        "summary": "Get One",
        "operationId": "route_activities_pricegroup_prices__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricegroupPricesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Activities_pricegroup_prices"
        ],
        "summary": "Update One",
        "operationId": "route_activities_pricegroup_prices__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesPricegroupPricesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricegroupPricesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_pricegroup_prices"
        ],
        "summary": "Delete One",
        "operationId": "route_activities_pricegroup_prices__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricegroupPricesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_pricegroups": {
      "get": {
        "tags": [
          "Activities_pricegroups"
        ],
        "summary": "Get All",
        "operationId": "route_activities_pricegroups_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesPricegroupsOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Pricegroups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Activities_pricegroups"
        ],
        "summary": "Create One",
        "operationId": "route_activities_pricegroups_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesPricegroupsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricegroupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_pricegroups"
        ],
        "summary": "Delete All",
        "operationId": "route_activities_pricegroups_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesPricegroupsOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Pricegroups Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_pricegroups/{item_id}": {
      "get": {
        "tags": [
          "Activities_pricegroups"
        ],
        "summary": "Get One",
        "operationId": "route_activities_pricegroups__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricegroupsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Activities_pricegroups"
        ],
        "summary": "Update One",
        "operationId": "route_activities_pricegroups__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesPricegroupsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricegroupsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_pricegroups"
        ],
        "summary": "Delete One",
        "operationId": "route_activities_pricegroups__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricegroupsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_prices": {
      "get": {
        "tags": [
          "Activities_prices"
        ],
        "summary": "Get All",
        "operationId": "route_activities_prices_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesPricesOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Prices Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Activities_prices"
        ],
        "summary": "Create One",
        "operationId": "route_activities_prices_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesPricesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_prices"
        ],
        "summary": "Delete All",
        "operationId": "route_activities_prices_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitiesPricesOut"
                  },
                  "type": "array",
                  "title": "Response Route Activities Prices Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/activities_prices/{item_id}": {
      "get": {
        "tags": [
          "Activities_prices"
        ],
        "summary": "Get One",
        "operationId": "route_activities_prices__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Activities_prices"
        ],
        "summary": "Update One",
        "operationId": "route_activities_prices__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitiesPricesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities_prices"
        ],
        "summary": "Delete One",
        "operationId": "route_activities_prices__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesPricesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_areas": {
      "get": {
        "tags": [
          "Admin_areas"
        ],
        "summary": "Get All",
        "operationId": "route_admin_areas_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminAreasOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin Areas Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin_areas"
        ],
        "summary": "Create One",
        "operationId": "route_admin_areas_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminAreasIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAreasOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_areas"
        ],
        "summary": "Delete All",
        "operationId": "route_admin_areas_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminAreasOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin Areas Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_areas/{item_id}": {
      "get": {
        "tags": [
          "Admin_areas"
        ],
        "summary": "Get One",
        "operationId": "route_admin_areas__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAreasOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin_areas"
        ],
        "summary": "Update One",
        "operationId": "route_admin_areas__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminAreasOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAreasOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_areas"
        ],
        "summary": "Delete One",
        "operationId": "route_admin_areas__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAreasOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_user_pwdtemp": {
      "get": {
        "tags": [
          "Admin_user_pwdtemp"
        ],
        "summary": "Get All",
        "operationId": "route_admin_user_pwdtemp_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminUserPwdtempOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin User Pwdtemp Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin_user_pwdtemp"
        ],
        "summary": "Create One",
        "operationId": "route_admin_user_pwdtemp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserPwdtempIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserPwdtempOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_user_pwdtemp"
        ],
        "summary": "Delete All",
        "operationId": "route_admin_user_pwdtemp_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminUserPwdtempOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin User Pwdtemp Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_user_pwdtemp/{item_id}": {
      "get": {
        "tags": [
          "Admin_user_pwdtemp"
        ],
        "summary": "Get One",
        "operationId": "route_admin_user_pwdtemp__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserPwdtempOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin_user_pwdtemp"
        ],
        "summary": "Update One",
        "operationId": "route_admin_user_pwdtemp__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserPwdtempOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserPwdtempOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_user_pwdtemp"
        ],
        "summary": "Delete One",
        "operationId": "route_admin_user_pwdtemp__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserPwdtempOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_users": {
      "get": {
        "tags": [
          "Admin_users"
        ],
        "summary": "Get All",
        "operationId": "route_admin_users_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminUsersOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin_users"
        ],
        "summary": "Create One",
        "operationId": "route_admin_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUsersIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_users"
        ],
        "summary": "Delete All",
        "operationId": "route_admin_users_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminUsersOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin Users Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_users/{item_id}": {
      "get": {
        "tags": [
          "Admin_users"
        ],
        "summary": "Get One",
        "operationId": "route_admin_users__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin_users"
        ],
        "summary": "Update One",
        "operationId": "route_admin_users__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUsersOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_users"
        ],
        "summary": "Delete One",
        "operationId": "route_admin_users__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_users_areas": {
      "get": {
        "tags": [
          "Admin_users_areas"
        ],
        "summary": "Get All",
        "operationId": "route_admin_users_areas_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminUsersAreasOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin Users Areas Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin_users_areas"
        ],
        "summary": "Create One",
        "operationId": "route_admin_users_areas_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUsersAreasIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersAreasOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_users_areas"
        ],
        "summary": "Delete All",
        "operationId": "route_admin_users_areas_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminUsersAreasOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin Users Areas Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_users_areas/{item_id}": {
      "get": {
        "tags": [
          "Admin_users_areas"
        ],
        "summary": "Get One",
        "operationId": "route_admin_users_areas__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersAreasOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin_users_areas"
        ],
        "summary": "Update One",
        "operationId": "route_admin_users_areas__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUsersAreasOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersAreasOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_users_areas"
        ],
        "summary": "Delete One",
        "operationId": "route_admin_users_areas__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersAreasOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_users_departments": {
      "get": {
        "tags": [
          "Admin_users_departments"
        ],
        "summary": "Get All",
        "operationId": "route_admin_users_departments_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminUsersDepartmentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin Users Departments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin_users_departments"
        ],
        "summary": "Create One",
        "operationId": "route_admin_users_departments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUsersDepartmentsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersDepartmentsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_users_departments"
        ],
        "summary": "Delete All",
        "operationId": "route_admin_users_departments_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminUsersDepartmentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Admin Users Departments Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin_users_departments/{item_id}": {
      "get": {
        "tags": [
          "Admin_users_departments"
        ],
        "summary": "Get One",
        "operationId": "route_admin_users_departments__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersDepartmentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin_users_departments"
        ],
        "summary": "Update One",
        "operationId": "route_admin_users_departments__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUsersDepartmentsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersDepartmentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin_users_departments"
        ],
        "summary": "Delete One",
        "operationId": "route_admin_users_departments__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersDepartmentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ads": {
      "get": {
        "tags": [
          "Ads"
        ],
        "summary": "Get All",
        "operationId": "route_ads_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdsOut"
                  },
                  "type": "array",
                  "title": "Response Route Ads Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Ads"
        ],
        "summary": "Create One",
        "operationId": "route_ads_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Ads"
        ],
        "summary": "Delete All",
        "operationId": "route_ads_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdsOut"
                  },
                  "type": "array",
                  "title": "Response Route Ads Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ads/{item_id}": {
      "get": {
        "tags": [
          "Ads"
        ],
        "summary": "Get One",
        "operationId": "route_ads__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Ads"
        ],
        "summary": "Update One",
        "operationId": "route_ads__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Ads"
        ],
        "summary": "Delete One",
        "operationId": "route_ads__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ads_categories": {
      "get": {
        "tags": [
          "Ads_categories"
        ],
        "summary": "Get All",
        "operationId": "route_ads_categories_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Ads Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Ads_categories"
        ],
        "summary": "Create One",
        "operationId": "route_ads_categories_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdsCategoriesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdsCategoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Ads_categories"
        ],
        "summary": "Delete All",
        "operationId": "route_ads_categories_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Ads Categories Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ads_categories/{item_id}": {
      "get": {
        "tags": [
          "Ads_categories"
        ],
        "summary": "Get One",
        "operationId": "route_ads_categories__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Ads_categories"
        ],
        "summary": "Update One",
        "operationId": "route_ads_categories__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdsCategoriesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Ads_categories"
        ],
        "summary": "Delete One",
        "operationId": "route_ads_categories__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/attachments": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Get All",
        "operationId": "route_attachments_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AttachmentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Attachments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Create One",
        "operationId": "route_attachments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Attachments"
        ],
        "summary": "Delete All",
        "operationId": "route_attachments_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AttachmentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Attachments Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/attachments/{item_id}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Get One",
        "operationId": "route_attachments__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Attachments"
        ],
        "summary": "Update One",
        "operationId": "route_attachments__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Attachments"
        ],
        "summary": "Delete One",
        "operationId": "route_attachments__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/blog": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get All",
        "operationId": "route_blog_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BlogOut"
                  },
                  "type": "array",
                  "title": "Response Route Blog Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Blog"
        ],
        "summary": "Create One",
        "operationId": "route_blog_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Blog"
        ],
        "summary": "Delete All",
        "operationId": "route_blog_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BlogOut"
                  },
                  "type": "array",
                  "title": "Response Route Blog Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/blog/{item_id}": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get One",
        "operationId": "route_blog__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Blog"
        ],
        "summary": "Update One",
        "operationId": "route_blog__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Blog"
        ],
        "summary": "Delete One",
        "operationId": "route_blog__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/blog_comments": {
      "get": {
        "tags": [
          "Blog_comments"
        ],
        "summary": "Get All",
        "operationId": "route_blog_comments_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BlogCommentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Blog Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Blog_comments"
        ],
        "summary": "Create One",
        "operationId": "route_blog_comments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogCommentsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogCommentsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Blog_comments"
        ],
        "summary": "Delete All",
        "operationId": "route_blog_comments_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BlogCommentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Blog Comments Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/blog_comments/{item_id}": {
      "get": {
        "tags": [
          "Blog_comments"
        ],
        "summary": "Get One",
        "operationId": "route_blog_comments__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogCommentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Blog_comments"
        ],
        "summary": "Update One",
        "operationId": "route_blog_comments__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogCommentsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogCommentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Blog_comments"
        ],
        "summary": "Delete One",
        "operationId": "route_blog_comments__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogCommentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/blog_images": {
      "get": {
        "tags": [
          "Blog_images"
        ],
        "summary": "Get All",
        "operationId": "route_blog_images_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BlogImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Blog Images Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Blog_images"
        ],
        "summary": "Create One",
        "operationId": "route_blog_images_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogImagesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogImagesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Blog_images"
        ],
        "summary": "Delete All",
        "operationId": "route_blog_images_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BlogImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Blog Images Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/blog_images/{item_id}": {
      "get": {
        "tags": [
          "Blog_images"
        ],
        "summary": "Get One",
        "operationId": "route_blog_images__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Blog_images"
        ],
        "summary": "Update One",
        "operationId": "route_blog_images__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogImagesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Blog_images"
        ],
        "summary": "Delete One",
        "operationId": "route_blog_images__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/bloggers": {
      "get": {
        "tags": [
          "Bloggers"
        ],
        "summary": "Get All",
        "operationId": "route_bloggers_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BloggersOut"
                  },
                  "type": "array",
                  "title": "Response Route Bloggers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Bloggers"
        ],
        "summary": "Create One",
        "operationId": "route_bloggers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BloggersIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BloggersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Bloggers"
        ],
        "summary": "Delete All",
        "operationId": "route_bloggers_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BloggersOut"
                  },
                  "type": "array",
                  "title": "Response Route Bloggers Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/bloggers/{item_id}": {
      "get": {
        "tags": [
          "Bloggers"
        ],
        "summary": "Get One",
        "operationId": "route_bloggers__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BloggersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Bloggers"
        ],
        "summary": "Update One",
        "operationId": "route_bloggers__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BloggersOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BloggersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Bloggers"
        ],
        "summary": "Delete One",
        "operationId": "route_bloggers__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BloggersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/calendar": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get All",
        "operationId": "route_calendar_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CalendarOut"
                  },
                  "type": "array",
                  "title": "Response Route Calendar Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Create One",
        "operationId": "route_calendar_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Calendar"
        ],
        "summary": "Delete All",
        "operationId": "route_calendar_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CalendarOut"
                  },
                  "type": "array",
                  "title": "Response Route Calendar Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/calendar/{item_id}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get One",
        "operationId": "route_calendar__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Update One",
        "operationId": "route_calendar__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Calendar"
        ],
        "summary": "Delete One",
        "operationId": "route_calendar__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/cart": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get All",
        "operationId": "route_cart_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CartOut"
                  },
                  "type": "array",
                  "title": "Response Route Cart Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Create One",
        "operationId": "route_cart_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Delete All",
        "operationId": "route_cart_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CartOut"
                  },
                  "type": "array",
                  "title": "Response Route Cart Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/cart/{item_id}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get One",
        "operationId": "route_cart__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Update One",
        "operationId": "route_cart__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Delete One",
        "operationId": "route_cart__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/clubchamps": {
      "get": {
        "tags": [
          "Clubchamps"
        ],
        "summary": "Get All",
        "operationId": "route_clubchamps_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClubchampsOut"
                  },
                  "type": "array",
                  "title": "Response Route Clubchamps Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Clubchamps"
        ],
        "summary": "Create One",
        "operationId": "route_clubchamps_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClubchampsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClubchampsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Clubchamps"
        ],
        "summary": "Delete All",
        "operationId": "route_clubchamps_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClubchampsOut"
                  },
                  "type": "array",
                  "title": "Response Route Clubchamps Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/clubchamps/{item_id}": {
      "get": {
        "tags": [
          "Clubchamps"
        ],
        "summary": "Get One",
        "operationId": "route_clubchamps__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClubchampsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Clubchamps"
        ],
        "summary": "Update One",
        "operationId": "route_clubchamps__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClubchampsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClubchampsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Clubchamps"
        ],
        "summary": "Delete One",
        "operationId": "route_clubchamps__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClubchampsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/clubchamps_categories": {
      "get": {
        "tags": [
          "Clubchamps_categories"
        ],
        "summary": "Get All",
        "operationId": "route_clubchamps_categories_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClubchampsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Clubchamps Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Clubchamps_categories"
        ],
        "summary": "Create One",
        "operationId": "route_clubchamps_categories_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClubchampsCategoriesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClubchampsCategoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Clubchamps_categories"
        ],
        "summary": "Delete All",
        "operationId": "route_clubchamps_categories_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClubchampsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Clubchamps Categories Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/clubchamps_categories/{item_id}": {
      "get": {
        "tags": [
          "Clubchamps_categories"
        ],
        "summary": "Get One",
        "operationId": "route_clubchamps_categories__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClubchampsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Clubchamps_categories"
        ],
        "summary": "Update One",
        "operationId": "route_clubchamps_categories__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClubchampsCategoriesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClubchampsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Clubchamps_categories"
        ],
        "summary": "Delete One",
        "operationId": "route_clubchamps_categories__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClubchampsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get All",
        "operationId": "route_contacts_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContactsOut"
                  },
                  "type": "array",
                  "title": "Response Route Contacts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create One",
        "operationId": "route_contacts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete All",
        "operationId": "route_contacts_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContactsOut"
                  },
                  "type": "array",
                  "title": "Response Route Contacts Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/contacts/{item_id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get One",
        "operationId": "route_contacts__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update One",
        "operationId": "route_contacts__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete One",
        "operationId": "route_contacts__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/contacts_list": {
      "get": {
        "tags": [
          "Contacts_list"
        ],
        "summary": "Get All",
        "operationId": "route_contacts_list_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContactsListOut"
                  },
                  "type": "array",
                  "title": "Response Route Contacts List Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contacts_list"
        ],
        "summary": "Create One",
        "operationId": "route_contacts_list_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactsListIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsListOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Contacts_list"
        ],
        "summary": "Delete All",
        "operationId": "route_contacts_list_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContactsListOut"
                  },
                  "type": "array",
                  "title": "Response Route Contacts List Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/contacts_list/{item_id}": {
      "get": {
        "tags": [
          "Contacts_list"
        ],
        "summary": "Get One",
        "operationId": "route_contacts_list__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsListOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contacts_list"
        ],
        "summary": "Update One",
        "operationId": "route_contacts_list__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactsListOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsListOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Contacts_list"
        ],
        "summary": "Delete One",
        "operationId": "route_contacts_list__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsListOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/course_guide_hole": {
      "get": {
        "tags": [
          "Course_guide_hole"
        ],
        "summary": "Get All",
        "operationId": "route_course_guide_hole_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CourseGuideHoleOut"
                  },
                  "type": "array",
                  "title": "Response Route Course Guide Hole Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Course_guide_hole"
        ],
        "summary": "Create One",
        "operationId": "route_course_guide_hole_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseGuideHoleIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideHoleOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Course_guide_hole"
        ],
        "summary": "Delete All",
        "operationId": "route_course_guide_hole_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CourseGuideHoleOut"
                  },
                  "type": "array",
                  "title": "Response Route Course Guide Hole Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/course_guide_hole/{item_id}": {
      "get": {
        "tags": [
          "Course_guide_hole"
        ],
        "summary": "Get One",
        "operationId": "route_course_guide_hole__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideHoleOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Course_guide_hole"
        ],
        "summary": "Update One",
        "operationId": "route_course_guide_hole__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseGuideHoleOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideHoleOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Course_guide_hole"
        ],
        "summary": "Delete One",
        "operationId": "route_course_guide_hole__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideHoleOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/course_guide_images": {
      "get": {
        "tags": [
          "Course_guide_images"
        ],
        "summary": "Get All",
        "operationId": "route_course_guide_images_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CourseGuideImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Course Guide Images Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Course_guide_images"
        ],
        "summary": "Create One",
        "operationId": "route_course_guide_images_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseGuideImagesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideImagesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Course_guide_images"
        ],
        "summary": "Delete All",
        "operationId": "route_course_guide_images_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CourseGuideImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Course Guide Images Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/course_guide_images/{item_id}": {
      "get": {
        "tags": [
          "Course_guide_images"
        ],
        "summary": "Get One",
        "operationId": "route_course_guide_images__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Course_guide_images"
        ],
        "summary": "Update One",
        "operationId": "route_course_guide_images__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseGuideImagesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Course_guide_images"
        ],
        "summary": "Delete One",
        "operationId": "route_course_guide_images__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/course_guide_sponsors": {
      "get": {
        "tags": [
          "Course_guide_sponsors"
        ],
        "summary": "Get All",
        "operationId": "route_course_guide_sponsors_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CourseGuideSponsorsOut"
                  },
                  "type": "array",
                  "title": "Response Route Course Guide Sponsors Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Course_guide_sponsors"
        ],
        "summary": "Create One",
        "operationId": "route_course_guide_sponsors_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseGuideSponsorsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideSponsorsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Course_guide_sponsors"
        ],
        "summary": "Delete All",
        "operationId": "route_course_guide_sponsors_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CourseGuideSponsorsOut"
                  },
                  "type": "array",
                  "title": "Response Route Course Guide Sponsors Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/course_guide_sponsors/{item_id}": {
      "get": {
        "tags": [
          "Course_guide_sponsors"
        ],
        "summary": "Get One",
        "operationId": "route_course_guide_sponsors__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideSponsorsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Course_guide_sponsors"
        ],
        "summary": "Update One",
        "operationId": "route_course_guide_sponsors__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseGuideSponsorsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideSponsorsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Course_guide_sponsors"
        ],
        "summary": "Delete One",
        "operationId": "route_course_guide_sponsors__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGuideSponsorsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/courses": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get All",
        "operationId": "route_courses_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoursesOut"
                  },
                  "type": "array",
                  "title": "Response Route Courses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Create One",
        "operationId": "route_courses_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoursesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Courses"
        ],
        "summary": "Delete All",
        "operationId": "route_courses_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoursesOut"
                  },
                  "type": "array",
                  "title": "Response Route Courses Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/courses/{item_id}": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get One",
        "operationId": "route_courses__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Courses"
        ],
        "summary": "Update One",
        "operationId": "route_courses__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoursesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Courses"
        ],
        "summary": "Delete One",
        "operationId": "route_courses__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/courses_hio": {
      "get": {
        "tags": [
          "Courses_hio"
        ],
        "summary": "Get All",
        "operationId": "route_courses_hio_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoursesHioOut"
                  },
                  "type": "array",
                  "title": "Response Route Courses Hio Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Courses_hio"
        ],
        "summary": "Create One",
        "operationId": "route_courses_hio_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoursesHioIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesHioOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Courses_hio"
        ],
        "summary": "Delete All",
        "operationId": "route_courses_hio_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoursesHioOut"
                  },
                  "type": "array",
                  "title": "Response Route Courses Hio Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/courses_hio/{item_id}": {
      "get": {
        "tags": [
          "Courses_hio"
        ],
        "summary": "Get One",
        "operationId": "route_courses_hio__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesHioOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Courses_hio"
        ],
        "summary": "Update One",
        "operationId": "route_courses_hio__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoursesHioOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesHioOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Courses_hio"
        ],
        "summary": "Delete One",
        "operationId": "route_courses_hio__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesHioOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/courses_par": {
      "get": {
        "tags": [
          "Courses_par"
        ],
        "summary": "Get All",
        "operationId": "route_courses_par_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoursesParOut"
                  },
                  "type": "array",
                  "title": "Response Route Courses Par Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Courses_par"
        ],
        "summary": "Create One",
        "operationId": "route_courses_par_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoursesParIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesParOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Courses_par"
        ],
        "summary": "Delete All",
        "operationId": "route_courses_par_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoursesParOut"
                  },
                  "type": "array",
                  "title": "Response Route Courses Par Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/courses_par/{item_id}": {
      "get": {
        "tags": [
          "Courses_par"
        ],
        "summary": "Get One",
        "operationId": "route_courses_par__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesParOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Courses_par"
        ],
        "summary": "Update One",
        "operationId": "route_courses_par__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoursesParOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesParOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Courses_par"
        ],
        "summary": "Delete One",
        "operationId": "route_courses_par__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesParOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/courses_tees": {
      "get": {
        "tags": [
          "Courses_tees"
        ],
        "summary": "Get All",
        "operationId": "route_courses_tees_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoursesTeesOut"
                  },
                  "type": "array",
                  "title": "Response Route Courses Tees Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Courses_tees"
        ],
        "summary": "Create One",
        "operationId": "route_courses_tees_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoursesTeesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesTeesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Courses_tees"
        ],
        "summary": "Delete All",
        "operationId": "route_courses_tees_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoursesTeesOut"
                  },
                  "type": "array",
                  "title": "Response Route Courses Tees Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/courses_tees/{item_id}": {
      "get": {
        "tags": [
          "Courses_tees"
        ],
        "summary": "Get One",
        "operationId": "route_courses_tees__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesTeesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Courses_tees"
        ],
        "summary": "Update One",
        "operationId": "route_courses_tees__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoursesTeesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesTeesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Courses_tees"
        ],
        "summary": "Delete One",
        "operationId": "route_courses_tees__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursesTeesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/departments": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get All",
        "operationId": "route_departments_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DepartmentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Departments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Create One",
        "operationId": "route_departments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Departments"
        ],
        "summary": "Delete All",
        "operationId": "route_departments_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DepartmentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Departments Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/departments/{item_id}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get One",
        "operationId": "route_departments__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Departments"
        ],
        "summary": "Update One",
        "operationId": "route_departments__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Departments"
        ],
        "summary": "Delete One",
        "operationId": "route_departments__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/documents": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get All",
        "operationId": "route_documents_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DocumentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Documents Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Create One",
        "operationId": "route_documents_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete All",
        "operationId": "route_documents_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DocumentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Documents Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/documents/{item_id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get One",
        "operationId": "route_documents__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Update One",
        "operationId": "route_documents__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete One",
        "operationId": "route_documents__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/documents_categories": {
      "get": {
        "tags": [
          "Documents_categories"
        ],
        "summary": "Get All",
        "operationId": "route_documents_categories_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DocumentsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Documents Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Documents_categories"
        ],
        "summary": "Create One",
        "operationId": "route_documents_categories_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentsCategoriesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsCategoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents_categories"
        ],
        "summary": "Delete All",
        "operationId": "route_documents_categories_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DocumentsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Documents Categories Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/documents_categories/{item_id}": {
      "get": {
        "tags": [
          "Documents_categories"
        ],
        "summary": "Get One",
        "operationId": "route_documents_categories__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Documents_categories"
        ],
        "summary": "Update One",
        "operationId": "route_documents_categories__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentsCategoriesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents_categories"
        ],
        "summary": "Delete One",
        "operationId": "route_documents_categories__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/documents_userreg": {
      "get": {
        "tags": [
          "Documents_userreg"
        ],
        "summary": "Get All",
        "operationId": "route_documents_userreg_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DocumentsUserregOut"
                  },
                  "type": "array",
                  "title": "Response Route Documents Userreg Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Documents_userreg"
        ],
        "summary": "Create One",
        "operationId": "route_documents_userreg_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentsUserregIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsUserregOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents_userreg"
        ],
        "summary": "Delete All",
        "operationId": "route_documents_userreg_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DocumentsUserregOut"
                  },
                  "type": "array",
                  "title": "Response Route Documents Userreg Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/documents_userreg/{item_id}": {
      "get": {
        "tags": [
          "Documents_userreg"
        ],
        "summary": "Get One",
        "operationId": "route_documents_userreg__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsUserregOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Documents_userreg"
        ],
        "summary": "Update One",
        "operationId": "route_documents_userreg__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentsUserregOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsUserregOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents_userreg"
        ],
        "summary": "Delete One",
        "operationId": "route_documents_userreg__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsUserregOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/documents_userreg_categories": {
      "get": {
        "tags": [
          "Documents_userreg_categories"
        ],
        "summary": "Get All",
        "operationId": "route_documents_userreg_categories_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DocumentsUserregCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Documents Userreg Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Documents_userreg_categories"
        ],
        "summary": "Create One",
        "operationId": "route_documents_userreg_categories_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentsUserregCategoriesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsUserregCategoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents_userreg_categories"
        ],
        "summary": "Delete All",
        "operationId": "route_documents_userreg_categories_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DocumentsUserregCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Documents Userreg Categories Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/documents_userreg_categories/{item_id}": {
      "get": {
        "tags": [
          "Documents_userreg_categories"
        ],
        "summary": "Get One",
        "operationId": "route_documents_userreg_categories__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsUserregCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Documents_userreg_categories"
        ],
        "summary": "Update One",
        "operationId": "route_documents_userreg_categories__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentsUserregCategoriesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsUserregCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents_userreg_categories"
        ],
        "summary": "Delete One",
        "operationId": "route_documents_userreg_categories__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsUserregCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_courses": {
      "get": {
        "tags": [
          "Eclectic_courses"
        ],
        "summary": "Get All",
        "operationId": "route_eclectic_courses_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticCoursesOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Courses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Eclectic_courses"
        ],
        "summary": "Create One",
        "operationId": "route_eclectic_courses_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticCoursesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticCoursesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_courses"
        ],
        "summary": "Delete All",
        "operationId": "route_eclectic_courses_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticCoursesOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Courses Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_courses/{item_id}": {
      "get": {
        "tags": [
          "Eclectic_courses"
        ],
        "summary": "Get One",
        "operationId": "route_eclectic_courses__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticCoursesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Eclectic_courses"
        ],
        "summary": "Update One",
        "operationId": "route_eclectic_courses__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticCoursesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticCoursesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_courses"
        ],
        "summary": "Delete One",
        "operationId": "route_eclectic_courses__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticCoursesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_participants": {
      "get": {
        "tags": [
          "Eclectic_participants"
        ],
        "summary": "Get All",
        "operationId": "route_eclectic_participants_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticParticipantsOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Participants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Eclectic_participants"
        ],
        "summary": "Create One",
        "operationId": "route_eclectic_participants_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticParticipantsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticParticipantsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_participants"
        ],
        "summary": "Delete All",
        "operationId": "route_eclectic_participants_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticParticipantsOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Participants Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_participants/{item_id}": {
      "get": {
        "tags": [
          "Eclectic_participants"
        ],
        "summary": "Get One",
        "operationId": "route_eclectic_participants__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticParticipantsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Eclectic_participants"
        ],
        "summary": "Update One",
        "operationId": "route_eclectic_participants__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticParticipantsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticParticipantsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_participants"
        ],
        "summary": "Delete One",
        "operationId": "route_eclectic_participants__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticParticipantsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_score": {
      "get": {
        "tags": [
          "Eclectic_score"
        ],
        "summary": "Get All",
        "operationId": "route_eclectic_score_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticScoreOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Score Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Eclectic_score"
        ],
        "summary": "Create One",
        "operationId": "route_eclectic_score_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticScoreIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_score"
        ],
        "summary": "Delete All",
        "operationId": "route_eclectic_score_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticScoreOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Score Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_score/{item_id}": {
      "get": {
        "tags": [
          "Eclectic_score"
        ],
        "summary": "Get One",
        "operationId": "route_eclectic_score__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Eclectic_score"
        ],
        "summary": "Update One",
        "operationId": "route_eclectic_score__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticScoreOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_score"
        ],
        "summary": "Delete One",
        "operationId": "route_eclectic_score__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_score_net": {
      "get": {
        "tags": [
          "Eclectic_score_net"
        ],
        "summary": "Get All",
        "operationId": "route_eclectic_score_net_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticScoreNetOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Score Net Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Eclectic_score_net"
        ],
        "summary": "Create One",
        "operationId": "route_eclectic_score_net_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticScoreNetIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreNetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_score_net"
        ],
        "summary": "Delete All",
        "operationId": "route_eclectic_score_net_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticScoreNetOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Score Net Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_score_net/{item_id}": {
      "get": {
        "tags": [
          "Eclectic_score_net"
        ],
        "summary": "Get One",
        "operationId": "route_eclectic_score_net__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreNetOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Eclectic_score_net"
        ],
        "summary": "Update One",
        "operationId": "route_eclectic_score_net__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticScoreNetOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreNetOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_score_net"
        ],
        "summary": "Delete One",
        "operationId": "route_eclectic_score_net__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreNetOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_score_stbl": {
      "get": {
        "tags": [
          "Eclectic_score_stbl"
        ],
        "summary": "Get All",
        "operationId": "route_eclectic_score_stbl_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticScoreStblOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Score Stbl Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Eclectic_score_stbl"
        ],
        "summary": "Create One",
        "operationId": "route_eclectic_score_stbl_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticScoreStblIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreStblOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_score_stbl"
        ],
        "summary": "Delete All",
        "operationId": "route_eclectic_score_stbl_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticScoreStblOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Score Stbl Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_score_stbl/{item_id}": {
      "get": {
        "tags": [
          "Eclectic_score_stbl"
        ],
        "summary": "Get One",
        "operationId": "route_eclectic_score_stbl__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreStblOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Eclectic_score_stbl"
        ],
        "summary": "Update One",
        "operationId": "route_eclectic_score_stbl__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticScoreStblOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreStblOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_score_stbl"
        ],
        "summary": "Delete One",
        "operationId": "route_eclectic_score_stbl__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticScoreStblOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_tournaments": {
      "get": {
        "tags": [
          "Eclectic_tournaments"
        ],
        "summary": "Get All",
        "operationId": "route_eclectic_tournaments_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticTournamentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Tournaments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Eclectic_tournaments"
        ],
        "summary": "Create One",
        "operationId": "route_eclectic_tournaments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticTournamentsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticTournamentsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_tournaments"
        ],
        "summary": "Delete All",
        "operationId": "route_eclectic_tournaments_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EclecticTournamentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Eclectic Tournaments Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/eclectic_tournaments/{item_id}": {
      "get": {
        "tags": [
          "Eclectic_tournaments"
        ],
        "summary": "Get One",
        "operationId": "route_eclectic_tournaments__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticTournamentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Eclectic_tournaments"
        ],
        "summary": "Update One",
        "operationId": "route_eclectic_tournaments__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EclecticTournamentsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticTournamentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Eclectic_tournaments"
        ],
        "summary": "Delete One",
        "operationId": "route_eclectic_tournaments__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EclecticTournamentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_dateslider": {
      "get": {
        "tags": [
          "Elements_dateslider"
        ],
        "summary": "Get All",
        "operationId": "route_elements_dateslider_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsDatesliderOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Dateslider Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Elements_dateslider"
        ],
        "summary": "Create One",
        "operationId": "route_elements_dateslider_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsDatesliderIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_dateslider"
        ],
        "summary": "Delete All",
        "operationId": "route_elements_dateslider_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsDatesliderOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Dateslider Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_dateslider/{item_id}": {
      "get": {
        "tags": [
          "Elements_dateslider"
        ],
        "summary": "Get One",
        "operationId": "route_elements_dateslider__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Elements_dateslider"
        ],
        "summary": "Update One",
        "operationId": "route_elements_dateslider__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsDatesliderOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_dateslider"
        ],
        "summary": "Delete One",
        "operationId": "route_elements_dateslider__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_dateslider_dates": {
      "get": {
        "tags": [
          "Elements_dateslider_dates"
        ],
        "summary": "Get All",
        "operationId": "route_elements_dateslider_dates_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsDatesliderDatesOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Dateslider Dates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Elements_dateslider_dates"
        ],
        "summary": "Create One",
        "operationId": "route_elements_dateslider_dates_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsDatesliderDatesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderDatesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_dateslider_dates"
        ],
        "summary": "Delete All",
        "operationId": "route_elements_dateslider_dates_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsDatesliderDatesOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Dateslider Dates Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_dateslider_dates/{item_id}": {
      "get": {
        "tags": [
          "Elements_dateslider_dates"
        ],
        "summary": "Get One",
        "operationId": "route_elements_dateslider_dates__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderDatesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Elements_dateslider_dates"
        ],
        "summary": "Update One",
        "operationId": "route_elements_dateslider_dates__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsDatesliderDatesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderDatesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_dateslider_dates"
        ],
        "summary": "Delete One",
        "operationId": "route_elements_dateslider_dates__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderDatesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_dateslider_slides": {
      "get": {
        "tags": [
          "Elements_dateslider_slides"
        ],
        "summary": "Get All",
        "operationId": "route_elements_dateslider_slides_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsDatesliderSlidesOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Dateslider Slides Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Elements_dateslider_slides"
        ],
        "summary": "Create One",
        "operationId": "route_elements_dateslider_slides_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsDatesliderSlidesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderSlidesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_dateslider_slides"
        ],
        "summary": "Delete All",
        "operationId": "route_elements_dateslider_slides_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsDatesliderSlidesOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Dateslider Slides Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_dateslider_slides/{item_id}": {
      "get": {
        "tags": [
          "Elements_dateslider_slides"
        ],
        "summary": "Get One",
        "operationId": "route_elements_dateslider_slides__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderSlidesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Elements_dateslider_slides"
        ],
        "summary": "Update One",
        "operationId": "route_elements_dateslider_slides__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsDatesliderSlidesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderSlidesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_dateslider_slides"
        ],
        "summary": "Delete One",
        "operationId": "route_elements_dateslider_slides__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsDatesliderSlidesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_flexslider_elements": {
      "get": {
        "tags": [
          "Elements_flexslider_elements"
        ],
        "summary": "Get All",
        "operationId": "route_elements_flexslider_elements_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsFlexsliderElementsOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Flexslider Elements Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Elements_flexslider_elements"
        ],
        "summary": "Create One",
        "operationId": "route_elements_flexslider_elements_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsFlexsliderElementsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsFlexsliderElementsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_flexslider_elements"
        ],
        "summary": "Delete All",
        "operationId": "route_elements_flexslider_elements_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsFlexsliderElementsOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Flexslider Elements Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_flexslider_elements/{item_id}": {
      "get": {
        "tags": [
          "Elements_flexslider_elements"
        ],
        "summary": "Get One",
        "operationId": "route_elements_flexslider_elements__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsFlexsliderElementsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Elements_flexslider_elements"
        ],
        "summary": "Update One",
        "operationId": "route_elements_flexslider_elements__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsFlexsliderElementsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsFlexsliderElementsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_flexslider_elements"
        ],
        "summary": "Delete One",
        "operationId": "route_elements_flexslider_elements__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsFlexsliderElementsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_flexslider_sliders": {
      "get": {
        "tags": [
          "Elements_flexslider_sliders"
        ],
        "summary": "Get All",
        "operationId": "route_elements_flexslider_sliders_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsFlexsliderSlidersOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Flexslider Sliders Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Elements_flexslider_sliders"
        ],
        "summary": "Create One",
        "operationId": "route_elements_flexslider_sliders_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsFlexsliderSlidersIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsFlexsliderSlidersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_flexslider_sliders"
        ],
        "summary": "Delete All",
        "operationId": "route_elements_flexslider_sliders_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsFlexsliderSlidersOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Flexslider Sliders Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_flexslider_sliders/{item_id}": {
      "get": {
        "tags": [
          "Elements_flexslider_sliders"
        ],
        "summary": "Get One",
        "operationId": "route_elements_flexslider_sliders__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsFlexsliderSlidersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Elements_flexslider_sliders"
        ],
        "summary": "Update One",
        "operationId": "route_elements_flexslider_sliders__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsFlexsliderSlidersOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsFlexsliderSlidersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_flexslider_sliders"
        ],
        "summary": "Delete One",
        "operationId": "route_elements_flexslider_sliders__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsFlexsliderSlidersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_layerslider_layers": {
      "get": {
        "tags": [
          "Elements_layerslider_layers"
        ],
        "summary": "Get All",
        "operationId": "route_elements_layerslider_layers_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsLayersliderLayersOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Layerslider Layers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Elements_layerslider_layers"
        ],
        "summary": "Create One",
        "operationId": "route_elements_layerslider_layers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsLayersliderLayersIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsLayersliderLayersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_layerslider_layers"
        ],
        "summary": "Delete All",
        "operationId": "route_elements_layerslider_layers_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsLayersliderLayersOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Layerslider Layers Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_layerslider_layers/{item_id}": {
      "get": {
        "tags": [
          "Elements_layerslider_layers"
        ],
        "summary": "Get One",
        "operationId": "route_elements_layerslider_layers__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsLayersliderLayersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Elements_layerslider_layers"
        ],
        "summary": "Update One",
        "operationId": "route_elements_layerslider_layers__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsLayersliderLayersOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsLayersliderLayersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_layerslider_layers"
        ],
        "summary": "Delete One",
        "operationId": "route_elements_layerslider_layers__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsLayersliderLayersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_layerslider_slides": {
      "get": {
        "tags": [
          "Elements_layerslider_slides"
        ],
        "summary": "Get All",
        "operationId": "route_elements_layerslider_slides_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsLayersliderSlidesOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Layerslider Slides Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Elements_layerslider_slides"
        ],
        "summary": "Create One",
        "operationId": "route_elements_layerslider_slides_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsLayersliderSlidesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsLayersliderSlidesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_layerslider_slides"
        ],
        "summary": "Delete All",
        "operationId": "route_elements_layerslider_slides_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ElementsLayersliderSlidesOut"
                  },
                  "type": "array",
                  "title": "Response Route Elements Layerslider Slides Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/elements_layerslider_slides/{item_id}": {
      "get": {
        "tags": [
          "Elements_layerslider_slides"
        ],
        "summary": "Get One",
        "operationId": "route_elements_layerslider_slides__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsLayersliderSlidesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Elements_layerslider_slides"
        ],
        "summary": "Update One",
        "operationId": "route_elements_layerslider_slides__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementsLayersliderSlidesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsLayersliderSlidesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Elements_layerslider_slides"
        ],
        "summary": "Delete One",
        "operationId": "route_elements_layerslider_slides__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementsLayersliderSlidesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/faq": {
      "get": {
        "tags": [
          "Faq"
        ],
        "summary": "Get All",
        "operationId": "route_faq_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FaqOut"
                  },
                  "type": "array",
                  "title": "Response Route Faq Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Faq"
        ],
        "summary": "Create One",
        "operationId": "route_faq_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Faq"
        ],
        "summary": "Delete All",
        "operationId": "route_faq_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FaqOut"
                  },
                  "type": "array",
                  "title": "Response Route Faq Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/faq/{item_id}": {
      "get": {
        "tags": [
          "Faq"
        ],
        "summary": "Get One",
        "operationId": "route_faq__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Faq"
        ],
        "summary": "Update One",
        "operationId": "route_faq__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Faq"
        ],
        "summary": "Delete One",
        "operationId": "route_faq__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/faq_categories": {
      "get": {
        "tags": [
          "Faq_categories"
        ],
        "summary": "Get All",
        "operationId": "route_faq_categories_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FaqCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Faq Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Faq_categories"
        ],
        "summary": "Create One",
        "operationId": "route_faq_categories_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqCategoriesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Faq_categories"
        ],
        "summary": "Delete All",
        "operationId": "route_faq_categories_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FaqCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Faq Categories Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/faq_categories/{item_id}": {
      "get": {
        "tags": [
          "Faq_categories"
        ],
        "summary": "Get One",
        "operationId": "route_faq_categories__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Faq_categories"
        ],
        "summary": "Update One",
        "operationId": "route_faq_categories__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqCategoriesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Faq_categories"
        ],
        "summary": "Delete One",
        "operationId": "route_faq_categories__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/feedbacks": {
      "get": {
        "tags": [
          "Feedbacks"
        ],
        "summary": "Get All",
        "operationId": "route_feedbacks_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FeedbacksOut"
                  },
                  "type": "array",
                  "title": "Response Route Feedbacks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Feedbacks"
        ],
        "summary": "Create One",
        "operationId": "route_feedbacks_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbacksIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbacksOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Feedbacks"
        ],
        "summary": "Delete All",
        "operationId": "route_feedbacks_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FeedbacksOut"
                  },
                  "type": "array",
                  "title": "Response Route Feedbacks Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/feedbacks/{item_id}": {
      "get": {
        "tags": [
          "Feedbacks"
        ],
        "summary": "Get One",
        "operationId": "route_feedbacks__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbacksOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Feedbacks"
        ],
        "summary": "Update One",
        "operationId": "route_feedbacks__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbacksOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbacksOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Feedbacks"
        ],
        "summary": "Delete One",
        "operationId": "route_feedbacks__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbacksOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/feedbacks_in": {
      "get": {
        "tags": [
          "Feedbacks_in"
        ],
        "summary": "Get All",
        "operationId": "route_feedbacks_in_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FeedbacksInOut"
                  },
                  "type": "array",
                  "title": "Response Route Feedbacks In Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Feedbacks_in"
        ],
        "summary": "Create One",
        "operationId": "route_feedbacks_in_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbacksInIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbacksInOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Feedbacks_in"
        ],
        "summary": "Delete All",
        "operationId": "route_feedbacks_in_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FeedbacksInOut"
                  },
                  "type": "array",
                  "title": "Response Route Feedbacks In Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/feedbacks_in/{item_id}": {
      "get": {
        "tags": [
          "Feedbacks_in"
        ],
        "summary": "Get One",
        "operationId": "route_feedbacks_in__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbacksInOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Feedbacks_in"
        ],
        "summary": "Update One",
        "operationId": "route_feedbacks_in__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbacksInOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbacksInOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Feedbacks_in"
        ],
        "summary": "Delete One",
        "operationId": "route_feedbacks_in__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbacksInOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get All",
        "operationId": "route_forms_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "Create One",
        "operationId": "route_forms_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms"
        ],
        "summary": "Delete All",
        "operationId": "route_forms_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms/{item_id}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get One",
        "operationId": "route_forms__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "Update One",
        "operationId": "route_forms__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms"
        ],
        "summary": "Delete One",
        "operationId": "route_forms__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_bymail": {
      "get": {
        "tags": [
          "Forms_bymail"
        ],
        "summary": "Get All",
        "operationId": "route_forms_bymail_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsBymailOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Bymail Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Forms_bymail"
        ],
        "summary": "Create One",
        "operationId": "route_forms_bymail_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsBymailIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsBymailOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_bymail"
        ],
        "summary": "Delete All",
        "operationId": "route_forms_bymail_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsBymailOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Bymail Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_bymail/{item_id}": {
      "get": {
        "tags": [
          "Forms_bymail"
        ],
        "summary": "Get One",
        "operationId": "route_forms_bymail__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsBymailOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Forms_bymail"
        ],
        "summary": "Update One",
        "operationId": "route_forms_bymail__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsBymailOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsBymailOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_bymail"
        ],
        "summary": "Delete One",
        "operationId": "route_forms_bymail__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsBymailOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_fields": {
      "get": {
        "tags": [
          "Forms_fields"
        ],
        "summary": "Get All",
        "operationId": "route_forms_fields_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsFieldsOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Fields Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Forms_fields"
        ],
        "summary": "Create One",
        "operationId": "route_forms_fields_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsFieldsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_fields"
        ],
        "summary": "Delete All",
        "operationId": "route_forms_fields_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsFieldsOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Fields Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_fields/{item_id}": {
      "get": {
        "tags": [
          "Forms_fields"
        ],
        "summary": "Get One",
        "operationId": "route_forms_fields__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Forms_fields"
        ],
        "summary": "Update One",
        "operationId": "route_forms_fields__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsFieldsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_fields"
        ],
        "summary": "Delete One",
        "operationId": "route_forms_fields__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_fields_options": {
      "get": {
        "tags": [
          "Forms_fields_options"
        ],
        "summary": "Get All",
        "operationId": "route_forms_fields_options_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsFieldsOptionsOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Fields Options Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Forms_fields_options"
        ],
        "summary": "Create One",
        "operationId": "route_forms_fields_options_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsFieldsOptionsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsOptionsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_fields_options"
        ],
        "summary": "Delete All",
        "operationId": "route_forms_fields_options_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsFieldsOptionsOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Fields Options Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_fields_options/{item_id}": {
      "get": {
        "tags": [
          "Forms_fields_options"
        ],
        "summary": "Get One",
        "operationId": "route_forms_fields_options__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsOptionsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Forms_fields_options"
        ],
        "summary": "Update One",
        "operationId": "route_forms_fields_options__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsFieldsOptionsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsOptionsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_fields_options"
        ],
        "summary": "Delete One",
        "operationId": "route_forms_fields_options__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsOptionsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_fields_source": {
      "get": {
        "tags": [
          "Forms_fields_source"
        ],
        "summary": "Get All",
        "operationId": "route_forms_fields_source_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsFieldsSourceOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Fields Source Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Forms_fields_source"
        ],
        "summary": "Create One",
        "operationId": "route_forms_fields_source_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsFieldsSourceIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsSourceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_fields_source"
        ],
        "summary": "Delete All",
        "operationId": "route_forms_fields_source_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsFieldsSourceOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Fields Source Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_fields_source/{item_id}": {
      "get": {
        "tags": [
          "Forms_fields_source"
        ],
        "summary": "Get One",
        "operationId": "route_forms_fields_source__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsSourceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Forms_fields_source"
        ],
        "summary": "Update One",
        "operationId": "route_forms_fields_source__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsFieldsSourceOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsSourceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_fields_source"
        ],
        "summary": "Delete One",
        "operationId": "route_forms_fields_source__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldsSourceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_fieldtypes": {
      "get": {
        "tags": [
          "Forms_fieldtypes"
        ],
        "summary": "Get All",
        "operationId": "route_forms_fieldtypes_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsFieldtypesOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Fieldtypes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Forms_fieldtypes"
        ],
        "summary": "Create One",
        "operationId": "route_forms_fieldtypes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsFieldtypesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldtypesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_fieldtypes"
        ],
        "summary": "Delete All",
        "operationId": "route_forms_fieldtypes_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsFieldtypesOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Fieldtypes Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_fieldtypes/{item_id}": {
      "get": {
        "tags": [
          "Forms_fieldtypes"
        ],
        "summary": "Get One",
        "operationId": "route_forms_fieldtypes__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldtypesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Forms_fieldtypes"
        ],
        "summary": "Update One",
        "operationId": "route_forms_fieldtypes__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsFieldtypesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldtypesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_fieldtypes"
        ],
        "summary": "Delete One",
        "operationId": "route_forms_fieldtypes__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsFieldtypesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_received": {
      "get": {
        "tags": [
          "Forms_received"
        ],
        "summary": "Get All",
        "operationId": "route_forms_received_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsReceivedOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Received Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Forms_received"
        ],
        "summary": "Create One",
        "operationId": "route_forms_received_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsReceivedIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsReceivedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_received"
        ],
        "summary": "Delete All",
        "operationId": "route_forms_received_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsReceivedOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Received Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_received/{item_id}": {
      "get": {
        "tags": [
          "Forms_received"
        ],
        "summary": "Get One",
        "operationId": "route_forms_received__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsReceivedOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Forms_received"
        ],
        "summary": "Update One",
        "operationId": "route_forms_received__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsReceivedOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsReceivedOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_received"
        ],
        "summary": "Delete One",
        "operationId": "route_forms_received__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsReceivedOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_types": {
      "get": {
        "tags": [
          "Forms_types"
        ],
        "summary": "Get All",
        "operationId": "route_forms_types_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsTypesOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Types Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Forms_types"
        ],
        "summary": "Create One",
        "operationId": "route_forms_types_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsTypesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsTypesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_types"
        ],
        "summary": "Delete All",
        "operationId": "route_forms_types_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormsTypesOut"
                  },
                  "type": "array",
                  "title": "Response Route Forms Types Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/forms_types/{item_id}": {
      "get": {
        "tags": [
          "Forms_types"
        ],
        "summary": "Get One",
        "operationId": "route_forms_types__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsTypesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Forms_types"
        ],
        "summary": "Update One",
        "operationId": "route_forms_types__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormsTypesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsTypesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms_types"
        ],
        "summary": "Delete One",
        "operationId": "route_forms_types__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormsTypesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Get All",
        "operationId": "route_images_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "Create One",
        "operationId": "route_images_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images"
        ],
        "summary": "Delete All",
        "operationId": "route_images_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images/{item_id}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Get One",
        "operationId": "route_images__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Images"
        ],
        "summary": "Update One",
        "operationId": "route_images__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images"
        ],
        "summary": "Delete One",
        "operationId": "route_images__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images_ccond": {
      "get": {
        "tags": [
          "Images_ccond"
        ],
        "summary": "Get All",
        "operationId": "route_images_ccond_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImagesCcondOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Ccond Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Images_ccond"
        ],
        "summary": "Create One",
        "operationId": "route_images_ccond_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagesCcondIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesCcondOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images_ccond"
        ],
        "summary": "Delete All",
        "operationId": "route_images_ccond_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImagesCcondOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Ccond Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images_ccond/{item_id}": {
      "get": {
        "tags": [
          "Images_ccond"
        ],
        "summary": "Get One",
        "operationId": "route_images_ccond__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesCcondOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Images_ccond"
        ],
        "summary": "Update One",
        "operationId": "route_images_ccond__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagesCcondOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesCcondOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images_ccond"
        ],
        "summary": "Delete One",
        "operationId": "route_images_ccond__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesCcondOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images_profiles": {
      "get": {
        "tags": [
          "Images_profiles"
        ],
        "summary": "Get All",
        "operationId": "route_images_profiles_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImagesProfilesOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Profiles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Images_profiles"
        ],
        "summary": "Create One",
        "operationId": "route_images_profiles_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagesProfilesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesProfilesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images_profiles"
        ],
        "summary": "Delete All",
        "operationId": "route_images_profiles_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImagesProfilesOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Profiles Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images_profiles/{item_id}": {
      "get": {
        "tags": [
          "Images_profiles"
        ],
        "summary": "Get One",
        "operationId": "route_images_profiles__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesProfilesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Images_profiles"
        ],
        "summary": "Update One",
        "operationId": "route_images_profiles__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagesProfilesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesProfilesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images_profiles"
        ],
        "summary": "Delete One",
        "operationId": "route_images_profiles__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesProfilesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images_slider": {
      "get": {
        "tags": [
          "Images_slider"
        ],
        "summary": "Get All",
        "operationId": "route_images_slider_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImagesSliderOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Slider Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Images_slider"
        ],
        "summary": "Create One",
        "operationId": "route_images_slider_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagesSliderIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesSliderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images_slider"
        ],
        "summary": "Delete All",
        "operationId": "route_images_slider_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImagesSliderOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Slider Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images_slider/{item_id}": {
      "get": {
        "tags": [
          "Images_slider"
        ],
        "summary": "Get One",
        "operationId": "route_images_slider__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesSliderOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Images_slider"
        ],
        "summary": "Update One",
        "operationId": "route_images_slider__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagesSliderOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesSliderOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images_slider"
        ],
        "summary": "Delete One",
        "operationId": "route_images_slider__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesSliderOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images_categories": {
      "get": {
        "tags": [
          "Images_categories"
        ],
        "summary": "Get All",
        "operationId": "route_images_categories_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Images_CategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Images_categories"
        ],
        "summary": "Create One",
        "operationId": "route_images_categories_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Images_CategoriesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Images_CategoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images_categories"
        ],
        "summary": "Delete All",
        "operationId": "route_images_categories_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Images_CategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Images Categories Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/images_categories/{item_id}": {
      "get": {
        "tags": [
          "Images_categories"
        ],
        "summary": "Get One",
        "operationId": "route_images_categories__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Images_CategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Images_categories"
        ],
        "summary": "Update One",
        "operationId": "route_images_categories__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Images_CategoriesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Images_CategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Images_categories"
        ],
        "summary": "Delete One",
        "operationId": "route_images_categories__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Images_CategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_change": {
      "get": {
        "tags": [
          "Members_change"
        ],
        "summary": "Get All",
        "operationId": "route_members_change_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersChangeOut"
                  },
                  "type": "array",
                  "title": "Response Route Members Change Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Members_change"
        ],
        "summary": "Create One",
        "operationId": "route_members_change_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersChangeIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersChangeOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_change"
        ],
        "summary": "Delete All",
        "operationId": "route_members_change_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersChangeOut"
                  },
                  "type": "array",
                  "title": "Response Route Members Change Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_change/{item_id}": {
      "get": {
        "tags": [
          "Members_change"
        ],
        "summary": "Get One",
        "operationId": "route_members_change__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersChangeOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Members_change"
        ],
        "summary": "Update One",
        "operationId": "route_members_change__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersChangeOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersChangeOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_change"
        ],
        "summary": "Delete One",
        "operationId": "route_members_change__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersChangeOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_in": {
      "get": {
        "tags": [
          "Members_in"
        ],
        "summary": "Get All",
        "operationId": "route_members_in_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersInOut"
                  },
                  "type": "array",
                  "title": "Response Route Members In Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Members_in"
        ],
        "summary": "Create One",
        "operationId": "route_members_in_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersInIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersInOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_in"
        ],
        "summary": "Delete All",
        "operationId": "route_members_in_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersInOut"
                  },
                  "type": "array",
                  "title": "Response Route Members In Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_in/{item_id}": {
      "get": {
        "tags": [
          "Members_in"
        ],
        "summary": "Get One",
        "operationId": "route_members_in__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersInOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Members_in"
        ],
        "summary": "Update One",
        "operationId": "route_members_in__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersInOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersInOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_in"
        ],
        "summary": "Delete One",
        "operationId": "route_members_in__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersInOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_out": {
      "get": {
        "tags": [
          "Members_out"
        ],
        "summary": "Get All",
        "operationId": "route_members_out_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersOutOut"
                  },
                  "type": "array",
                  "title": "Response Route Members Out Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Members_out"
        ],
        "summary": "Create One",
        "operationId": "route_members_out_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersOutIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersOutOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_out"
        ],
        "summary": "Delete All",
        "operationId": "route_members_out_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersOutOut"
                  },
                  "type": "array",
                  "title": "Response Route Members Out Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_out/{item_id}": {
      "get": {
        "tags": [
          "Members_out"
        ],
        "summary": "Get One",
        "operationId": "route_members_out__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersOutOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Members_out"
        ],
        "summary": "Update One",
        "operationId": "route_members_out__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersOutOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersOutOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_out"
        ],
        "summary": "Delete One",
        "operationId": "route_members_out__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersOutOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_signout_source": {
      "get": {
        "tags": [
          "Members_signout_source"
        ],
        "summary": "Get All",
        "operationId": "route_members_signout_source_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersSignoutSourceOut"
                  },
                  "type": "array",
                  "title": "Response Route Members Signout Source Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Members_signout_source"
        ],
        "summary": "Create One",
        "operationId": "route_members_signout_source_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersSignoutSourceIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersSignoutSourceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_signout_source"
        ],
        "summary": "Delete All",
        "operationId": "route_members_signout_source_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersSignoutSourceOut"
                  },
                  "type": "array",
                  "title": "Response Route Members Signout Source Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_signout_source/{item_id}": {
      "get": {
        "tags": [
          "Members_signout_source"
        ],
        "summary": "Get One",
        "operationId": "route_members_signout_source__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersSignoutSourceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Members_signout_source"
        ],
        "summary": "Update One",
        "operationId": "route_members_signout_source__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersSignoutSourceOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersSignoutSourceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_signout_source"
        ],
        "summary": "Delete One",
        "operationId": "route_members_signout_source__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersSignoutSourceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_signup_source": {
      "get": {
        "tags": [
          "Members_signup_source"
        ],
        "summary": "Get All",
        "operationId": "route_members_signup_source_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersSignupSourceOut"
                  },
                  "type": "array",
                  "title": "Response Route Members Signup Source Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Members_signup_source"
        ],
        "summary": "Create One",
        "operationId": "route_members_signup_source_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersSignupSourceIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersSignupSourceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_signup_source"
        ],
        "summary": "Delete All",
        "operationId": "route_members_signup_source_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembersSignupSourceOut"
                  },
                  "type": "array",
                  "title": "Response Route Members Signup Source Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/members_signup_source/{item_id}": {
      "get": {
        "tags": [
          "Members_signup_source"
        ],
        "summary": "Get One",
        "operationId": "route_members_signup_source__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersSignupSourceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Members_signup_source"
        ],
        "summary": "Update One",
        "operationId": "route_members_signup_source__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembersSignupSourceOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersSignupSourceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members_signup_source"
        ],
        "summary": "Delete One",
        "operationId": "route_members_signup_source__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersSignupSourceOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/memberships": {
      "get": {
        "tags": [
          "Memberships"
        ],
        "summary": "Get All",
        "operationId": "route_memberships_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembershipsOut"
                  },
                  "type": "array",
                  "title": "Response Route Memberships Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Memberships"
        ],
        "summary": "Create One",
        "operationId": "route_memberships_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembershipsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Memberships"
        ],
        "summary": "Delete All",
        "operationId": "route_memberships_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembershipsOut"
                  },
                  "type": "array",
                  "title": "Response Route Memberships Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/memberships/{item_id}": {
      "get": {
        "tags": [
          "Memberships"
        ],
        "summary": "Get One",
        "operationId": "route_memberships__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Memberships"
        ],
        "summary": "Update One",
        "operationId": "route_memberships__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembershipsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Memberships"
        ],
        "summary": "Delete One",
        "operationId": "route_memberships__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/memberships_vtg": {
      "get": {
        "tags": [
          "Memberships_vtg"
        ],
        "summary": "Get All",
        "operationId": "route_memberships_vtg_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembershipsVtgOut"
                  },
                  "type": "array",
                  "title": "Response Route Memberships Vtg Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Memberships_vtg"
        ],
        "summary": "Create One",
        "operationId": "route_memberships_vtg_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembershipsVtgIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipsVtgOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Memberships_vtg"
        ],
        "summary": "Delete All",
        "operationId": "route_memberships_vtg_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MembershipsVtgOut"
                  },
                  "type": "array",
                  "title": "Response Route Memberships Vtg Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/memberships_vtg/{item_id}": {
      "get": {
        "tags": [
          "Memberships_vtg"
        ],
        "summary": "Get One",
        "operationId": "route_memberships_vtg__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipsVtgOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Memberships_vtg"
        ],
        "summary": "Update One",
        "operationId": "route_memberships_vtg__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MembershipsVtgOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipsVtgOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Memberships_vtg"
        ],
        "summary": "Delete One",
        "operationId": "route_memberships_vtg__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipsVtgOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/menu_main": {
      "get": {
        "tags": [
          "Menu_main"
        ],
        "summary": "Get All",
        "operationId": "route_menu_main_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MenuMainOut"
                  },
                  "type": "array",
                  "title": "Response Route Menu Main Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Menu_main"
        ],
        "summary": "Create One",
        "operationId": "route_menu_main_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuMainIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuMainOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Menu_main"
        ],
        "summary": "Delete All",
        "operationId": "route_menu_main_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MenuMainOut"
                  },
                  "type": "array",
                  "title": "Response Route Menu Main Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/menu_main/{item_id}": {
      "get": {
        "tags": [
          "Menu_main"
        ],
        "summary": "Get One",
        "operationId": "route_menu_main__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuMainOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Menu_main"
        ],
        "summary": "Update One",
        "operationId": "route_menu_main__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuMainOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuMainOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Menu_main"
        ],
        "summary": "Delete One",
        "operationId": "route_menu_main__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuMainOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/news_articles": {
      "get": {
        "tags": [
          "News_articles"
        ],
        "summary": "Get All",
        "operationId": "route_news_articles_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NewsArticleOut"
                  },
                  "type": "array",
                  "title": "Response Route News Articles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "News_articles"
        ],
        "summary": "Create One",
        "operationId": "route_news_articles_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsArticleIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticleOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "News_articles"
        ],
        "summary": "Delete All",
        "operationId": "route_news_articles_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NewsArticleOut"
                  },
                  "type": "array",
                  "title": "Response Route News Articles Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/news_articles/{item_id}": {
      "get": {
        "tags": [
          "News_articles"
        ],
        "summary": "Get One",
        "operationId": "route_news_articles__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticleOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "News_articles"
        ],
        "summary": "Update One",
        "operationId": "route_news_articles__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsArticleOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticleOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "News_articles"
        ],
        "summary": "Delete One",
        "operationId": "route_news_articles__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticleOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/news_articles_plugins": {
      "get": {
        "tags": [
          "News_articles_plugins"
        ],
        "summary": "Get All",
        "operationId": "route_news_articles_plugins_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NewsArticlesPluginsOut"
                  },
                  "type": "array",
                  "title": "Response Route News Articles Plugins Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "News_articles_plugins"
        ],
        "summary": "Create One",
        "operationId": "route_news_articles_plugins_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsArticlesPluginsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticlesPluginsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "News_articles_plugins"
        ],
        "summary": "Delete All",
        "operationId": "route_news_articles_plugins_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NewsArticlesPluginsOut"
                  },
                  "type": "array",
                  "title": "Response Route News Articles Plugins Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/news_articles_plugins/{item_id}": {
      "get": {
        "tags": [
          "News_articles_plugins"
        ],
        "summary": "Get One",
        "operationId": "route_news_articles_plugins__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticlesPluginsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "News_articles_plugins"
        ],
        "summary": "Update One",
        "operationId": "route_news_articles_plugins__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsArticlesPluginsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticlesPluginsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "News_articles_plugins"
        ],
        "summary": "Delete One",
        "operationId": "route_news_articles_plugins__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsArticlesPluginsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/news_bulletins": {
      "get": {
        "tags": [
          "News_bulletins"
        ],
        "summary": "Get All",
        "operationId": "route_news_bulletins_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NewsBulletinsOut"
                  },
                  "type": "array",
                  "title": "Response Route News Bulletins Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "News_bulletins"
        ],
        "summary": "Create One",
        "operationId": "route_news_bulletins_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsBulletinsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsBulletinsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "News_bulletins"
        ],
        "summary": "Delete All",
        "operationId": "route_news_bulletins_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NewsBulletinsOut"
                  },
                  "type": "array",
                  "title": "Response Route News Bulletins Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/news_bulletins/{item_id}": {
      "get": {
        "tags": [
          "News_bulletins"
        ],
        "summary": "Get One",
        "operationId": "route_news_bulletins__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsBulletinsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "News_bulletins"
        ],
        "summary": "Update One",
        "operationId": "route_news_bulletins__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsBulletinsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsBulletinsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "News_bulletins"
        ],
        "summary": "Delete One",
        "operationId": "route_news_bulletins__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsBulletinsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/news_keywords": {
      "get": {
        "tags": [
          "News_keywords"
        ],
        "summary": "Get All",
        "operationId": "route_news_keywords_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NewsKeywordsOut"
                  },
                  "type": "array",
                  "title": "Response Route News Keywords Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "News_keywords"
        ],
        "summary": "Create One",
        "operationId": "route_news_keywords_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsKeywordsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsKeywordsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "News_keywords"
        ],
        "summary": "Delete All",
        "operationId": "route_news_keywords_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NewsKeywordsOut"
                  },
                  "type": "array",
                  "title": "Response Route News Keywords Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/news_keywords/{item_id}": {
      "get": {
        "tags": [
          "News_keywords"
        ],
        "summary": "Get One",
        "operationId": "route_news_keywords__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsKeywordsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "News_keywords"
        ],
        "summary": "Update One",
        "operationId": "route_news_keywords__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsKeywordsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsKeywordsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "News_keywords"
        ],
        "summary": "Delete One",
        "operationId": "route_news_keywords__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsKeywordsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/orderdetails": {
      "get": {
        "tags": [
          "Orderdetails"
        ],
        "summary": "Get All",
        "operationId": "route_orderdetails_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrderdetailsOut"
                  },
                  "type": "array",
                  "title": "Response Route Orderdetails Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Orderdetails"
        ],
        "summary": "Create One",
        "operationId": "route_orderdetails_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderdetailsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderdetailsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Orderdetails"
        ],
        "summary": "Delete All",
        "operationId": "route_orderdetails_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrderdetailsOut"
                  },
                  "type": "array",
                  "title": "Response Route Orderdetails Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/orderdetails/{item_id}": {
      "get": {
        "tags": [
          "Orderdetails"
        ],
        "summary": "Get One",
        "operationId": "route_orderdetails__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderdetailsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Orderdetails"
        ],
        "summary": "Update One",
        "operationId": "route_orderdetails__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderdetailsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderdetailsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Orderdetails"
        ],
        "summary": "Delete One",
        "operationId": "route_orderdetails__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderdetailsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get All",
        "operationId": "route_orders_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrdersOut"
                  },
                  "type": "array",
                  "title": "Response Route Orders Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create One",
        "operationId": "route_orders_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Delete All",
        "operationId": "route_orders_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrdersOut"
                  },
                  "type": "array",
                  "title": "Response Route Orders Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/orders/{item_id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get One",
        "operationId": "route_orders__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Update One",
        "operationId": "route_orders__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Delete One",
        "operationId": "route_orders__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/pages": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Get All",
        "operationId": "route_pages_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Pages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Pages"
        ],
        "summary": "Create One",
        "operationId": "route_pages_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Pages"
        ],
        "summary": "Delete All",
        "operationId": "route_pages_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Pages Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/pages/{item_id}": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Get One",
        "operationId": "route_pages__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Pages"
        ],
        "summary": "Update One",
        "operationId": "route_pages__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Pages"
        ],
        "summary": "Delete One",
        "operationId": "route_pages__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/pages_menus": {
      "get": {
        "tags": [
          "Pages_menus"
        ],
        "summary": "Get All",
        "operationId": "route_pages_menus_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PagesMenusOut"
                  },
                  "type": "array",
                  "title": "Response Route Pages Menus Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Pages_menus"
        ],
        "summary": "Create One",
        "operationId": "route_pages_menus_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagesMenusIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesMenusOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Pages_menus"
        ],
        "summary": "Delete All",
        "operationId": "route_pages_menus_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PagesMenusOut"
                  },
                  "type": "array",
                  "title": "Response Route Pages Menus Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/pages_menus/{item_id}": {
      "get": {
        "tags": [
          "Pages_menus"
        ],
        "summary": "Get One",
        "operationId": "route_pages_menus__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesMenusOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Pages_menus"
        ],
        "summary": "Update One",
        "operationId": "route_pages_menus__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagesMenusOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesMenusOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Pages_menus"
        ],
        "summary": "Delete One",
        "operationId": "route_pages_menus__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesMenusOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/pages_plugins": {
      "get": {
        "tags": [
          "Pages_plugins"
        ],
        "summary": "Get All",
        "operationId": "route_pages_plugins_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PagesPluginsOut"
                  },
                  "type": "array",
                  "title": "Response Route Pages Plugins Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Pages_plugins"
        ],
        "summary": "Create One",
        "operationId": "route_pages_plugins_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagesPluginsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesPluginsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Pages_plugins"
        ],
        "summary": "Delete All",
        "operationId": "route_pages_plugins_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PagesPluginsOut"
                  },
                  "type": "array",
                  "title": "Response Route Pages Plugins Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/pages_plugins/{item_id}": {
      "get": {
        "tags": [
          "Pages_plugins"
        ],
        "summary": "Get One",
        "operationId": "route_pages_plugins__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesPluginsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Pages_plugins"
        ],
        "summary": "Update One",
        "operationId": "route_pages_plugins__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagesPluginsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesPluginsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Pages_plugins"
        ],
        "summary": "Delete One",
        "operationId": "route_pages_plugins__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagesPluginsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/payment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get All",
        "operationId": "route_payment_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentOut"
                  },
                  "type": "array",
                  "title": "Response Route Payment Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Create One",
        "operationId": "route_payment_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Delete All",
        "operationId": "route_payment_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentOut"
                  },
                  "type": "array",
                  "title": "Response Route Payment Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/payment/{item_id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get One",
        "operationId": "route_payment__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Payment"
        ],
        "summary": "Update One",
        "operationId": "route_payment__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Delete One",
        "operationId": "route_payment__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/photoalbum": {
      "get": {
        "tags": [
          "Photoalbum"
        ],
        "summary": "Get All",
        "operationId": "route_photoalbum_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PhotoalbumOut"
                  },
                  "type": "array",
                  "title": "Response Route Photoalbum Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Photoalbum"
        ],
        "summary": "Create One",
        "operationId": "route_photoalbum_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhotoalbumIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoalbumOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Photoalbum"
        ],
        "summary": "Delete All",
        "operationId": "route_photoalbum_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PhotoalbumOut"
                  },
                  "type": "array",
                  "title": "Response Route Photoalbum Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/photoalbum/{item_id}": {
      "get": {
        "tags": [
          "Photoalbum"
        ],
        "summary": "Get One",
        "operationId": "route_photoalbum__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoalbumOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Photoalbum"
        ],
        "summary": "Update One",
        "operationId": "route_photoalbum__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhotoalbumOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoalbumOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Photoalbum"
        ],
        "summary": "Delete One",
        "operationId": "route_photoalbum__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoalbumOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/photoalbum_images": {
      "get": {
        "tags": [
          "Photoalbum_images"
        ],
        "summary": "Get All",
        "operationId": "route_photoalbum_images_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PhotoalbumImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Photoalbum Images Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Photoalbum_images"
        ],
        "summary": "Create One",
        "operationId": "route_photoalbum_images_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhotoalbumImagesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoalbumImagesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Photoalbum_images"
        ],
        "summary": "Delete All",
        "operationId": "route_photoalbum_images_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PhotoalbumImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Photoalbum Images Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/photoalbum_images/{item_id}": {
      "get": {
        "tags": [
          "Photoalbum_images"
        ],
        "summary": "Get One",
        "operationId": "route_photoalbum_images__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoalbumImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Photoalbum_images"
        ],
        "summary": "Update One",
        "operationId": "route_photoalbum_images__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhotoalbumImagesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoalbumImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Photoalbum_images"
        ],
        "summary": "Delete One",
        "operationId": "route_photoalbum_images__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoalbumImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/plugins": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "Get All",
        "operationId": "route_plugins_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PluginsOut"
                  },
                  "type": "array",
                  "title": "Response Route Plugins Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Plugins"
        ],
        "summary": "Create One",
        "operationId": "route_plugins_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Plugins"
        ],
        "summary": "Delete All",
        "operationId": "route_plugins_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PluginsOut"
                  },
                  "type": "array",
                  "title": "Response Route Plugins Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/plugins/{item_id}": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "Get One",
        "operationId": "route_plugins__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Plugins"
        ],
        "summary": "Update One",
        "operationId": "route_plugins__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Plugins"
        ],
        "summary": "Delete One",
        "operationId": "route_plugins__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/plugins_categories": {
      "get": {
        "tags": [
          "Plugins_categories"
        ],
        "summary": "Get All",
        "operationId": "route_plugins_categories_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PluginsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Plugins Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Plugins_categories"
        ],
        "summary": "Create One",
        "operationId": "route_plugins_categories_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginsCategoriesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginsCategoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Plugins_categories"
        ],
        "summary": "Delete All",
        "operationId": "route_plugins_categories_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PluginsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Plugins Categories Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/plugins_categories/{item_id}": {
      "get": {
        "tags": [
          "Plugins_categories"
        ],
        "summary": "Get One",
        "operationId": "route_plugins_categories__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Plugins_categories"
        ],
        "summary": "Update One",
        "operationId": "route_plugins_categories__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginsCategoriesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Plugins_categories"
        ],
        "summary": "Delete One",
        "operationId": "route_plugins_categories__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/profiles": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Get All",
        "operationId": "route_profiles_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProfilesOut"
                  },
                  "type": "array",
                  "title": "Response Route Profiles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Profiles"
        ],
        "summary": "Create One",
        "operationId": "route_profiles_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfilesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Profiles"
        ],
        "summary": "Delete All",
        "operationId": "route_profiles_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProfilesOut"
                  },
                  "type": "array",
                  "title": "Response Route Profiles Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/profiles/{item_id}": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Get One",
        "operationId": "route_profiles__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Profiles"
        ],
        "summary": "Update One",
        "operationId": "route_profiles__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfilesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Profiles"
        ],
        "summary": "Delete One",
        "operationId": "route_profiles__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_basic": {
      "get": {
        "tags": [
          "Setup_basic"
        ],
        "summary": "Get All",
        "operationId": "route_setup_basic_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupBasicOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Basic Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Setup_basic"
        ],
        "summary": "Create One",
        "operationId": "route_setup_basic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupBasicIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupBasicOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_basic"
        ],
        "summary": "Delete All",
        "operationId": "route_setup_basic_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupBasicOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Basic Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_basic/{item_id}": {
      "get": {
        "tags": [
          "Setup_basic"
        ],
        "summary": "Get One",
        "operationId": "route_setup_basic__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupBasicOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Setup_basic"
        ],
        "summary": "Update One",
        "operationId": "route_setup_basic__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupBasicOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupBasicOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_basic"
        ],
        "summary": "Delete One",
        "operationId": "route_setup_basic__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupBasicOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_basic_receivers": {
      "get": {
        "tags": [
          "Setup_basic_receivers"
        ],
        "summary": "Get All",
        "operationId": "route_setup_basic_receivers_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupBasicReceiversOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Basic Receivers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Setup_basic_receivers"
        ],
        "summary": "Create One",
        "operationId": "route_setup_basic_receivers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupBasicReceiversIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupBasicReceiversOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_basic_receivers"
        ],
        "summary": "Delete All",
        "operationId": "route_setup_basic_receivers_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupBasicReceiversOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Basic Receivers Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_basic_receivers/{item_id}": {
      "get": {
        "tags": [
          "Setup_basic_receivers"
        ],
        "summary": "Get One",
        "operationId": "route_setup_basic_receivers__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupBasicReceiversOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Setup_basic_receivers"
        ],
        "summary": "Update One",
        "operationId": "route_setup_basic_receivers__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupBasicReceiversOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupBasicReceiversOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_basic_receivers"
        ],
        "summary": "Delete One",
        "operationId": "route_setup_basic_receivers__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupBasicReceiversOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_language": {
      "get": {
        "tags": [
          "Setup_language"
        ],
        "summary": "Get All",
        "operationId": "route_setup_language_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupLanguageOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Language Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Setup_language"
        ],
        "summary": "Create One",
        "operationId": "route_setup_language_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupLanguageIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupLanguageOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_language"
        ],
        "summary": "Delete All",
        "operationId": "route_setup_language_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupLanguageOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Language Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_language/{item_id}": {
      "get": {
        "tags": [
          "Setup_language"
        ],
        "summary": "Get One",
        "operationId": "route_setup_language__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupLanguageOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Setup_language"
        ],
        "summary": "Update One",
        "operationId": "route_setup_language__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupLanguageOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupLanguageOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_language"
        ],
        "summary": "Delete One",
        "operationId": "route_setup_language__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupLanguageOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_payment": {
      "get": {
        "tags": [
          "Setup_payment"
        ],
        "summary": "Get All",
        "operationId": "route_setup_payment_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupPaymentOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Payment Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Setup_payment"
        ],
        "summary": "Create One",
        "operationId": "route_setup_payment_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupPaymentIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupPaymentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_payment"
        ],
        "summary": "Delete All",
        "operationId": "route_setup_payment_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupPaymentOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Payment Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_payment/{item_id}": {
      "get": {
        "tags": [
          "Setup_payment"
        ],
        "summary": "Get One",
        "operationId": "route_setup_payment__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupPaymentOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Setup_payment"
        ],
        "summary": "Update One",
        "operationId": "route_setup_payment__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupPaymentOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupPaymentOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_payment"
        ],
        "summary": "Delete One",
        "operationId": "route_setup_payment__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupPaymentOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_site": {
      "get": {
        "tags": [
          "Setup_site"
        ],
        "summary": "Get All",
        "operationId": "route_setup_site_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupSiteOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Site Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Setup_site"
        ],
        "summary": "Create One",
        "operationId": "route_setup_site_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupSiteIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupSiteOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_site"
        ],
        "summary": "Delete All",
        "operationId": "route_setup_site_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SetupSiteOut"
                  },
                  "type": "array",
                  "title": "Response Route Setup Site Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/setup_site/{item_id}": {
      "get": {
        "tags": [
          "Setup_site"
        ],
        "summary": "Get One",
        "operationId": "route_setup_site__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupSiteOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Setup_site"
        ],
        "summary": "Update One",
        "operationId": "route_setup_site__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupSiteOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupSiteOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Setup_site"
        ],
        "summary": "Delete One",
        "operationId": "route_setup_site__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupSiteOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_categories": {
      "get": {
        "tags": [
          "Shop_categories"
        ],
        "summary": "Get All",
        "operationId": "route_shop_categories_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Shop_categories"
        ],
        "summary": "Create One",
        "operationId": "route_shop_categories_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCategoriesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCategoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_categories"
        ],
        "summary": "Delete All",
        "operationId": "route_shop_categories_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Categories Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_categories/{item_id}": {
      "get": {
        "tags": [
          "Shop_categories"
        ],
        "summary": "Get One",
        "operationId": "route_shop_categories__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Shop_categories"
        ],
        "summary": "Update One",
        "operationId": "route_shop_categories__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCategoriesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_categories"
        ],
        "summary": "Delete One",
        "operationId": "route_shop_categories__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_products": {
      "get": {
        "tags": [
          "Shop_products"
        ],
        "summary": "Get All",
        "operationId": "route_shop_products_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopProductsOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Products Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Shop_products"
        ],
        "summary": "Create One",
        "operationId": "route_shop_products_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopProductsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_products"
        ],
        "summary": "Delete All",
        "operationId": "route_shop_products_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopProductsOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Products Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_products/{item_id}": {
      "get": {
        "tags": [
          "Shop_products"
        ],
        "summary": "Get One",
        "operationId": "route_shop_products__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Shop_products"
        ],
        "summary": "Update One",
        "operationId": "route_shop_products__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopProductsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_products"
        ],
        "summary": "Delete One",
        "operationId": "route_shop_products__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_products_images": {
      "get": {
        "tags": [
          "Shop_products_images"
        ],
        "summary": "Get All",
        "operationId": "route_shop_products_images_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopProductsImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Products Images Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Shop_products_images"
        ],
        "summary": "Create One",
        "operationId": "route_shop_products_images_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopProductsImagesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductsImagesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_products_images"
        ],
        "summary": "Delete All",
        "operationId": "route_shop_products_images_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopProductsImagesOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Products Images Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_products_images/{item_id}": {
      "get": {
        "tags": [
          "Shop_products_images"
        ],
        "summary": "Get One",
        "operationId": "route_shop_products_images__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductsImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Shop_products_images"
        ],
        "summary": "Update One",
        "operationId": "route_shop_products_images__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopProductsImagesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductsImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_products_images"
        ],
        "summary": "Delete One",
        "operationId": "route_shop_products_images__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductsImagesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_productvargroup": {
      "get": {
        "tags": [
          "Shop_productvargroup"
        ],
        "summary": "Get All",
        "operationId": "route_shop_productvargroup_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopProductvargroupOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Productvargroup Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Shop_productvargroup"
        ],
        "summary": "Create One",
        "operationId": "route_shop_productvargroup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopProductvargroupIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductvargroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_productvargroup"
        ],
        "summary": "Delete All",
        "operationId": "route_shop_productvargroup_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopProductvargroupOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Productvargroup Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_productvargroup/{item_id}": {
      "get": {
        "tags": [
          "Shop_productvargroup"
        ],
        "summary": "Get One",
        "operationId": "route_shop_productvargroup__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductvargroupOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Shop_productvargroup"
        ],
        "summary": "Update One",
        "operationId": "route_shop_productvargroup__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopProductvargroupOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductvargroupOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_productvargroup"
        ],
        "summary": "Delete One",
        "operationId": "route_shop_productvargroup__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductvargroupOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_setup": {
      "get": {
        "tags": [
          "Shop_setup"
        ],
        "summary": "Get All",
        "operationId": "route_shop_setup_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopSetupOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Setup Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Shop_setup"
        ],
        "summary": "Create One",
        "operationId": "route_shop_setup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopSetupIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopSetupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_setup"
        ],
        "summary": "Delete All",
        "operationId": "route_shop_setup_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopSetupOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Setup Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_setup/{item_id}": {
      "get": {
        "tags": [
          "Shop_setup"
        ],
        "summary": "Get One",
        "operationId": "route_shop_setup__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopSetupOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Shop_setup"
        ],
        "summary": "Update One",
        "operationId": "route_shop_setup__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopSetupOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopSetupOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_setup"
        ],
        "summary": "Delete One",
        "operationId": "route_shop_setup__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopSetupOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_shippings": {
      "get": {
        "tags": [
          "Shop_shippings"
        ],
        "summary": "Get All",
        "operationId": "route_shop_shippings_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopShippingsOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Shippings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Shop_shippings"
        ],
        "summary": "Create One",
        "operationId": "route_shop_shippings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopShippingsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopShippingsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_shippings"
        ],
        "summary": "Delete All",
        "operationId": "route_shop_shippings_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopShippingsOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Shippings Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_shippings/{item_id}": {
      "get": {
        "tags": [
          "Shop_shippings"
        ],
        "summary": "Get One",
        "operationId": "route_shop_shippings__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopShippingsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Shop_shippings"
        ],
        "summary": "Update One",
        "operationId": "route_shop_shippings__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopShippingsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopShippingsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_shippings"
        ],
        "summary": "Delete One",
        "operationId": "route_shop_shippings__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopShippingsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_vargroups": {
      "get": {
        "tags": [
          "Shop_vargroups"
        ],
        "summary": "Get All",
        "operationId": "route_shop_vargroups_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopVargroupsOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Vargroups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Shop_vargroups"
        ],
        "summary": "Create One",
        "operationId": "route_shop_vargroups_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopVargroupsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopVargroupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_vargroups"
        ],
        "summary": "Delete All",
        "operationId": "route_shop_vargroups_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopVargroupsOut"
                  },
                  "type": "array",
                  "title": "Response Route Shop Vargroups Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/shop_vargroups/{item_id}": {
      "get": {
        "tags": [
          "Shop_vargroups"
        ],
        "summary": "Get One",
        "operationId": "route_shop_vargroups__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopVargroupsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Shop_vargroups"
        ],
        "summary": "Update One",
        "operationId": "route_shop_vargroups__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopVargroupsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopVargroupsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shop_vargroups"
        ],
        "summary": "Delete One",
        "operationId": "route_shop_vargroups__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopVargroupsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tournament_score": {
      "get": {
        "tags": [
          "Sim_tournament_score"
        ],
        "summary": "Get All",
        "operationId": "route_sim_tournament_score_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimTournamentScoreOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tournament Score Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sim_tournament_score"
        ],
        "summary": "Create One",
        "operationId": "route_sim_tournament_score_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimTournamentScoreIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentScoreOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tournament_score"
        ],
        "summary": "Delete All",
        "operationId": "route_sim_tournament_score_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimTournamentScoreOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tournament Score Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tournament_score/{item_id}": {
      "get": {
        "tags": [
          "Sim_tournament_score"
        ],
        "summary": "Get One",
        "operationId": "route_sim_tournament_score__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentScoreOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sim_tournament_score"
        ],
        "summary": "Update One",
        "operationId": "route_sim_tournament_score__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimTournamentScoreOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentScoreOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tournament_score"
        ],
        "summary": "Delete One",
        "operationId": "route_sim_tournament_score__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentScoreOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tournament_signups": {
      "get": {
        "tags": [
          "Sim_tournament_signups"
        ],
        "summary": "Get All",
        "operationId": "route_sim_tournament_signups_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimTournamentSignupsOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tournament Signups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sim_tournament_signups"
        ],
        "summary": "Create One",
        "operationId": "route_sim_tournament_signups_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimTournamentSignupsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentSignupsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tournament_signups"
        ],
        "summary": "Delete All",
        "operationId": "route_sim_tournament_signups_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimTournamentSignupsOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tournament Signups Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tournament_signups/{item_id}": {
      "get": {
        "tags": [
          "Sim_tournament_signups"
        ],
        "summary": "Get One",
        "operationId": "route_sim_tournament_signups__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentSignupsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sim_tournament_signups"
        ],
        "summary": "Update One",
        "operationId": "route_sim_tournament_signups__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimTournamentSignupsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentSignupsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tournament_signups"
        ],
        "summary": "Delete One",
        "operationId": "route_sim_tournament_signups__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentSignupsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tournaments": {
      "get": {
        "tags": [
          "Sim_tournaments"
        ],
        "summary": "Get All",
        "operationId": "route_sim_tournaments_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimTournamentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tournaments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sim_tournaments"
        ],
        "summary": "Create One",
        "operationId": "route_sim_tournaments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimTournamentsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tournaments"
        ],
        "summary": "Delete All",
        "operationId": "route_sim_tournaments_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimTournamentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tournaments Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tournaments/{item_id}": {
      "get": {
        "tags": [
          "Sim_tournaments"
        ],
        "summary": "Get One",
        "operationId": "route_sim_tournaments__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sim_tournaments"
        ],
        "summary": "Update One",
        "operationId": "route_sim_tournaments__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimTournamentsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tournaments"
        ],
        "summary": "Delete One",
        "operationId": "route_sim_tournaments__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTournamentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tourplayers": {
      "get": {
        "tags": [
          "Sim_tourplayers"
        ],
        "summary": "Get All",
        "operationId": "route_sim_tourplayers_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimTourplayersOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tourplayers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sim_tourplayers"
        ],
        "summary": "Create One",
        "operationId": "route_sim_tourplayers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimTourplayersIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTourplayersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tourplayers"
        ],
        "summary": "Delete All",
        "operationId": "route_sim_tourplayers_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimTourplayersOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tourplayers Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tourplayers/{item_id}": {
      "get": {
        "tags": [
          "Sim_tourplayers"
        ],
        "summary": "Get One",
        "operationId": "route_sim_tourplayers__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTourplayersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sim_tourplayers"
        ],
        "summary": "Update One",
        "operationId": "route_sim_tourplayers__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimTourplayersOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTourplayersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tourplayers"
        ],
        "summary": "Delete One",
        "operationId": "route_sim_tourplayers__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimTourplayersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tours": {
      "get": {
        "tags": [
          "Sim_tours"
        ],
        "summary": "Get All",
        "operationId": "route_sim_tours_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimToursOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tours Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sim_tours"
        ],
        "summary": "Create One",
        "operationId": "route_sim_tours_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimToursIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimToursOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tours"
        ],
        "summary": "Delete All",
        "operationId": "route_sim_tours_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SimToursOut"
                  },
                  "type": "array",
                  "title": "Response Route Sim Tours Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sim_tours/{item_id}": {
      "get": {
        "tags": [
          "Sim_tours"
        ],
        "summary": "Get One",
        "operationId": "route_sim_tours__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimToursOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sim_tours"
        ],
        "summary": "Update One",
        "operationId": "route_sim_tours__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimToursOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimToursOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sim_tours"
        ],
        "summary": "Delete One",
        "operationId": "route_sim_tours__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimToursOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/siteusers": {
      "get": {
        "tags": [
          "Siteusers"
        ],
        "summary": "Get All",
        "operationId": "route_siteusers_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SiteUserOut"
                  },
                  "type": "array",
                  "title": "Response Route Siteusers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Siteusers"
        ],
        "summary": "Create One",
        "operationId": "route_siteusers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUserIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteUserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Siteusers"
        ],
        "summary": "Delete All",
        "operationId": "route_siteusers_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SiteUserOut"
                  },
                  "type": "array",
                  "title": "Response Route Siteusers Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/siteusers/{item_id}": {
      "get": {
        "tags": [
          "Siteusers"
        ],
        "summary": "Get One",
        "operationId": "route_siteusers__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteUserOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Siteusers"
        ],
        "summary": "Update One",
        "operationId": "route_siteusers__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUserOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteUserOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Siteusers"
        ],
        "summary": "Delete One",
        "operationId": "route_siteusers__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteUserOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/siteusers_pwdtemp": {
      "get": {
        "tags": [
          "Siteusers_pwdtemp"
        ],
        "summary": "Get All",
        "operationId": "route_siteusers_pwdtemp_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SiteusersPwdtempOut"
                  },
                  "type": "array",
                  "title": "Response Route Siteusers Pwdtemp Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Siteusers_pwdtemp"
        ],
        "summary": "Create One",
        "operationId": "route_siteusers_pwdtemp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteusersPwdtempIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteusersPwdtempOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Siteusers_pwdtemp"
        ],
        "summary": "Delete All",
        "operationId": "route_siteusers_pwdtemp_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SiteusersPwdtempOut"
                  },
                  "type": "array",
                  "title": "Response Route Siteusers Pwdtemp Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/siteusers_pwdtemp/{item_id}": {
      "get": {
        "tags": [
          "Siteusers_pwdtemp"
        ],
        "summary": "Get One",
        "operationId": "route_siteusers_pwdtemp__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteusersPwdtempOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Siteusers_pwdtemp"
        ],
        "summary": "Update One",
        "operationId": "route_siteusers_pwdtemp__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteusersPwdtempOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteusersPwdtempOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Siteusers_pwdtemp"
        ],
        "summary": "Delete One",
        "operationId": "route_siteusers_pwdtemp__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteusersPwdtempOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/siteusers_subscr": {
      "get": {
        "tags": [
          "Siteusers_subscr"
        ],
        "summary": "Get All",
        "operationId": "route_siteusers_subscr_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SiteusersSubscrOut"
                  },
                  "type": "array",
                  "title": "Response Route Siteusers Subscr Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Siteusers_subscr"
        ],
        "summary": "Create One",
        "operationId": "route_siteusers_subscr_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteusersSubscrIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteusersSubscrOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Siteusers_subscr"
        ],
        "summary": "Delete All",
        "operationId": "route_siteusers_subscr_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SiteusersSubscrOut"
                  },
                  "type": "array",
                  "title": "Response Route Siteusers Subscr Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/siteusers_subscr/{item_id}": {
      "get": {
        "tags": [
          "Siteusers_subscr"
        ],
        "summary": "Get One",
        "operationId": "route_siteusers_subscr__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteusersSubscrOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Siteusers_subscr"
        ],
        "summary": "Update One",
        "operationId": "route_siteusers_subscr__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteusersSubscrOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteusersSubscrOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Siteusers_subscr"
        ],
        "summary": "Delete One",
        "operationId": "route_siteusers_subscr__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteusersSubscrOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sponsors": {
      "get": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Get All",
        "operationId": "route_sponsors_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SponsorsOut"
                  },
                  "type": "array",
                  "title": "Response Route Sponsors Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Create One",
        "operationId": "route_sponsors_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsorsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsorsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Delete All",
        "operationId": "route_sponsors_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SponsorsOut"
                  },
                  "type": "array",
                  "title": "Response Route Sponsors Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sponsors/{item_id}": {
      "get": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Get One",
        "operationId": "route_sponsors__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsorsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Update One",
        "operationId": "route_sponsors__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsorsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsorsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sponsors"
        ],
        "summary": "Delete One",
        "operationId": "route_sponsors__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsorsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sponsors_categories": {
      "get": {
        "tags": [
          "Sponsors_categories"
        ],
        "summary": "Get All",
        "operationId": "route_sponsors_categories_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SponsorsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Sponsors Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sponsors_categories"
        ],
        "summary": "Create One",
        "operationId": "route_sponsors_categories_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsorsCategoriesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsorsCategoriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sponsors_categories"
        ],
        "summary": "Delete All",
        "operationId": "route_sponsors_categories_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SponsorsCategoriesOut"
                  },
                  "type": "array",
                  "title": "Response Route Sponsors Categories Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sponsors_categories/{item_id}": {
      "get": {
        "tags": [
          "Sponsors_categories"
        ],
        "summary": "Get One",
        "operationId": "route_sponsors_categories__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsorsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sponsors_categories"
        ],
        "summary": "Update One",
        "operationId": "route_sponsors_categories__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsorsCategoriesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsorsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sponsors_categories"
        ],
        "summary": "Delete One",
        "operationId": "route_sponsors_categories__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsorsCategoriesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/status_courseclub": {
      "get": {
        "tags": [
          "Status_courseclub"
        ],
        "summary": "Get All",
        "operationId": "route_status_courseclub_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StatusCourseclubOut"
                  },
                  "type": "array",
                  "title": "Response Route Status Courseclub Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Status_courseclub"
        ],
        "summary": "Create One",
        "operationId": "route_status_courseclub_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusCourseclubIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCourseclubOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Status_courseclub"
        ],
        "summary": "Delete All",
        "operationId": "route_status_courseclub_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StatusCourseclubOut"
                  },
                  "type": "array",
                  "title": "Response Route Status Courseclub Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/status_courseclub/{item_id}": {
      "get": {
        "tags": [
          "Status_courseclub"
        ],
        "summary": "Get One",
        "operationId": "route_status_courseclub__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCourseclubOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Status_courseclub"
        ],
        "summary": "Update One",
        "operationId": "route_status_courseclub__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusCourseclubOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCourseclubOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Status_courseclub"
        ],
        "summary": "Delete One",
        "operationId": "route_status_courseclub__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCourseclubOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/status_info": {
      "get": {
        "tags": [
          "Status_info"
        ],
        "summary": "Get All",
        "operationId": "route_status_info_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StatusInfoOut"
                  },
                  "type": "array",
                  "title": "Response Route Status Info Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Status_info"
        ],
        "summary": "Create One",
        "operationId": "route_status_info_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusInfoIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Status_info"
        ],
        "summary": "Delete All",
        "operationId": "route_status_info_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StatusInfoOut"
                  },
                  "type": "array",
                  "title": "Response Route Status Info Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/status_info/{item_id}": {
      "get": {
        "tags": [
          "Status_info"
        ],
        "summary": "Get One",
        "operationId": "route_status_info__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfoOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Status_info"
        ],
        "summary": "Update One",
        "operationId": "route_status_info__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusInfoOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfoOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Status_info"
        ],
        "summary": "Delete One",
        "operationId": "route_status_info__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfoOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/taxcodes": {
      "get": {
        "tags": [
          "Taxcodes"
        ],
        "summary": "Get All",
        "operationId": "route_taxcodes_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaxcodesOut"
                  },
                  "type": "array",
                  "title": "Response Route Taxcodes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Taxcodes"
        ],
        "summary": "Create One",
        "operationId": "route_taxcodes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxcodesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxcodesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Taxcodes"
        ],
        "summary": "Delete All",
        "operationId": "route_taxcodes_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaxcodesOut"
                  },
                  "type": "array",
                  "title": "Response Route Taxcodes Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/taxcodes/{item_id}": {
      "get": {
        "tags": [
          "Taxcodes"
        ],
        "summary": "Get One",
        "operationId": "route_taxcodes__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxcodesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Taxcodes"
        ],
        "summary": "Update One",
        "operationId": "route_taxcodes__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxcodesOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxcodesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Taxcodes"
        ],
        "summary": "Delete One",
        "operationId": "route_taxcodes__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxcodesOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/template_content": {
      "get": {
        "tags": [
          "Template_content"
        ],
        "summary": "Get All",
        "operationId": "route_template_content_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TemplateContentOut"
                  },
                  "type": "array",
                  "title": "Response Route Template Content Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Template_content"
        ],
        "summary": "Create One",
        "operationId": "route_template_content_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateContentIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateContentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Template_content"
        ],
        "summary": "Delete All",
        "operationId": "route_template_content_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TemplateContentOut"
                  },
                  "type": "array",
                  "title": "Response Route Template Content Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/template_content/{item_id}": {
      "get": {
        "tags": [
          "Template_content"
        ],
        "summary": "Get One",
        "operationId": "route_template_content__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateContentOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Template_content"
        ],
        "summary": "Update One",
        "operationId": "route_template_content__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateContentOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateContentOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Template_content"
        ],
        "summary": "Delete One",
        "operationId": "route_template_content__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateContentOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tour_players": {
      "get": {
        "tags": [
          "Tour_players"
        ],
        "summary": "Get All",
        "operationId": "route_tour_players_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TourPlayersOut"
                  },
                  "type": "array",
                  "title": "Response Route Tour Players Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tour_players"
        ],
        "summary": "Create One",
        "operationId": "route_tour_players_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourPlayersIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourPlayersOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tour_players"
        ],
        "summary": "Delete All",
        "operationId": "route_tour_players_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TourPlayersOut"
                  },
                  "type": "array",
                  "title": "Response Route Tour Players Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tour_players/{item_id}": {
      "get": {
        "tags": [
          "Tour_players"
        ],
        "summary": "Get One",
        "operationId": "route_tour_players__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourPlayersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tour_players"
        ],
        "summary": "Update One",
        "operationId": "route_tour_players__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourPlayersOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourPlayersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tour_players"
        ],
        "summary": "Delete One",
        "operationId": "route_tour_players__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourPlayersOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tour_scores": {
      "get": {
        "tags": [
          "Tour_scores"
        ],
        "summary": "Get All",
        "operationId": "route_tour_scores_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TourScoresOut"
                  },
                  "type": "array",
                  "title": "Response Route Tour Scores Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tour_scores"
        ],
        "summary": "Create One",
        "operationId": "route_tour_scores_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourScoresIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourScoresOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tour_scores"
        ],
        "summary": "Delete All",
        "operationId": "route_tour_scores_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TourScoresOut"
                  },
                  "type": "array",
                  "title": "Response Route Tour Scores Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tour_scores/{item_id}": {
      "get": {
        "tags": [
          "Tour_scores"
        ],
        "summary": "Get One",
        "operationId": "route_tour_scores__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourScoresOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tour_scores"
        ],
        "summary": "Update One",
        "operationId": "route_tour_scores__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourScoresOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourScoresOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tour_scores"
        ],
        "summary": "Delete One",
        "operationId": "route_tour_scores__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TourScoresOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get All",
        "operationId": "route_tournaments_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Create One",
        "operationId": "route_tournaments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete All",
        "operationId": "route_tournaments_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments/{item_id}": {
      "get": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Get One",
        "operationId": "route_tournaments__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Update One",
        "operationId": "route_tournaments__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments"
        ],
        "summary": "Delete One",
        "operationId": "route_tournaments__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_list": {
      "get": {
        "tags": [
          "Tournaments_list"
        ],
        "summary": "Get All",
        "operationId": "route_tournaments_list_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsListOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments List Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tournaments_list"
        ],
        "summary": "Create One",
        "operationId": "route_tournaments_list_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsListIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsListOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_list"
        ],
        "summary": "Delete All",
        "operationId": "route_tournaments_list_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsListOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments List Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_list/{item_id}": {
      "get": {
        "tags": [
          "Tournaments_list"
        ],
        "summary": "Get One",
        "operationId": "route_tournaments_list__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsListOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tournaments_list"
        ],
        "summary": "Update One",
        "operationId": "route_tournaments_list__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsListOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsListOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_list"
        ],
        "summary": "Delete One",
        "operationId": "route_tournaments_list__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsListOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_participants": {
      "get": {
        "tags": [
          "Tournaments_participants"
        ],
        "summary": "Get All",
        "operationId": "route_tournaments_participants_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsParticipantsOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Participants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tournaments_participants"
        ],
        "summary": "Create One",
        "operationId": "route_tournaments_participants_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsParticipantsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsParticipantsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_participants"
        ],
        "summary": "Delete All",
        "operationId": "route_tournaments_participants_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsParticipantsOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Participants Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_participants/{item_id}": {
      "get": {
        "tags": [
          "Tournaments_participants"
        ],
        "summary": "Get One",
        "operationId": "route_tournaments_participants__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsParticipantsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tournaments_participants"
        ],
        "summary": "Update One",
        "operationId": "route_tournaments_participants__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsParticipantsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsParticipantsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_participants"
        ],
        "summary": "Delete One",
        "operationId": "route_tournaments_participants__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsParticipantsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_results": {
      "get": {
        "tags": [
          "Tournaments_results"
        ],
        "summary": "Get All",
        "operationId": "route_tournaments_results_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsResultsOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Results Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tournaments_results"
        ],
        "summary": "Create One",
        "operationId": "route_tournaments_results_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsResultsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_results"
        ],
        "summary": "Delete All",
        "operationId": "route_tournaments_results_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsResultsOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Results Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_results/{item_id}": {
      "get": {
        "tags": [
          "Tournaments_results"
        ],
        "summary": "Get One",
        "operationId": "route_tournaments_results__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsResultsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tournaments_results"
        ],
        "summary": "Update One",
        "operationId": "route_tournaments_results__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsResultsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsResultsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_results"
        ],
        "summary": "Delete One",
        "operationId": "route_tournaments_results__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsResultsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_score": {
      "get": {
        "tags": [
          "Tournaments_score"
        ],
        "summary": "Get All",
        "operationId": "route_tournaments_score_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsScoreOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Score Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tournaments_score"
        ],
        "summary": "Create One",
        "operationId": "route_tournaments_score_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsScoreIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsScoreOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_score"
        ],
        "summary": "Delete All",
        "operationId": "route_tournaments_score_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsScoreOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Score Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_score/{item_id}": {
      "get": {
        "tags": [
          "Tournaments_score"
        ],
        "summary": "Get One",
        "operationId": "route_tournaments_score__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsScoreOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tournaments_score"
        ],
        "summary": "Update One",
        "operationId": "route_tournaments_score__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsScoreOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsScoreOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_score"
        ],
        "summary": "Delete One",
        "operationId": "route_tournaments_score__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsScoreOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_startlists": {
      "get": {
        "tags": [
          "Tournaments_startlists"
        ],
        "summary": "Get All",
        "operationId": "route_tournaments_startlists_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsStartlistsOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Startlists Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tournaments_startlists"
        ],
        "summary": "Create One",
        "operationId": "route_tournaments_startlists_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsStartlistsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsStartlistsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_startlists"
        ],
        "summary": "Delete All",
        "operationId": "route_tournaments_startlists_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TournamentsStartlistsOut"
                  },
                  "type": "array",
                  "title": "Response Route Tournaments Startlists Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tournaments_startlists/{item_id}": {
      "get": {
        "tags": [
          "Tournaments_startlists"
        ],
        "summary": "Get One",
        "operationId": "route_tournaments_startlists__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsStartlistsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tournaments_startlists"
        ],
        "summary": "Update One",
        "operationId": "route_tournaments_startlists__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentsStartlistsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsStartlistsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tournaments_startlists"
        ],
        "summary": "Delete One",
        "operationId": "route_tournaments_startlists__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentsStartlistsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/widgets": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "Get All",
        "operationId": "route_widgets_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WidgetsOut"
                  },
                  "type": "array",
                  "title": "Response Route Widgets Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Widgets"
        ],
        "summary": "Create One",
        "operationId": "route_widgets_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WidgetsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetsOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Widgets"
        ],
        "summary": "Delete All",
        "operationId": "route_widgets_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WidgetsOut"
                  },
                  "type": "array",
                  "title": "Response Route Widgets Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/widgets/{item_id}": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "Get One",
        "operationId": "route_widgets__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "Update One",
        "operationId": "route_widgets__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WidgetsOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Widgets"
        ],
        "summary": "Delete One",
        "operationId": "route_widgets__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetsOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/widgets_placed": {
      "get": {
        "tags": [
          "Widgets_placed"
        ],
        "summary": "Get All",
        "operationId": "route_widgets_placed_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Skip",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WidgetsPlacedOut"
                  },
                  "type": "array",
                  "title": "Response Route Widgets Placed Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Widgets_placed"
        ],
        "summary": "Create One",
        "operationId": "route_widgets_placed_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WidgetsPlacedIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetsPlacedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Widgets_placed"
        ],
        "summary": "Delete All",
        "operationId": "route_widgets_placed_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WidgetsPlacedOut"
                  },
                  "type": "array",
                  "title": "Response Route Widgets Placed Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/widgets_placed/{item_id}": {
      "get": {
        "tags": [
          "Widgets_placed"
        ],
        "summary": "Get One",
        "operationId": "route_widgets_placed__item_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetsPlacedOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Widgets_placed"
        ],
        "summary": "Update One",
        "operationId": "route_widgets_placed__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WidgetsPlacedOutUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetsPlacedOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Widgets_placed"
        ],
        "summary": "Delete One",
        "operationId": "route_widgets_placed__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            },
            "name": "item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetsPlacedOut"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "detail": "Item not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ActivitiesDateTimeIn": {
        "properties": {
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "actDate": {
            "type": "string",
            "format": "date",
            "title": "Actdate"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "time_to": {
            "type": "string",
            "title": "Time To"
          },
          "actDay": {
            "type": "integer",
            "title": "Actday"
          }
        },
        "type": "object",
        "required": [
          "activityID",
          "actDate"
        ],
        "title": "ActivitiesDateTimeIn"
      },
      "ActivitiesDateTimeOut": {
        "properties": {
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "actDate": {
            "type": "string",
            "format": "date",
            "title": "Actdate"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "time_to": {
            "type": "string",
            "title": "Time To"
          },
          "actDay": {
            "type": "integer",
            "title": "Actday"
          }
        },
        "type": "object",
        "required": [
          "activityID",
          "actDate"
        ],
        "title": "ActivitiesDateTimeOut"
      },
      "ActivitiesDateTimeOutUpdate": {
        "properties": {
          "actDate": {
            "type": "string",
            "format": "date",
            "title": "Actdate"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "time_to": {
            "type": "string",
            "title": "Time To"
          },
          "actDay": {
            "type": "integer",
            "title": "Actday"
          }
        },
        "type": "object",
        "required": [
          "actDate",
          "time_from",
          "time_to",
          "actDay"
        ],
        "title": "ActivitiesDateTimeOutUpdate"
      },
      "ActivitiesIn": {
        "properties": {
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "boolShow": {
            "type": "boolean",
            "title": "Boolshow"
          },
          "activityName": {
            "type": "string",
            "title": "Activityname"
          },
          "actAlias": {
            "type": "string",
            "title": "Actalias"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "maxParticipants": {
            "type": "integer",
            "title": "Maxparticipants"
          },
          "boolWaitlist": {
            "type": "boolean",
            "title": "Boolwaitlist"
          },
          "partReserved": {
            "type": "integer",
            "title": "Partreserved"
          },
          "date_start": {
            "type": "string",
            "format": "date-time",
            "title": "Date Start"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "time_to": {
            "type": "string",
            "title": "Time To"
          },
          "boolOnlinePay": {
            "type": "boolean",
            "title": "Boolonlinepay"
          },
          "boolOnlineSignup": {
            "type": "boolean",
            "title": "Boolonlinesignup"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "priceGroupID": {
            "type": "integer",
            "title": "Pricegroupid"
          },
          "signup_from": {
            "type": "string",
            "format": "date-time",
            "title": "Signup From"
          },
          "signup_to": {
            "type": "string",
            "format": "date-time",
            "title": "Signup To"
          },
          "actDescription": {
            "type": "string",
            "title": "Actdescription"
          },
          "boolSignupToMail": {
            "type": "boolean",
            "title": "Boolsignuptomail"
          },
          "signupMailTo": {
            "type": "string",
            "title": "Signupmailto"
          },
          "boolVTG": {
            "type": "boolean",
            "title": "Boolvtg"
          },
          "boolVTGforward": {
            "type": "boolean",
            "title": "Boolvtgforward"
          },
          "payAccount": {
            "type": "integer",
            "title": "Payaccount"
          },
          "boolMemberRequired": {
            "type": "boolean",
            "title": "Boolmemberrequired"
          },
          "actLocation": {
            "type": "string",
            "title": "Actlocation"
          },
          "field_borrowEquipment": {
            "type": "boolean",
            "title": "Field Borrowequipment"
          }
        },
        "type": "object",
        "required": [
          "listID",
          "boolShow",
          "activityName",
          "boolOnlinePay",
          "boolOnlineSignup"
        ],
        "title": "ActivitiesIn"
      },
      "ActivitiesOut": {
        "properties": {
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "boolShow": {
            "type": "boolean",
            "title": "Boolshow"
          },
          "activityName": {
            "type": "string",
            "title": "Activityname"
          },
          "actAlias": {
            "type": "string",
            "title": "Actalias"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "maxParticipants": {
            "type": "integer",
            "title": "Maxparticipants"
          },
          "boolWaitlist": {
            "type": "boolean",
            "title": "Boolwaitlist"
          },
          "partReserved": {
            "type": "integer",
            "title": "Partreserved"
          },
          "date_start": {
            "type": "string",
            "format": "date-time",
            "title": "Date Start"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "time_to": {
            "type": "string",
            "title": "Time To"
          },
          "boolOnlinePay": {
            "type": "boolean",
            "title": "Boolonlinepay"
          },
          "boolOnlineSignup": {
            "type": "boolean",
            "title": "Boolonlinesignup"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "priceGroupID": {
            "type": "integer",
            "title": "Pricegroupid"
          },
          "signup_from": {
            "type": "string",
            "format": "date-time",
            "title": "Signup From"
          },
          "signup_to": {
            "type": "string",
            "format": "date-time",
            "title": "Signup To"
          },
          "actDescription": {
            "type": "string",
            "title": "Actdescription"
          },
          "boolSignupToMail": {
            "type": "boolean",
            "title": "Boolsignuptomail"
          },
          "signupMailTo": {
            "type": "string",
            "title": "Signupmailto"
          },
          "boolVTG": {
            "type": "boolean",
            "title": "Boolvtg"
          },
          "boolVTGforward": {
            "type": "boolean",
            "title": "Boolvtgforward"
          },
          "payAccount": {
            "type": "integer",
            "title": "Payaccount"
          },
          "boolMemberRequired": {
            "type": "boolean",
            "title": "Boolmemberrequired"
          },
          "actLocation": {
            "type": "string",
            "title": "Actlocation"
          },
          "field_borrowEquipment": {
            "type": "boolean",
            "title": "Field Borrowequipment"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          }
        },
        "type": "object",
        "required": [
          "listID",
          "boolShow",
          "activityName",
          "boolOnlinePay",
          "boolOnlineSignup",
          "activityID",
          "date_created",
          "created_by"
        ],
        "title": "ActivitiesOut"
      },
      "ActivitiesOutUpdate": {
        "properties": {
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "boolShow": {
            "type": "boolean",
            "title": "Boolshow"
          },
          "activityName": {
            "type": "string",
            "title": "Activityname"
          },
          "actAlias": {
            "type": "string",
            "title": "Actalias"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "maxParticipants": {
            "type": "integer",
            "title": "Maxparticipants"
          },
          "boolWaitlist": {
            "type": "boolean",
            "title": "Boolwaitlist"
          },
          "partReserved": {
            "type": "integer",
            "title": "Partreserved"
          },
          "date_start": {
            "type": "string",
            "format": "date-time",
            "title": "Date Start"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "time_to": {
            "type": "string",
            "title": "Time To"
          },
          "boolOnlinePay": {
            "type": "boolean",
            "title": "Boolonlinepay"
          },
          "boolOnlineSignup": {
            "type": "boolean",
            "title": "Boolonlinesignup"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "priceGroupID": {
            "type": "integer",
            "title": "Pricegroupid"
          },
          "signup_from": {
            "type": "string",
            "format": "date-time",
            "title": "Signup From"
          },
          "signup_to": {
            "type": "string",
            "format": "date-time",
            "title": "Signup To"
          },
          "actDescription": {
            "type": "string",
            "title": "Actdescription"
          },
          "boolSignupToMail": {
            "type": "boolean",
            "title": "Boolsignuptomail"
          },
          "signupMailTo": {
            "type": "string",
            "title": "Signupmailto"
          },
          "boolVTG": {
            "type": "boolean",
            "title": "Boolvtg"
          },
          "boolVTGforward": {
            "type": "boolean",
            "title": "Boolvtgforward"
          },
          "payAccount": {
            "type": "integer",
            "title": "Payaccount"
          },
          "boolMemberRequired": {
            "type": "boolean",
            "title": "Boolmemberrequired"
          },
          "actLocation": {
            "type": "string",
            "title": "Actlocation"
          },
          "field_borrowEquipment": {
            "type": "boolean",
            "title": "Field Borrowequipment"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          }
        },
        "type": "object",
        "required": [
          "listID",
          "boolShow",
          "activityName",
          "actAlias",
          "location",
          "maxParticipants",
          "boolWaitlist",
          "partReserved",
          "date_start",
          "time_from",
          "time_to",
          "boolOnlinePay",
          "boolOnlineSignup",
          "formID",
          "priceGroupID",
          "signup_from",
          "signup_to",
          "actDescription",
          "boolSignupToMail",
          "signupMailTo",
          "boolVTG",
          "boolVTGforward",
          "payAccount",
          "boolMemberRequired",
          "actLocation",
          "field_borrowEquipment",
          "date_created",
          "created_by",
          "date_modified",
          "modified_by"
        ],
        "title": "ActivitiesOutUpdate"
      },
      "ActivitiesParticipantsIn": {
        "properties": {
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "boolSuConfirmed": {
            "type": "integer",
            "title": "Boolsuconfirmed"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "pricecat": {
            "type": "string",
            "title": "Pricecat"
          },
          "onWaitlist": {
            "type": "integer",
            "title": "Onwaitlist"
          },
          "parentname": {
            "type": "string",
            "title": "Parentname"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "sname": {
            "type": "string",
            "title": "Sname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "memberID": {
            "type": "string",
            "title": "Memberid"
          },
          "bornyear": {
            "type": "string",
            "title": "Bornyear"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "pcodecity": {
            "type": "string",
            "title": "Pcodecity"
          },
          "postcode": {
            "type": "string",
            "title": "Postcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "telephone": {
            "type": "string",
            "title": "Telephone"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "homeClub": {
            "type": "string",
            "title": "Homeclub"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "extraInfo": {
            "type": "string",
            "title": "Extrainfo"
          },
          "date_signup": {
            "type": "integer",
            "title": "Date Signup"
          },
          "signupKey": {
            "type": "string",
            "title": "Signupkey"
          },
          "vtgMembership": {
            "type": "integer",
            "title": "Vtgmembership"
          },
          "memberByVtg": {
            "type": "integer",
            "title": "Memberbyvtg"
          },
          "parentemail": {
            "type": "string",
            "title": "Parentemail"
          },
          "parentphone": {
            "type": "string",
            "title": "Parentphone"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          }
        },
        "type": "object",
        "title": "ActivitiesParticipantsIn"
      },
      "ActivitiesParticipantsOut": {
        "properties": {
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "boolSuConfirmed": {
            "type": "integer",
            "title": "Boolsuconfirmed"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "pricecat": {
            "type": "string",
            "title": "Pricecat"
          },
          "onWaitlist": {
            "type": "integer",
            "title": "Onwaitlist"
          },
          "parentname": {
            "type": "string",
            "title": "Parentname"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "sname": {
            "type": "string",
            "title": "Sname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "memberID": {
            "type": "string",
            "title": "Memberid"
          },
          "bornyear": {
            "type": "string",
            "title": "Bornyear"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "pcodecity": {
            "type": "string",
            "title": "Pcodecity"
          },
          "postcode": {
            "type": "string",
            "title": "Postcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "telephone": {
            "type": "string",
            "title": "Telephone"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "homeClub": {
            "type": "string",
            "title": "Homeclub"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "extraInfo": {
            "type": "string",
            "title": "Extrainfo"
          },
          "date_signup": {
            "type": "integer",
            "title": "Date Signup"
          },
          "signupKey": {
            "type": "string",
            "title": "Signupkey"
          },
          "vtgMembership": {
            "type": "integer",
            "title": "Vtgmembership"
          },
          "memberByVtg": {
            "type": "integer",
            "title": "Memberbyvtg"
          },
          "parentemail": {
            "type": "string",
            "title": "Parentemail"
          },
          "parentphone": {
            "type": "string",
            "title": "Parentphone"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          }
        },
        "type": "object",
        "required": [
          "participantID"
        ],
        "title": "ActivitiesParticipantsOut"
      },
      "ActivitiesParticipantsOutUpdate": {
        "properties": {
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "boolSuConfirmed": {
            "type": "integer",
            "title": "Boolsuconfirmed"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "pricecat": {
            "type": "string",
            "title": "Pricecat"
          },
          "onWaitlist": {
            "type": "integer",
            "title": "Onwaitlist"
          },
          "parentname": {
            "type": "string",
            "title": "Parentname"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "sname": {
            "type": "string",
            "title": "Sname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "memberID": {
            "type": "string",
            "title": "Memberid"
          },
          "bornyear": {
            "type": "string",
            "title": "Bornyear"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "pcodecity": {
            "type": "string",
            "title": "Pcodecity"
          },
          "postcode": {
            "type": "string",
            "title": "Postcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "telephone": {
            "type": "string",
            "title": "Telephone"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "homeClub": {
            "type": "string",
            "title": "Homeclub"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "extraInfo": {
            "type": "string",
            "title": "Extrainfo"
          },
          "date_signup": {
            "type": "integer",
            "title": "Date Signup"
          },
          "signupKey": {
            "type": "string",
            "title": "Signupkey"
          },
          "vtgMembership": {
            "type": "integer",
            "title": "Vtgmembership"
          },
          "memberByVtg": {
            "type": "integer",
            "title": "Memberbyvtg"
          },
          "parentemail": {
            "type": "string",
            "title": "Parentemail"
          },
          "parentphone": {
            "type": "string",
            "title": "Parentphone"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          }
        },
        "type": "object",
        "required": [
          "activityID",
          "boolSuConfirmed",
          "orderID",
          "price",
          "pricecat",
          "onWaitlist",
          "parentname",
          "fname",
          "sname",
          "email",
          "memberID",
          "bornyear",
          "address",
          "pcodecity",
          "postcode",
          "city",
          "telephone",
          "hcp",
          "homeClub",
          "comments",
          "extraInfo",
          "date_signup",
          "signupKey",
          "vtgMembership",
          "memberByVtg",
          "parentemail",
          "parentphone",
          "boolDeleted"
        ],
        "title": "ActivitiesParticipantsOutUpdate"
      },
      "ActivitiesPricegroupPricesIn": {
        "properties": {
          "priceCatID": {
            "type": "integer",
            "title": "Pricecatid"
          },
          "groupID": {
            "type": "integer",
            "title": "Groupid"
          },
          "pricecatname": {
            "type": "string",
            "title": "Pricecatname"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          }
        },
        "type": "object",
        "title": "ActivitiesPricegroupPricesIn"
      },
      "ActivitiesPricegroupPricesOut": {
        "properties": {
          "priceCatID": {
            "type": "integer",
            "title": "Pricecatid"
          },
          "groupID": {
            "type": "integer",
            "title": "Groupid"
          },
          "pricecatname": {
            "type": "string",
            "title": "Pricecatname"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "priceCatID"
        ],
        "title": "ActivitiesPricegroupPricesOut"
      },
      "ActivitiesPricegroupPricesOutUpdate": {
        "properties": {
          "groupID": {
            "type": "integer",
            "title": "Groupid"
          },
          "pricecatname": {
            "type": "string",
            "title": "Pricecatname"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "groupID",
          "pricecatname",
          "price"
        ],
        "title": "ActivitiesPricegroupPricesOutUpdate"
      },
      "ActivitiesPricegroupsIn": {
        "properties": {
          "groupID": {
            "type": "integer",
            "title": "Groupid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "actType": {
            "type": "string",
            "title": "Acttype"
          },
          "priceGroup": {
            "type": "string",
            "title": "Pricegroup"
          },
          "boolActive": {
            "type": "integer",
            "title": "Boolactive"
          }
        },
        "type": "object",
        "title": "ActivitiesPricegroupsIn"
      },
      "ActivitiesPricegroupsOut": {
        "properties": {
          "groupID": {
            "type": "integer",
            "title": "Groupid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "actType": {
            "type": "string",
            "title": "Acttype"
          },
          "priceGroup": {
            "type": "string",
            "title": "Pricegroup"
          },
          "boolActive": {
            "type": "integer",
            "title": "Boolactive"
          }
        },
        "type": "object",
        "required": [
          "groupID"
        ],
        "title": "ActivitiesPricegroupsOut"
      },
      "ActivitiesPricegroupsOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "actType": {
            "type": "string",
            "title": "Acttype"
          },
          "priceGroup": {
            "type": "string",
            "title": "Pricegroup"
          },
          "boolActive": {
            "type": "integer",
            "title": "Boolactive"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "actType",
          "priceGroup",
          "boolActive"
        ],
        "title": "ActivitiesPricegroupsOutUpdate"
      },
      "ActivitiesPricesIn": {
        "properties": {
          "priceID": {
            "type": "integer",
            "title": "Priceid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "pricecat": {
            "type": "string",
            "title": "Pricecat"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          }
        },
        "type": "object",
        "title": "ActivitiesPricesIn"
      },
      "ActivitiesPricesOut": {
        "properties": {
          "priceID": {
            "type": "integer",
            "title": "Priceid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "pricecat": {
            "type": "string",
            "title": "Pricecat"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "priceID"
        ],
        "title": "ActivitiesPricesOut"
      },
      "ActivitiesPricesOutUpdate": {
        "properties": {
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "pricecat": {
            "type": "string",
            "title": "Pricecat"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "activityID",
          "tournID",
          "pricecat",
          "price"
        ],
        "title": "ActivitiesPricesOutUpdate"
      },
      "AdminAreasIn": {
        "properties": {
          "areaID": {
            "type": "integer",
            "title": "Areaid"
          },
          "area": {
            "type": "string",
            "title": "Area"
          }
        },
        "type": "object",
        "title": "AdminAreasIn"
      },
      "AdminAreasOut": {
        "properties": {
          "areaID": {
            "type": "integer",
            "title": "Areaid"
          },
          "area": {
            "type": "string",
            "title": "Area"
          }
        },
        "type": "object",
        "required": [
          "areaID"
        ],
        "title": "AdminAreasOut"
      },
      "AdminAreasOutUpdate": {
        "properties": {
          "area": {
            "type": "string",
            "title": "Area"
          }
        },
        "type": "object",
        "required": [
          "area"
        ],
        "title": "AdminAreasOutUpdate"
      },
      "AdminUserPwdtempIn": {
        "properties": {
          "userID": {
            "type": "string",
            "title": "Userid"
          },
          "pwdKey": {
            "type": "string",
            "title": "Pwdkey"
          },
          "pwdNumber": {
            "type": "integer",
            "title": "Pwdnumber"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "title": "AdminUserPwdtempIn"
      },
      "AdminUserPwdtempOut": {
        "properties": {
          "userID": {
            "type": "string",
            "title": "Userid"
          },
          "pwdKey": {
            "type": "string",
            "title": "Pwdkey"
          },
          "pwdNumber": {
            "type": "integer",
            "title": "Pwdnumber"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "userID"
        ],
        "title": "AdminUserPwdtempOut"
      },
      "AdminUserPwdtempOutUpdate": {
        "properties": {
          "pwdKey": {
            "type": "string",
            "title": "Pwdkey"
          },
          "pwdNumber": {
            "type": "integer",
            "title": "Pwdnumber"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "pwdKey",
          "pwdNumber",
          "timestamp"
        ],
        "title": "AdminUserPwdtempOutUpdate"
      },
      "AdminUsersAreasIn": {
        "properties": {
          "areaID": {
            "type": "integer",
            "title": "Areaid"
          },
          "userID": {
            "type": "integer",
            "title": "Userid"
          }
        },
        "type": "object",
        "title": "AdminUsersAreasIn"
      },
      "AdminUsersAreasOut": {
        "properties": {
          "areaID": {
            "type": "integer",
            "title": "Areaid"
          },
          "userID": {
            "type": "integer",
            "title": "Userid"
          }
        },
        "type": "object",
        "required": [
          "areaID"
        ],
        "title": "AdminUsersAreasOut"
      },
      "AdminUsersAreasOutUpdate": {
        "properties": {
          "userID": {
            "type": "integer",
            "title": "Userid"
          }
        },
        "type": "object",
        "required": [
          "userID"
        ],
        "title": "AdminUsersAreasOutUpdate"
      },
      "AdminUsersDepartmentsIn": {
        "properties": {
          "userID": {
            "type": "integer",
            "title": "Userid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "preferred": {
            "type": "integer",
            "title": "Preferred"
          }
        },
        "type": "object",
        "title": "AdminUsersDepartmentsIn"
      },
      "AdminUsersDepartmentsOut": {
        "properties": {
          "userID": {
            "type": "integer",
            "title": "Userid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "preferred": {
            "type": "integer",
            "title": "Preferred"
          }
        },
        "type": "object",
        "required": [
          "userID"
        ],
        "title": "AdminUsersDepartmentsOut"
      },
      "AdminUsersDepartmentsOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "preferred": {
            "type": "integer",
            "title": "Preferred"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "preferred"
        ],
        "title": "AdminUsersDepartmentsOutUpdate"
      },
      "AdminUsersIn": {
        "properties": {
          "userID": {
            "type": "integer",
            "title": "Userid"
          },
          "boolSupervisor": {
            "type": "integer",
            "title": "Boolsupervisor"
          },
          "adminName": {
            "type": "string",
            "title": "Adminname"
          },
          "adminEmail": {
            "type": "string",
            "title": "Adminemail"
          },
          "pwd_hash": {
            "type": "string",
            "title": "Pwd Hash"
          },
          "pwd_temp": {
            "type": "string",
            "title": "Pwd Temp"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "lastLog": {
            "type": "integer",
            "title": "Lastlog"
          },
          "cKey": {
            "type": "string",
            "title": "Ckey"
          }
        },
        "type": "object",
        "title": "AdminUsersIn"
      },
      "AdminUsersOut": {
        "properties": {
          "userID": {
            "type": "integer",
            "title": "Userid"
          },
          "boolSupervisor": {
            "type": "integer",
            "title": "Boolsupervisor"
          },
          "adminName": {
            "type": "string",
            "title": "Adminname"
          },
          "adminEmail": {
            "type": "string",
            "title": "Adminemail"
          },
          "pwd_hash": {
            "type": "string",
            "title": "Pwd Hash"
          },
          "pwd_temp": {
            "type": "string",
            "title": "Pwd Temp"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "lastLog": {
            "type": "integer",
            "title": "Lastlog"
          },
          "cKey": {
            "type": "string",
            "title": "Ckey"
          }
        },
        "type": "object",
        "required": [
          "userID"
        ],
        "title": "AdminUsersOut"
      },
      "AdminUsersOutUpdate": {
        "properties": {
          "boolSupervisor": {
            "type": "integer",
            "title": "Boolsupervisor"
          },
          "adminName": {
            "type": "string",
            "title": "Adminname"
          },
          "adminEmail": {
            "type": "string",
            "title": "Adminemail"
          },
          "pwd_hash": {
            "type": "string",
            "title": "Pwd Hash"
          },
          "pwd_temp": {
            "type": "string",
            "title": "Pwd Temp"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "lastLog": {
            "type": "integer",
            "title": "Lastlog"
          },
          "cKey": {
            "type": "string",
            "title": "Ckey"
          }
        },
        "type": "object",
        "required": [
          "boolSupervisor",
          "adminName",
          "adminEmail",
          "pwd_hash",
          "pwd_temp",
          "date_created",
          "lastLog",
          "cKey"
        ],
        "title": "AdminUsersOutUpdate"
      },
      "AdsCategoriesIn": {
        "properties": {
          "catID": {
            "type": "integer",
            "title": "Catid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "title": "AdsCategoriesIn"
      },
      "AdsCategoriesOut": {
        "properties": {
          "catID": {
            "type": "integer",
            "title": "Catid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "catID"
        ],
        "title": "AdsCategoriesOut"
      },
      "AdsCategoriesOutUpdate": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "category"
        ],
        "title": "AdsCategoriesOutUpdate"
      },
      "AdsIn": {
        "properties": {
          "adID": {
            "type": "integer",
            "title": "Adid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "catID": {
            "type": "integer",
            "title": "Catid"
          },
          "contact": {
            "type": "string",
            "title": "Contact"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "price": {
            "type": "string",
            "title": "Price"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "title": "AdsIn"
      },
      "AdsOut": {
        "properties": {
          "adID": {
            "type": "integer",
            "title": "Adid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "catID": {
            "type": "integer",
            "title": "Catid"
          },
          "contact": {
            "type": "string",
            "title": "Contact"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "price": {
            "type": "string",
            "title": "Price"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "adID"
        ],
        "title": "AdsOut"
      },
      "AdsOutUpdate": {
        "properties": {
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "catID": {
            "type": "integer",
            "title": "Catid"
          },
          "contact": {
            "type": "string",
            "title": "Contact"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "price": {
            "type": "string",
            "title": "Price"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "boolShow",
          "catID",
          "contact",
          "email",
          "phone",
          "price",
          "date_created"
        ],
        "title": "AdsOutUpdate"
      },
      "AttachmentsIn": {
        "properties": {
          "attachmentID": {
            "type": "integer",
            "title": "Attachmentid"
          },
          "documentID": {
            "type": "integer",
            "title": "Documentid"
          },
          "pageID": {
            "type": "integer",
            "title": "Pageid"
          },
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "safeField": {
            "type": "integer",
            "title": "Safefield"
          }
        },
        "type": "object",
        "title": "AttachmentsIn"
      },
      "AttachmentsOut": {
        "properties": {
          "attachmentID": {
            "type": "integer",
            "title": "Attachmentid"
          },
          "documentID": {
            "type": "integer",
            "title": "Documentid"
          },
          "pageID": {
            "type": "integer",
            "title": "Pageid"
          },
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "safeField": {
            "type": "integer",
            "title": "Safefield"
          }
        },
        "type": "object",
        "required": [
          "attachmentID"
        ],
        "title": "AttachmentsOut"
      },
      "AttachmentsOutUpdate": {
        "properties": {
          "documentID": {
            "type": "integer",
            "title": "Documentid"
          },
          "pageID": {
            "type": "integer",
            "title": "Pageid"
          },
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "safeField": {
            "type": "integer",
            "title": "Safefield"
          }
        },
        "type": "object",
        "required": [
          "documentID",
          "pageID",
          "articleID",
          "tournID",
          "activityID",
          "safeField"
        ],
        "title": "AttachmentsOutUpdate"
      },
      "BlogCommentsIn": {
        "properties": {
          "commentID": {
            "type": "integer",
            "title": "Commentid"
          },
          "blogID": {
            "type": "integer",
            "title": "Blogid"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "poster": {
            "type": "string",
            "title": "Poster"
          },
          "poster_email": {
            "type": "string",
            "title": "Poster Email"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "admin_comment": {
            "type": "string",
            "title": "Admin Comment"
          },
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "date_reply": {
            "type": "integer",
            "title": "Date Reply"
          }
        },
        "type": "object",
        "title": "BlogCommentsIn"
      },
      "BlogCommentsOut": {
        "properties": {
          "commentID": {
            "type": "integer",
            "title": "Commentid"
          },
          "blogID": {
            "type": "integer",
            "title": "Blogid"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "poster": {
            "type": "string",
            "title": "Poster"
          },
          "poster_email": {
            "type": "string",
            "title": "Poster Email"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "admin_comment": {
            "type": "string",
            "title": "Admin Comment"
          },
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "date_reply": {
            "type": "integer",
            "title": "Date Reply"
          }
        },
        "type": "object",
        "required": [
          "commentID"
        ],
        "title": "BlogCommentsOut"
      },
      "BlogCommentsOutUpdate": {
        "properties": {
          "blogID": {
            "type": "integer",
            "title": "Blogid"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "poster": {
            "type": "string",
            "title": "Poster"
          },
          "poster_email": {
            "type": "string",
            "title": "Poster Email"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "admin_comment": {
            "type": "string",
            "title": "Admin Comment"
          },
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "date_reply": {
            "type": "integer",
            "title": "Date Reply"
          }
        },
        "type": "object",
        "required": [
          "blogID",
          "comment",
          "boolShow",
          "poster",
          "poster_email",
          "date_created",
          "admin_comment",
          "bloggerID",
          "date_reply"
        ],
        "title": "BlogCommentsOutUpdate"
      },
      "BlogImagesIn": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "imgWidth": {
            "type": "string",
            "title": "Imgwidth"
          },
          "imgHeight": {
            "type": "string",
            "title": "Imgheight"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "sizecat": {
            "type": "integer",
            "title": "Sizecat"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "title": "BlogImagesIn"
      },
      "BlogImagesOut": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "imgWidth": {
            "type": "string",
            "title": "Imgwidth"
          },
          "imgHeight": {
            "type": "string",
            "title": "Imgheight"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "sizecat": {
            "type": "integer",
            "title": "Sizecat"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "imageID"
        ],
        "title": "BlogImagesOut"
      },
      "BlogImagesOutUpdate": {
        "properties": {
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "imgWidth": {
            "type": "string",
            "title": "Imgwidth"
          },
          "imgHeight": {
            "type": "string",
            "title": "Imgheight"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "sizecat": {
            "type": "integer",
            "title": "Sizecat"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "bloggerID",
          "imgWidth",
          "imgHeight",
          "imagefile",
          "imgDescription",
          "sizecat",
          "date_created"
        ],
        "title": "BlogImagesOutUpdate"
      },
      "BlogIn": {
        "properties": {
          "blogID": {
            "type": "integer",
            "title": "Blogid"
          },
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "typeComments": {
            "type": "string",
            "title": "Typecomments"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "template": {
            "type": "integer",
            "title": "Template"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "templateImageID": {
            "type": "integer",
            "title": "Templateimageid"
          },
          "templateImage": {
            "type": "string",
            "title": "Templateimage"
          },
          "templimg_descr": {
            "type": "string",
            "title": "Templimg Descr"
          },
          "validfrom": {
            "type": "integer",
            "title": "Validfrom"
          },
          "heading": {
            "type": "string",
            "title": "Heading"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "blogContent": {
            "type": "string",
            "title": "Blogcontent"
          },
          "boolSendNotice": {
            "type": "integer",
            "title": "Boolsendnotice"
          },
          "noticeToEmail": {
            "type": "string",
            "title": "Noticetoemail"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "videoUrl": {
            "type": "string",
            "title": "Videourl"
          }
        },
        "type": "object",
        "title": "BlogIn"
      },
      "BlogOut": {
        "properties": {
          "blogID": {
            "type": "integer",
            "title": "Blogid"
          },
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "typeComments": {
            "type": "string",
            "title": "Typecomments"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "template": {
            "type": "integer",
            "title": "Template"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "templateImageID": {
            "type": "integer",
            "title": "Templateimageid"
          },
          "templateImage": {
            "type": "string",
            "title": "Templateimage"
          },
          "templimg_descr": {
            "type": "string",
            "title": "Templimg Descr"
          },
          "validfrom": {
            "type": "integer",
            "title": "Validfrom"
          },
          "heading": {
            "type": "string",
            "title": "Heading"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "blogContent": {
            "type": "string",
            "title": "Blogcontent"
          },
          "boolSendNotice": {
            "type": "integer",
            "title": "Boolsendnotice"
          },
          "noticeToEmail": {
            "type": "string",
            "title": "Noticetoemail"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "videoUrl": {
            "type": "string",
            "title": "Videourl"
          }
        },
        "type": "object",
        "required": [
          "blogID"
        ],
        "title": "BlogOut"
      },
      "BlogOutUpdate": {
        "properties": {
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "typeComments": {
            "type": "string",
            "title": "Typecomments"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "template": {
            "type": "integer",
            "title": "Template"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "templateImageID": {
            "type": "integer",
            "title": "Templateimageid"
          },
          "templateImage": {
            "type": "string",
            "title": "Templateimage"
          },
          "templimg_descr": {
            "type": "string",
            "title": "Templimg Descr"
          },
          "validfrom": {
            "type": "integer",
            "title": "Validfrom"
          },
          "heading": {
            "type": "string",
            "title": "Heading"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "blogContent": {
            "type": "string",
            "title": "Blogcontent"
          },
          "boolSendNotice": {
            "type": "integer",
            "title": "Boolsendnotice"
          },
          "noticeToEmail": {
            "type": "string",
            "title": "Noticetoemail"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "videoUrl": {
            "type": "string",
            "title": "Videourl"
          }
        },
        "type": "object",
        "required": [
          "bloggerID",
          "boolShow",
          "typeComments",
          "pagedescription",
          "template",
          "indexImageID",
          "indexImage",
          "indexImagePath",
          "indeximg_descr",
          "templateImageID",
          "templateImage",
          "templimg_descr",
          "validfrom",
          "heading",
          "urlTitle",
          "blogContent",
          "boolSendNotice",
          "noticeToEmail",
          "date_created",
          "created_by",
          "videoUrl"
        ],
        "title": "BlogOutUpdate"
      },
      "BloggersIn": {
        "properties": {
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "bloggerName": {
            "type": "string",
            "title": "Bloggername"
          },
          "bloggerAlias": {
            "type": "string",
            "title": "Bloggeralias"
          },
          "bloggerLogin": {
            "type": "string",
            "title": "Bloggerlogin"
          },
          "bloggerEmail": {
            "type": "string",
            "title": "Bloggeremail"
          },
          "pwdHash": {
            "type": "string",
            "title": "Pwdhash"
          },
          "ckey": {
            "type": "string",
            "title": "Ckey"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "BloggersIn"
      },
      "BloggersOut": {
        "properties": {
          "bloggerID": {
            "type": "integer",
            "title": "Bloggerid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "bloggerName": {
            "type": "string",
            "title": "Bloggername"
          },
          "bloggerAlias": {
            "type": "string",
            "title": "Bloggeralias"
          },
          "bloggerLogin": {
            "type": "string",
            "title": "Bloggerlogin"
          },
          "bloggerEmail": {
            "type": "string",
            "title": "Bloggeremail"
          },
          "pwdHash": {
            "type": "string",
            "title": "Pwdhash"
          },
          "ckey": {
            "type": "string",
            "title": "Ckey"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "bloggerID"
        ],
        "title": "BloggersOut"
      },
      "BloggersOutUpdate": {
        "properties": {
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "bloggerName": {
            "type": "string",
            "title": "Bloggername"
          },
          "bloggerAlias": {
            "type": "string",
            "title": "Bloggeralias"
          },
          "bloggerLogin": {
            "type": "string",
            "title": "Bloggerlogin"
          },
          "bloggerEmail": {
            "type": "string",
            "title": "Bloggeremail"
          },
          "pwdHash": {
            "type": "string",
            "title": "Pwdhash"
          },
          "ckey": {
            "type": "string",
            "title": "Ckey"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "boolShow",
          "bloggerName",
          "bloggerAlias",
          "bloggerLogin",
          "bloggerEmail",
          "pwdHash",
          "ckey",
          "date_created",
          "created_by"
        ],
        "title": "BloggersOutUpdate"
      },
      "Body_login_for_access_token_token_post": {
        "properties": {
          "grant_type": {
            "type": "string",
            "pattern": "^password$",
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "format": "password",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_for_access_token_token_post"
      },
      "CalendarIn": {
        "properties": {
          "calID": {
            "type": "integer",
            "title": "Calid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "descr": {
            "type": "string",
            "title": "Descr"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "calDate": {
            "type": "integer",
            "title": "Caldate"
          },
          "timeFrom": {
            "type": "string",
            "title": "Timefrom"
          },
          "timeTo": {
            "type": "string",
            "title": "Timeto"
          },
          "details": {
            "type": "string",
            "title": "Details"
          }
        },
        "type": "object",
        "title": "CalendarIn"
      },
      "CalendarOut": {
        "properties": {
          "calID": {
            "type": "integer",
            "title": "Calid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "descr": {
            "type": "string",
            "title": "Descr"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "calDate": {
            "type": "integer",
            "title": "Caldate"
          },
          "timeFrom": {
            "type": "string",
            "title": "Timefrom"
          },
          "timeTo": {
            "type": "string",
            "title": "Timeto"
          },
          "details": {
            "type": "string",
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "calID"
        ],
        "title": "CalendarOut"
      },
      "CalendarOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "descr": {
            "type": "string",
            "title": "Descr"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "calDate": {
            "type": "integer",
            "title": "Caldate"
          },
          "timeFrom": {
            "type": "string",
            "title": "Timefrom"
          },
          "timeTo": {
            "type": "string",
            "title": "Timeto"
          },
          "details": {
            "type": "string",
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "descr",
          "tournID",
          "activityID",
          "calDate",
          "timeFrom",
          "timeTo",
          "details"
        ],
        "title": "CalendarOutUpdate"
      },
      "CartIn": {
        "properties": {
          "cartRowID": {
            "type": "integer",
            "title": "Cartrowid"
          },
          "cartID": {
            "type": "string",
            "title": "Cartid"
          },
          "noProd": {
            "type": "integer",
            "title": "Noprod"
          },
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "prodVarID": {
            "type": "integer",
            "title": "Prodvarid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "senderID": {
            "type": "integer",
            "title": "Senderid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "variant": {
            "type": "string",
            "title": "Variant"
          },
          "textVariant": {
            "type": "string",
            "title": "Textvariant"
          },
          "totPrice": {
            "type": "integer",
            "title": "Totprice"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "totalValue": {
            "type": "integer",
            "title": "Totalvalue"
          },
          "dateAdded": {
            "type": "integer",
            "title": "Dateadded"
          },
          "ip": {
            "type": "string",
            "title": "Ip"
          },
          "memberRecID": {
            "type": "integer",
            "title": "Memberrecid"
          },
          "payAccount": {
            "type": "integer",
            "title": "Payaccount"
          }
        },
        "type": "object",
        "title": "CartIn"
      },
      "CartOut": {
        "properties": {
          "cartRowID": {
            "type": "integer",
            "title": "Cartrowid"
          },
          "cartID": {
            "type": "string",
            "title": "Cartid"
          },
          "noProd": {
            "type": "integer",
            "title": "Noprod"
          },
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "prodVarID": {
            "type": "integer",
            "title": "Prodvarid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "senderID": {
            "type": "integer",
            "title": "Senderid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "variant": {
            "type": "string",
            "title": "Variant"
          },
          "textVariant": {
            "type": "string",
            "title": "Textvariant"
          },
          "totPrice": {
            "type": "integer",
            "title": "Totprice"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "totalValue": {
            "type": "integer",
            "title": "Totalvalue"
          },
          "dateAdded": {
            "type": "integer",
            "title": "Dateadded"
          },
          "ip": {
            "type": "string",
            "title": "Ip"
          },
          "memberRecID": {
            "type": "integer",
            "title": "Memberrecid"
          },
          "payAccount": {
            "type": "integer",
            "title": "Payaccount"
          }
        },
        "type": "object",
        "required": [
          "cartRowID"
        ],
        "title": "CartOut"
      },
      "CartOutUpdate": {
        "properties": {
          "cartID": {
            "type": "string",
            "title": "Cartid"
          },
          "noProd": {
            "type": "integer",
            "title": "Noprod"
          },
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "prodVarID": {
            "type": "integer",
            "title": "Prodvarid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "senderID": {
            "type": "integer",
            "title": "Senderid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "variant": {
            "type": "string",
            "title": "Variant"
          },
          "textVariant": {
            "type": "string",
            "title": "Textvariant"
          },
          "totPrice": {
            "type": "integer",
            "title": "Totprice"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "totalValue": {
            "type": "integer",
            "title": "Totalvalue"
          },
          "dateAdded": {
            "type": "integer",
            "title": "Dateadded"
          },
          "ip": {
            "type": "string",
            "title": "Ip"
          },
          "memberRecID": {
            "type": "integer",
            "title": "Memberrecid"
          },
          "payAccount": {
            "type": "integer",
            "title": "Payaccount"
          }
        },
        "type": "object",
        "required": [
          "cartID",
          "noProd",
          "productID",
          "prodVarID",
          "activityID",
          "tournID",
          "feedbackID",
          "senderID",
          "participantID",
          "variant",
          "textVariant",
          "totPrice",
          "quantity",
          "totalValue",
          "dateAdded",
          "ip",
          "memberRecID",
          "payAccount"
        ],
        "title": "CartOutUpdate"
      },
      "ClubchampsCategoriesIn": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "tee": {
            "type": "string",
            "title": "Tee"
          }
        },
        "type": "object",
        "title": "ClubchampsCategoriesIn"
      },
      "ClubchampsCategoriesOut": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "tee": {
            "type": "string",
            "title": "Tee"
          }
        },
        "type": "object",
        "required": [
          "categoryID"
        ],
        "title": "ClubchampsCategoriesOut"
      },
      "ClubchampsCategoriesOutUpdate": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "tee": {
            "type": "string",
            "title": "Tee"
          }
        },
        "type": "object",
        "required": [
          "category",
          "sortnum",
          "tee"
        ],
        "title": "ClubchampsCategoriesOutUpdate"
      },
      "ClubchampsIn": {
        "properties": {
          "championID": {
            "type": "integer",
            "title": "Championid"
          },
          "ch_year": {
            "type": "string",
            "title": "Ch Year"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "rounds": {
            "type": "string",
            "title": "Rounds"
          },
          "score": {
            "type": "string",
            "title": "Score"
          },
          "imagepath": {
            "type": "string",
            "title": "Imagepath"
          },
          "tee": {
            "type": "string",
            "title": "Tee"
          },
          "url_res": {
            "type": "string",
            "title": "Url Res"
          }
        },
        "type": "object",
        "title": "ClubchampsIn"
      },
      "ClubchampsOut": {
        "properties": {
          "championID": {
            "type": "integer",
            "title": "Championid"
          },
          "ch_year": {
            "type": "string",
            "title": "Ch Year"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "rounds": {
            "type": "string",
            "title": "Rounds"
          },
          "score": {
            "type": "string",
            "title": "Score"
          },
          "imagepath": {
            "type": "string",
            "title": "Imagepath"
          },
          "tee": {
            "type": "string",
            "title": "Tee"
          },
          "url_res": {
            "type": "string",
            "title": "Url Res"
          }
        },
        "type": "object",
        "required": [
          "championID"
        ],
        "title": "ClubchampsOut"
      },
      "ClubchampsOutUpdate": {
        "properties": {
          "ch_year": {
            "type": "string",
            "title": "Ch Year"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "rounds": {
            "type": "string",
            "title": "Rounds"
          },
          "score": {
            "type": "string",
            "title": "Score"
          },
          "imagepath": {
            "type": "string",
            "title": "Imagepath"
          },
          "tee": {
            "type": "string",
            "title": "Tee"
          },
          "url_res": {
            "type": "string",
            "title": "Url Res"
          }
        },
        "type": "object",
        "required": [
          "ch_year",
          "categoryID",
          "firstname",
          "lastname",
          "rounds",
          "score",
          "imagepath",
          "tee",
          "url_res"
        ],
        "title": "ClubchampsOutUpdate"
      },
      "ContactsIn": {
        "properties": {
          "contactID": {
            "type": "integer",
            "title": "Contactid"
          },
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "profileID": {
            "type": "integer",
            "title": "Profileid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "contactTitle": {
            "type": "string",
            "title": "Contacttitle"
          }
        },
        "type": "object",
        "title": "ContactsIn"
      },
      "ContactsListIn": {
        "properties": {
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "listname": {
            "type": "string",
            "title": "Listname"
          },
          "listtype": {
            "type": "string",
            "title": "Listtype"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "useDescription": {
            "type": "integer",
            "title": "Usedescription"
          },
          "useIcons": {
            "type": "integer",
            "title": "Useicons"
          }
        },
        "type": "object",
        "title": "ContactsListIn"
      },
      "ContactsListOut": {
        "properties": {
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "listname": {
            "type": "string",
            "title": "Listname"
          },
          "listtype": {
            "type": "string",
            "title": "Listtype"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "useDescription": {
            "type": "integer",
            "title": "Usedescription"
          },
          "useIcons": {
            "type": "integer",
            "title": "Useicons"
          }
        },
        "type": "object",
        "required": [
          "listID"
        ],
        "title": "ContactsListOut"
      },
      "ContactsListOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "listname": {
            "type": "string",
            "title": "Listname"
          },
          "listtype": {
            "type": "string",
            "title": "Listtype"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "useDescription": {
            "type": "integer",
            "title": "Usedescription"
          },
          "useIcons": {
            "type": "integer",
            "title": "Useicons"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "listname",
          "listtype",
          "sortnum",
          "boolShow",
          "useDescription",
          "useIcons"
        ],
        "title": "ContactsListOutUpdate"
      },
      "ContactsOut": {
        "properties": {
          "contactID": {
            "type": "integer",
            "title": "Contactid"
          },
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "profileID": {
            "type": "integer",
            "title": "Profileid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "contactTitle": {
            "type": "string",
            "title": "Contacttitle"
          }
        },
        "type": "object",
        "required": [
          "contactID"
        ],
        "title": "ContactsOut"
      },
      "ContactsOutUpdate": {
        "properties": {
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "profileID": {
            "type": "integer",
            "title": "Profileid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "contactTitle": {
            "type": "string",
            "title": "Contacttitle"
          }
        },
        "type": "object",
        "required": [
          "listID",
          "profileID",
          "sortnum",
          "contactTitle"
        ],
        "title": "ContactsOutUpdate"
      },
      "CourseGuideHoleIn": {
        "properties": {
          "videourl": {
            "type": "string",
            "title": "Videourl"
          }
        },
        "type": "object",
        "title": "CourseGuideHoleIn"
      },
      "CourseGuideHoleOut": {
        "properties": {
          "videourl": {
            "type": "string",
            "title": "Videourl"
          },
          "holeID": {
            "type": "integer",
            "title": "Holeid"
          }
        },
        "type": "object",
        "required": [
          "holeID"
        ],
        "title": "CourseGuideHoleOut"
      },
      "CourseGuideHoleOutUpdate": {
        "properties": {
          "videourl": {
            "type": "string",
            "title": "Videourl"
          }
        },
        "type": "object",
        "required": [
          "videourl"
        ],
        "title": "CourseGuideHoleOutUpdate"
      },
      "CourseGuideImagesIn": {
        "properties": {
          "hole": {
            "type": "integer",
            "title": "Hole"
          },
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "hole",
          "courseID"
        ],
        "title": "CourseGuideImagesIn"
      },
      "CourseGuideImagesOut": {
        "properties": {
          "hole": {
            "type": "integer",
            "title": "Hole"
          },
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          }
        },
        "type": "object",
        "required": [
          "hole",
          "courseID",
          "imageID"
        ],
        "title": "CourseGuideImagesOut"
      },
      "CourseGuideImagesOutUpdate": {
        "properties": {
          "hole": {
            "type": "integer",
            "title": "Hole"
          },
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "hole",
          "courseID",
          "imagefile",
          "imgDescription",
          "sortnum"
        ],
        "title": "CourseGuideImagesOutUpdate"
      },
      "CourseGuideSponsorsIn": {
        "properties": {
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "hole": {
            "type": "integer",
            "title": "Hole"
          }
        },
        "type": "object",
        "required": [
          "hole"
        ],
        "title": "CourseGuideSponsorsIn"
      },
      "CourseGuideSponsorsOut": {
        "properties": {
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "hole": {
            "type": "integer",
            "title": "Hole"
          },
          "sponsorID": {
            "type": "integer",
            "title": "Sponsorid"
          }
        },
        "type": "object",
        "required": [
          "hole",
          "sponsorID"
        ],
        "title": "CourseGuideSponsorsOut"
      },
      "CourseGuideSponsorsOutUpdate": {
        "properties": {
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "hole": {
            "type": "integer",
            "title": "Hole"
          }
        },
        "type": "object",
        "required": [
          "courseID",
          "hole"
        ],
        "title": "CourseGuideSponsorsOutUpdate"
      },
      "CoursesHioIn": {
        "properties": {},
        "type": "object",
        "title": "CoursesHioIn"
      },
      "CoursesHioOut": {
        "properties": {
          "hioID": {
            "type": "integer",
            "title": "Hioid"
          }
        },
        "type": "object",
        "required": [
          "hioID"
        ],
        "title": "CoursesHioOut"
      },
      "CoursesHioOutUpdate": {
        "properties": {},
        "type": "object",
        "title": "CoursesHioOutUpdate"
      },
      "CoursesIn": {
        "properties": {
          "coursename": {
            "type": "string",
            "title": "Coursename"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "holes": {
            "type": "integer",
            "title": "Holes"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolShow": {
            "type": "boolean",
            "title": "Boolshow"
          },
          "boolSlope": {
            "type": "boolean",
            "title": "Boolslope"
          }
        },
        "type": "object",
        "required": [
          "coursename",
          "holes",
          "sortnum",
          "boolShow"
        ],
        "title": "CoursesIn"
      },
      "CoursesOut": {
        "properties": {
          "coursename": {
            "type": "string",
            "title": "Coursename"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "holes": {
            "type": "integer",
            "title": "Holes"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolShow": {
            "type": "boolean",
            "title": "Boolshow"
          },
          "boolSlope": {
            "type": "boolean",
            "title": "Boolslope"
          },
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          }
        },
        "type": "object",
        "required": [
          "coursename",
          "holes",
          "sortnum",
          "boolShow",
          "courseID"
        ],
        "title": "CoursesOut"
      },
      "CoursesOutUpdate": {
        "properties": {
          "coursename": {
            "type": "string",
            "title": "Coursename"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "holes": {
            "type": "integer",
            "title": "Holes"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolShow": {
            "type": "boolean",
            "title": "Boolshow"
          },
          "boolSlope": {
            "type": "boolean",
            "title": "Boolslope"
          }
        },
        "type": "object",
        "required": [
          "coursename",
          "urlTitle",
          "holes",
          "sortnum",
          "boolShow",
          "boolSlope"
        ],
        "title": "CoursesOutUpdate"
      },
      "CoursesParIn": {
        "properties": {
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "p1": {
            "type": "integer",
            "title": "P1"
          },
          "p2": {
            "type": "integer",
            "title": "P2"
          },
          "p3": {
            "type": "integer",
            "title": "P3"
          },
          "p4": {
            "type": "integer",
            "title": "P4"
          },
          "p5": {
            "type": "integer",
            "title": "P5"
          },
          "p6": {
            "type": "integer",
            "title": "P6"
          },
          "p7": {
            "type": "integer",
            "title": "P7"
          },
          "p8": {
            "type": "integer",
            "title": "P8"
          },
          "p9": {
            "type": "integer",
            "title": "P9"
          },
          "p10": {
            "type": "integer",
            "title": "P10"
          },
          "p11": {
            "type": "integer",
            "title": "P11"
          },
          "p12": {
            "type": "integer",
            "title": "P12"
          },
          "p13": {
            "type": "integer",
            "title": "P13"
          },
          "p14": {
            "type": "integer",
            "title": "P14"
          },
          "p15": {
            "type": "integer",
            "title": "P15"
          },
          "p16": {
            "type": "integer",
            "title": "P16"
          },
          "p17": {
            "type": "integer",
            "title": "P17"
          },
          "p18": {
            "type": "integer",
            "title": "P18"
          },
          "pfront": {
            "type": "integer",
            "title": "Pfront"
          },
          "pback": {
            "type": "integer",
            "title": "Pback"
          },
          "par": {
            "type": "integer",
            "title": "Par"
          },
          "i1": {
            "type": "integer",
            "title": "I1"
          },
          "i2": {
            "type": "integer",
            "title": "I2"
          },
          "i3": {
            "type": "integer",
            "title": "I3"
          },
          "i4": {
            "type": "integer",
            "title": "I4"
          },
          "i5": {
            "type": "integer",
            "title": "I5"
          },
          "i6": {
            "type": "integer",
            "title": "I6"
          },
          "i7": {
            "type": "integer",
            "title": "I7"
          },
          "i8": {
            "type": "integer",
            "title": "I8"
          },
          "i9": {
            "type": "integer",
            "title": "I9"
          },
          "i10": {
            "type": "integer",
            "title": "I10"
          },
          "i11": {
            "type": "integer",
            "title": "I11"
          },
          "i12": {
            "type": "integer",
            "title": "I12"
          },
          "i13": {
            "type": "integer",
            "title": "I13"
          },
          "i14": {
            "type": "integer",
            "title": "I14"
          },
          "i15": {
            "type": "integer",
            "title": "I15"
          },
          "i16": {
            "type": "integer",
            "title": "I16"
          },
          "i17": {
            "type": "integer",
            "title": "I17"
          },
          "i18": {
            "type": "integer",
            "title": "I18"
          },
          "n1": {
            "type": "string",
            "title": "N1"
          },
          "n2": {
            "type": "string",
            "title": "N2"
          },
          "n3": {
            "type": "string",
            "title": "N3"
          },
          "n4": {
            "type": "string",
            "title": "N4"
          },
          "n5": {
            "type": "string",
            "title": "N5"
          },
          "n6": {
            "type": "string",
            "title": "N6"
          },
          "n7": {
            "type": "string",
            "title": "N7"
          },
          "n8": {
            "type": "string",
            "title": "N8"
          },
          "n9": {
            "type": "string",
            "title": "N9"
          },
          "n10": {
            "type": "string",
            "title": "N10"
          },
          "n11": {
            "type": "string",
            "title": "N11"
          },
          "n12": {
            "type": "string",
            "title": "N12"
          },
          "n13": {
            "type": "string",
            "title": "N13"
          },
          "n14": {
            "type": "string",
            "title": "N14"
          },
          "n15": {
            "type": "string",
            "title": "N15"
          },
          "n16": {
            "type": "string",
            "title": "N16"
          },
          "n17": {
            "type": "string",
            "title": "N17"
          },
          "n18": {
            "type": "string",
            "title": "N18"
          }
        },
        "type": "object",
        "title": "CoursesParIn"
      },
      "CoursesParOut": {
        "properties": {
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "p1": {
            "type": "integer",
            "title": "P1"
          },
          "p2": {
            "type": "integer",
            "title": "P2"
          },
          "p3": {
            "type": "integer",
            "title": "P3"
          },
          "p4": {
            "type": "integer",
            "title": "P4"
          },
          "p5": {
            "type": "integer",
            "title": "P5"
          },
          "p6": {
            "type": "integer",
            "title": "P6"
          },
          "p7": {
            "type": "integer",
            "title": "P7"
          },
          "p8": {
            "type": "integer",
            "title": "P8"
          },
          "p9": {
            "type": "integer",
            "title": "P9"
          },
          "p10": {
            "type": "integer",
            "title": "P10"
          },
          "p11": {
            "type": "integer",
            "title": "P11"
          },
          "p12": {
            "type": "integer",
            "title": "P12"
          },
          "p13": {
            "type": "integer",
            "title": "P13"
          },
          "p14": {
            "type": "integer",
            "title": "P14"
          },
          "p15": {
            "type": "integer",
            "title": "P15"
          },
          "p16": {
            "type": "integer",
            "title": "P16"
          },
          "p17": {
            "type": "integer",
            "title": "P17"
          },
          "p18": {
            "type": "integer",
            "title": "P18"
          },
          "pfront": {
            "type": "integer",
            "title": "Pfront"
          },
          "pback": {
            "type": "integer",
            "title": "Pback"
          },
          "par": {
            "type": "integer",
            "title": "Par"
          },
          "i1": {
            "type": "integer",
            "title": "I1"
          },
          "i2": {
            "type": "integer",
            "title": "I2"
          },
          "i3": {
            "type": "integer",
            "title": "I3"
          },
          "i4": {
            "type": "integer",
            "title": "I4"
          },
          "i5": {
            "type": "integer",
            "title": "I5"
          },
          "i6": {
            "type": "integer",
            "title": "I6"
          },
          "i7": {
            "type": "integer",
            "title": "I7"
          },
          "i8": {
            "type": "integer",
            "title": "I8"
          },
          "i9": {
            "type": "integer",
            "title": "I9"
          },
          "i10": {
            "type": "integer",
            "title": "I10"
          },
          "i11": {
            "type": "integer",
            "title": "I11"
          },
          "i12": {
            "type": "integer",
            "title": "I12"
          },
          "i13": {
            "type": "integer",
            "title": "I13"
          },
          "i14": {
            "type": "integer",
            "title": "I14"
          },
          "i15": {
            "type": "integer",
            "title": "I15"
          },
          "i16": {
            "type": "integer",
            "title": "I16"
          },
          "i17": {
            "type": "integer",
            "title": "I17"
          },
          "i18": {
            "type": "integer",
            "title": "I18"
          },
          "n1": {
            "type": "string",
            "title": "N1"
          },
          "n2": {
            "type": "string",
            "title": "N2"
          },
          "n3": {
            "type": "string",
            "title": "N3"
          },
          "n4": {
            "type": "string",
            "title": "N4"
          },
          "n5": {
            "type": "string",
            "title": "N5"
          },
          "n6": {
            "type": "string",
            "title": "N6"
          },
          "n7": {
            "type": "string",
            "title": "N7"
          },
          "n8": {
            "type": "string",
            "title": "N8"
          },
          "n9": {
            "type": "string",
            "title": "N9"
          },
          "n10": {
            "type": "string",
            "title": "N10"
          },
          "n11": {
            "type": "string",
            "title": "N11"
          },
          "n12": {
            "type": "string",
            "title": "N12"
          },
          "n13": {
            "type": "string",
            "title": "N13"
          },
          "n14": {
            "type": "string",
            "title": "N14"
          },
          "n15": {
            "type": "string",
            "title": "N15"
          },
          "n16": {
            "type": "string",
            "title": "N16"
          },
          "n17": {
            "type": "string",
            "title": "N17"
          },
          "n18": {
            "type": "string",
            "title": "N18"
          }
        },
        "type": "object",
        "required": [
          "courseID"
        ],
        "title": "CoursesParOut"
      },
      "CoursesParOutUpdate": {
        "properties": {
          "p1": {
            "type": "integer",
            "title": "P1"
          },
          "p2": {
            "type": "integer",
            "title": "P2"
          },
          "p3": {
            "type": "integer",
            "title": "P3"
          },
          "p4": {
            "type": "integer",
            "title": "P4"
          },
          "p5": {
            "type": "integer",
            "title": "P5"
          },
          "p6": {
            "type": "integer",
            "title": "P6"
          },
          "p7": {
            "type": "integer",
            "title": "P7"
          },
          "p8": {
            "type": "integer",
            "title": "P8"
          },
          "p9": {
            "type": "integer",
            "title": "P9"
          },
          "p10": {
            "type": "integer",
            "title": "P10"
          },
          "p11": {
            "type": "integer",
            "title": "P11"
          },
          "p12": {
            "type": "integer",
            "title": "P12"
          },
          "p13": {
            "type": "integer",
            "title": "P13"
          },
          "p14": {
            "type": "integer",
            "title": "P14"
          },
          "p15": {
            "type": "integer",
            "title": "P15"
          },
          "p16": {
            "type": "integer",
            "title": "P16"
          },
          "p17": {
            "type": "integer",
            "title": "P17"
          },
          "p18": {
            "type": "integer",
            "title": "P18"
          },
          "pfront": {
            "type": "integer",
            "title": "Pfront"
          },
          "pback": {
            "type": "integer",
            "title": "Pback"
          },
          "par": {
            "type": "integer",
            "title": "Par"
          },
          "i1": {
            "type": "integer",
            "title": "I1"
          },
          "i2": {
            "type": "integer",
            "title": "I2"
          },
          "i3": {
            "type": "integer",
            "title": "I3"
          },
          "i4": {
            "type": "integer",
            "title": "I4"
          },
          "i5": {
            "type": "integer",
            "title": "I5"
          },
          "i6": {
            "type": "integer",
            "title": "I6"
          },
          "i7": {
            "type": "integer",
            "title": "I7"
          },
          "i8": {
            "type": "integer",
            "title": "I8"
          },
          "i9": {
            "type": "integer",
            "title": "I9"
          },
          "i10": {
            "type": "integer",
            "title": "I10"
          },
          "i11": {
            "type": "integer",
            "title": "I11"
          },
          "i12": {
            "type": "integer",
            "title": "I12"
          },
          "i13": {
            "type": "integer",
            "title": "I13"
          },
          "i14": {
            "type": "integer",
            "title": "I14"
          },
          "i15": {
            "type": "integer",
            "title": "I15"
          },
          "i16": {
            "type": "integer",
            "title": "I16"
          },
          "i17": {
            "type": "integer",
            "title": "I17"
          },
          "i18": {
            "type": "integer",
            "title": "I18"
          },
          "n1": {
            "type": "string",
            "title": "N1"
          },
          "n2": {
            "type": "string",
            "title": "N2"
          },
          "n3": {
            "type": "string",
            "title": "N3"
          },
          "n4": {
            "type": "string",
            "title": "N4"
          },
          "n5": {
            "type": "string",
            "title": "N5"
          },
          "n6": {
            "type": "string",
            "title": "N6"
          },
          "n7": {
            "type": "string",
            "title": "N7"
          },
          "n8": {
            "type": "string",
            "title": "N8"
          },
          "n9": {
            "type": "string",
            "title": "N9"
          },
          "n10": {
            "type": "string",
            "title": "N10"
          },
          "n11": {
            "type": "string",
            "title": "N11"
          },
          "n12": {
            "type": "string",
            "title": "N12"
          },
          "n13": {
            "type": "string",
            "title": "N13"
          },
          "n14": {
            "type": "string",
            "title": "N14"
          },
          "n15": {
            "type": "string",
            "title": "N15"
          },
          "n16": {
            "type": "string",
            "title": "N16"
          },
          "n17": {
            "type": "string",
            "title": "N17"
          },
          "n18": {
            "type": "string",
            "title": "N18"
          }
        },
        "type": "object",
        "required": [
          "p1",
          "p2",
          "p3",
          "p4",
          "p5",
          "p6",
          "p7",
          "p8",
          "p9",
          "p10",
          "p11",
          "p12",
          "p13",
          "p14",
          "p15",
          "p16",
          "p17",
          "p18",
          "pfront",
          "pback",
          "par",
          "i1",
          "i2",
          "i3",
          "i4",
          "i5",
          "i6",
          "i7",
          "i8",
          "i9",
          "i10",
          "i11",
          "i12",
          "i13",
          "i14",
          "i15",
          "i16",
          "i17",
          "i18",
          "n1",
          "n2",
          "n3",
          "n4",
          "n5",
          "n6",
          "n7",
          "n8",
          "n9",
          "n10",
          "n11",
          "n12",
          "n13",
          "n14",
          "n15",
          "n16",
          "n17",
          "n18"
        ],
        "title": "CoursesParOutUpdate"
      },
      "CoursesTeesIn": {
        "properties": {
          "teeID": {
            "type": "integer",
            "title": "Teeid"
          },
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "teename": {
            "type": "string",
            "title": "Teename"
          },
          "cr_m": {
            "type": "integer",
            "title": "Cr M"
          },
          "cr_f": {
            "type": "integer",
            "title": "Cr F"
          },
          "slope_m": {
            "type": "integer",
            "title": "Slope M"
          },
          "slope_f": {
            "type": "integer",
            "title": "Slope F"
          },
          "l1": {
            "type": "string",
            "title": "L1"
          },
          "l2": {
            "type": "string",
            "title": "L2"
          },
          "l3": {
            "type": "string",
            "title": "L3"
          },
          "l4": {
            "type": "string",
            "title": "L4"
          },
          "l5": {
            "type": "string",
            "title": "L5"
          },
          "l6": {
            "type": "string",
            "title": "L6"
          },
          "l7": {
            "type": "string",
            "title": "L7"
          },
          "l8": {
            "type": "string",
            "title": "L8"
          },
          "l9": {
            "type": "string",
            "title": "L9"
          },
          "l10": {
            "type": "string",
            "title": "L10"
          },
          "l11": {
            "type": "string",
            "title": "L11"
          },
          "l12": {
            "type": "string",
            "title": "L12"
          },
          "l13": {
            "type": "string",
            "title": "L13"
          },
          "l14": {
            "type": "string",
            "title": "L14"
          },
          "l15": {
            "type": "string",
            "title": "L15"
          },
          "l16": {
            "type": "string",
            "title": "L16"
          },
          "l17": {
            "type": "string",
            "title": "L17"
          },
          "l18": {
            "type": "string",
            "title": "L18"
          },
          "lf9": {
            "type": "string",
            "title": "Lf9"
          },
          "lb9": {
            "type": "string",
            "title": "Lb9"
          },
          "ltotal": {
            "type": "string",
            "title": "Ltotal"
          }
        },
        "type": "object",
        "title": "CoursesTeesIn"
      },
      "CoursesTeesOut": {
        "properties": {
          "teeID": {
            "type": "integer",
            "title": "Teeid"
          },
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "teename": {
            "type": "string",
            "title": "Teename"
          },
          "cr_m": {
            "type": "integer",
            "title": "Cr M"
          },
          "cr_f": {
            "type": "integer",
            "title": "Cr F"
          },
          "slope_m": {
            "type": "integer",
            "title": "Slope M"
          },
          "slope_f": {
            "type": "integer",
            "title": "Slope F"
          },
          "l1": {
            "type": "string",
            "title": "L1"
          },
          "l2": {
            "type": "string",
            "title": "L2"
          },
          "l3": {
            "type": "string",
            "title": "L3"
          },
          "l4": {
            "type": "string",
            "title": "L4"
          },
          "l5": {
            "type": "string",
            "title": "L5"
          },
          "l6": {
            "type": "string",
            "title": "L6"
          },
          "l7": {
            "type": "string",
            "title": "L7"
          },
          "l8": {
            "type": "string",
            "title": "L8"
          },
          "l9": {
            "type": "string",
            "title": "L9"
          },
          "l10": {
            "type": "string",
            "title": "L10"
          },
          "l11": {
            "type": "string",
            "title": "L11"
          },
          "l12": {
            "type": "string",
            "title": "L12"
          },
          "l13": {
            "type": "string",
            "title": "L13"
          },
          "l14": {
            "type": "string",
            "title": "L14"
          },
          "l15": {
            "type": "string",
            "title": "L15"
          },
          "l16": {
            "type": "string",
            "title": "L16"
          },
          "l17": {
            "type": "string",
            "title": "L17"
          },
          "l18": {
            "type": "string",
            "title": "L18"
          },
          "lf9": {
            "type": "string",
            "title": "Lf9"
          },
          "lb9": {
            "type": "string",
            "title": "Lb9"
          },
          "ltotal": {
            "type": "string",
            "title": "Ltotal"
          }
        },
        "type": "object",
        "required": [
          "teeID"
        ],
        "title": "CoursesTeesOut"
      },
      "CoursesTeesOutUpdate": {
        "properties": {
          "courseID": {
            "type": "integer",
            "title": "Courseid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "teename": {
            "type": "string",
            "title": "Teename"
          },
          "cr_m": {
            "type": "integer",
            "title": "Cr M"
          },
          "cr_f": {
            "type": "integer",
            "title": "Cr F"
          },
          "slope_m": {
            "type": "integer",
            "title": "Slope M"
          },
          "slope_f": {
            "type": "integer",
            "title": "Slope F"
          },
          "l1": {
            "type": "string",
            "title": "L1"
          },
          "l2": {
            "type": "string",
            "title": "L2"
          },
          "l3": {
            "type": "string",
            "title": "L3"
          },
          "l4": {
            "type": "string",
            "title": "L4"
          },
          "l5": {
            "type": "string",
            "title": "L5"
          },
          "l6": {
            "type": "string",
            "title": "L6"
          },
          "l7": {
            "type": "string",
            "title": "L7"
          },
          "l8": {
            "type": "string",
            "title": "L8"
          },
          "l9": {
            "type": "string",
            "title": "L9"
          },
          "l10": {
            "type": "string",
            "title": "L10"
          },
          "l11": {
            "type": "string",
            "title": "L11"
          },
          "l12": {
            "type": "string",
            "title": "L12"
          },
          "l13": {
            "type": "string",
            "title": "L13"
          },
          "l14": {
            "type": "string",
            "title": "L14"
          },
          "l15": {
            "type": "string",
            "title": "L15"
          },
          "l16": {
            "type": "string",
            "title": "L16"
          },
          "l17": {
            "type": "string",
            "title": "L17"
          },
          "l18": {
            "type": "string",
            "title": "L18"
          },
          "lf9": {
            "type": "string",
            "title": "Lf9"
          },
          "lb9": {
            "type": "string",
            "title": "Lb9"
          },
          "ltotal": {
            "type": "string",
            "title": "Ltotal"
          }
        },
        "type": "object",
        "required": [
          "courseID",
          "sortnum",
          "teename",
          "cr_m",
          "cr_f",
          "slope_m",
          "slope_f",
          "l1",
          "l2",
          "l3",
          "l4",
          "l5",
          "l6",
          "l7",
          "l8",
          "l9",
          "l10",
          "l11",
          "l12",
          "l13",
          "l14",
          "l15",
          "l16",
          "l17",
          "l18",
          "lf9",
          "lb9",
          "ltotal"
        ],
        "title": "CoursesTeesOutUpdate"
      },
      "DepartmentsIn": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolMainDep": {
            "type": "integer",
            "title": "Boolmaindep"
          },
          "department": {
            "type": "string",
            "title": "Department"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "slogan": {
            "type": "string",
            "title": "Slogan"
          },
          "megasort": {
            "type": "integer",
            "title": "Megasort"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolRequired": {
            "type": "integer",
            "title": "Boolrequired"
          },
          "boolMemberArea": {
            "type": "integer",
            "title": "Boolmemberarea"
          },
          "boolModuleDirect": {
            "type": "integer",
            "title": "Boolmoduledirect"
          }
        },
        "type": "object",
        "title": "DepartmentsIn"
      },
      "DepartmentsOut": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolMainDep": {
            "type": "integer",
            "title": "Boolmaindep"
          },
          "department": {
            "type": "string",
            "title": "Department"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "slogan": {
            "type": "string",
            "title": "Slogan"
          },
          "megasort": {
            "type": "integer",
            "title": "Megasort"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolRequired": {
            "type": "integer",
            "title": "Boolrequired"
          },
          "boolMemberArea": {
            "type": "integer",
            "title": "Boolmemberarea"
          },
          "boolModuleDirect": {
            "type": "integer",
            "title": "Boolmoduledirect"
          }
        },
        "type": "object",
        "required": [
          "depID"
        ],
        "title": "DepartmentsOut"
      },
      "DepartmentsOutUpdate": {
        "properties": {
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolMainDep": {
            "type": "integer",
            "title": "Boolmaindep"
          },
          "department": {
            "type": "string",
            "title": "Department"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "slogan": {
            "type": "string",
            "title": "Slogan"
          },
          "megasort": {
            "type": "integer",
            "title": "Megasort"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolRequired": {
            "type": "integer",
            "title": "Boolrequired"
          },
          "boolMemberArea": {
            "type": "integer",
            "title": "Boolmemberarea"
          },
          "boolModuleDirect": {
            "type": "integer",
            "title": "Boolmoduledirect"
          }
        },
        "type": "object",
        "required": [
          "boolShow",
          "boolMainDep",
          "department",
          "urlAlias",
          "slogan",
          "megasort",
          "date_created",
          "boolRequired",
          "boolMemberArea",
          "boolModuleDirect"
        ],
        "title": "DepartmentsOutUpdate"
      },
      "DocumentsCategoriesIn": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "start": {
            "type": "integer",
            "title": "Start"
          }
        },
        "type": "object",
        "title": "DocumentsCategoriesIn"
      },
      "DocumentsCategoriesOut": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "start": {
            "type": "integer",
            "title": "Start"
          }
        },
        "type": "object",
        "required": [
          "categoryID"
        ],
        "title": "DocumentsCategoriesOut"
      },
      "DocumentsCategoriesOutUpdate": {
        "properties": {
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "start": {
            "type": "integer",
            "title": "Start"
          }
        },
        "type": "object",
        "required": [
          "parentID",
          "depID",
          "category",
          "start"
        ],
        "title": "DocumentsCategoriesOutUpdate"
      },
      "DocumentsIn": {
        "properties": {
          "documentID": {
            "type": "integer",
            "title": "Documentid"
          },
          "oldDokID": {
            "type": "integer",
            "title": "Olddokid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "docname": {
            "type": "string",
            "title": "Docname"
          },
          "docdescription": {
            "type": "string",
            "title": "Docdescription"
          },
          "docformat": {
            "type": "string",
            "title": "Docformat"
          },
          "docfile": {
            "type": "string",
            "title": "Docfile"
          },
          "size": {
            "type": "string",
            "title": "Size"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "date_updated": {
            "type": "integer",
            "title": "Date Updated"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "DocumentsIn"
      },
      "DocumentsOut": {
        "properties": {
          "documentID": {
            "type": "integer",
            "title": "Documentid"
          },
          "oldDokID": {
            "type": "integer",
            "title": "Olddokid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "docname": {
            "type": "string",
            "title": "Docname"
          },
          "docdescription": {
            "type": "string",
            "title": "Docdescription"
          },
          "docformat": {
            "type": "string",
            "title": "Docformat"
          },
          "docfile": {
            "type": "string",
            "title": "Docfile"
          },
          "size": {
            "type": "string",
            "title": "Size"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "date_updated": {
            "type": "integer",
            "title": "Date Updated"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "documentID"
        ],
        "title": "DocumentsOut"
      },
      "DocumentsOutUpdate": {
        "properties": {
          "oldDokID": {
            "type": "integer",
            "title": "Olddokid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "docname": {
            "type": "string",
            "title": "Docname"
          },
          "docdescription": {
            "type": "string",
            "title": "Docdescription"
          },
          "docformat": {
            "type": "string",
            "title": "Docformat"
          },
          "docfile": {
            "type": "string",
            "title": "Docfile"
          },
          "size": {
            "type": "string",
            "title": "Size"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "date_updated": {
            "type": "integer",
            "title": "Date Updated"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "oldDokID",
          "depID",
          "boolShow",
          "categoryID",
          "docname",
          "docdescription",
          "docformat",
          "docfile",
          "size",
          "date_created",
          "date_updated",
          "created_by"
        ],
        "title": "DocumentsOutUpdate"
      },
      "DocumentsUserregCategoriesIn": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "title": "DocumentsUserregCategoriesIn"
      },
      "DocumentsUserregCategoriesOut": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "categoryID"
        ],
        "title": "DocumentsUserregCategoriesOut"
      },
      "DocumentsUserregCategoriesOutUpdate": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "category"
        ],
        "title": "DocumentsUserregCategoriesOutUpdate"
      },
      "DocumentsUserregIn": {
        "properties": {
          "documentID": {
            "type": "integer",
            "title": "Documentid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "docname": {
            "type": "string",
            "title": "Docname"
          },
          "docdescription": {
            "type": "string",
            "title": "Docdescription"
          },
          "docformat": {
            "type": "string",
            "title": "Docformat"
          },
          "docfile": {
            "type": "string",
            "title": "Docfile"
          },
          "size": {
            "type": "string",
            "title": "Size"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "date_updated": {
            "type": "integer",
            "title": "Date Updated"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "DocumentsUserregIn"
      },
      "DocumentsUserregOut": {
        "properties": {
          "documentID": {
            "type": "integer",
            "title": "Documentid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "docname": {
            "type": "string",
            "title": "Docname"
          },
          "docdescription": {
            "type": "string",
            "title": "Docdescription"
          },
          "docformat": {
            "type": "string",
            "title": "Docformat"
          },
          "docfile": {
            "type": "string",
            "title": "Docfile"
          },
          "size": {
            "type": "string",
            "title": "Size"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "date_updated": {
            "type": "integer",
            "title": "Date Updated"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "documentID"
        ],
        "title": "DocumentsUserregOut"
      },
      "DocumentsUserregOutUpdate": {
        "properties": {
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "docname": {
            "type": "string",
            "title": "Docname"
          },
          "docdescription": {
            "type": "string",
            "title": "Docdescription"
          },
          "docformat": {
            "type": "string",
            "title": "Docformat"
          },
          "docfile": {
            "type": "string",
            "title": "Docfile"
          },
          "size": {
            "type": "string",
            "title": "Size"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "date_updated": {
            "type": "integer",
            "title": "Date Updated"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "boolShow",
          "categoryID",
          "docname",
          "docdescription",
          "docformat",
          "docfile",
          "size",
          "date_created",
          "date_updated",
          "created_by"
        ],
        "title": "DocumentsUserregOutUpdate"
      },
      "EclecticCoursesIn": {
        "properties": {
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "coursename": {
            "type": "string",
            "title": "Coursename"
          },
          "p1": {
            "type": "integer",
            "title": "P1"
          },
          "p2": {
            "type": "integer",
            "title": "P2"
          },
          "p3": {
            "type": "integer",
            "title": "P3"
          },
          "p4": {
            "type": "integer",
            "title": "P4"
          },
          "p5": {
            "type": "integer",
            "title": "P5"
          },
          "p6": {
            "type": "integer",
            "title": "P6"
          },
          "p7": {
            "type": "integer",
            "title": "P7"
          },
          "p8": {
            "type": "integer",
            "title": "P8"
          },
          "p9": {
            "type": "integer",
            "title": "P9"
          },
          "p10": {
            "type": "integer",
            "title": "P10"
          },
          "p11": {
            "type": "integer",
            "title": "P11"
          },
          "p12": {
            "type": "integer",
            "title": "P12"
          },
          "p13": {
            "type": "integer",
            "title": "P13"
          },
          "p14": {
            "type": "integer",
            "title": "P14"
          },
          "p15": {
            "type": "integer",
            "title": "P15"
          },
          "p16": {
            "type": "integer",
            "title": "P16"
          },
          "p17": {
            "type": "integer",
            "title": "P17"
          },
          "p18": {
            "type": "integer",
            "title": "P18"
          },
          "pfront": {
            "type": "integer",
            "title": "Pfront"
          },
          "pback": {
            "type": "integer",
            "title": "Pback"
          },
          "par": {
            "type": "integer",
            "title": "Par"
          },
          "i1": {
            "type": "integer",
            "title": "I1"
          },
          "i2": {
            "type": "integer",
            "title": "I2"
          },
          "i3": {
            "type": "integer",
            "title": "I3"
          },
          "i4": {
            "type": "integer",
            "title": "I4"
          },
          "i5": {
            "type": "integer",
            "title": "I5"
          },
          "i6": {
            "type": "integer",
            "title": "I6"
          },
          "i7": {
            "type": "integer",
            "title": "I7"
          },
          "i8": {
            "type": "integer",
            "title": "I8"
          },
          "i9": {
            "type": "integer",
            "title": "I9"
          },
          "i10": {
            "type": "integer",
            "title": "I10"
          },
          "i11": {
            "type": "integer",
            "title": "I11"
          },
          "i12": {
            "type": "integer",
            "title": "I12"
          },
          "i13": {
            "type": "integer",
            "title": "I13"
          },
          "i14": {
            "type": "integer",
            "title": "I14"
          },
          "i15": {
            "type": "integer",
            "title": "I15"
          },
          "i16": {
            "type": "integer",
            "title": "I16"
          },
          "i17": {
            "type": "integer",
            "title": "I17"
          },
          "i18": {
            "type": "integer",
            "title": "I18"
          }
        },
        "type": "object",
        "title": "EclecticCoursesIn"
      },
      "EclecticCoursesOut": {
        "properties": {
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "coursename": {
            "type": "string",
            "title": "Coursename"
          },
          "p1": {
            "type": "integer",
            "title": "P1"
          },
          "p2": {
            "type": "integer",
            "title": "P2"
          },
          "p3": {
            "type": "integer",
            "title": "P3"
          },
          "p4": {
            "type": "integer",
            "title": "P4"
          },
          "p5": {
            "type": "integer",
            "title": "P5"
          },
          "p6": {
            "type": "integer",
            "title": "P6"
          },
          "p7": {
            "type": "integer",
            "title": "P7"
          },
          "p8": {
            "type": "integer",
            "title": "P8"
          },
          "p9": {
            "type": "integer",
            "title": "P9"
          },
          "p10": {
            "type": "integer",
            "title": "P10"
          },
          "p11": {
            "type": "integer",
            "title": "P11"
          },
          "p12": {
            "type": "integer",
            "title": "P12"
          },
          "p13": {
            "type": "integer",
            "title": "P13"
          },
          "p14": {
            "type": "integer",
            "title": "P14"
          },
          "p15": {
            "type": "integer",
            "title": "P15"
          },
          "p16": {
            "type": "integer",
            "title": "P16"
          },
          "p17": {
            "type": "integer",
            "title": "P17"
          },
          "p18": {
            "type": "integer",
            "title": "P18"
          },
          "pfront": {
            "type": "integer",
            "title": "Pfront"
          },
          "pback": {
            "type": "integer",
            "title": "Pback"
          },
          "par": {
            "type": "integer",
            "title": "Par"
          },
          "i1": {
            "type": "integer",
            "title": "I1"
          },
          "i2": {
            "type": "integer",
            "title": "I2"
          },
          "i3": {
            "type": "integer",
            "title": "I3"
          },
          "i4": {
            "type": "integer",
            "title": "I4"
          },
          "i5": {
            "type": "integer",
            "title": "I5"
          },
          "i6": {
            "type": "integer",
            "title": "I6"
          },
          "i7": {
            "type": "integer",
            "title": "I7"
          },
          "i8": {
            "type": "integer",
            "title": "I8"
          },
          "i9": {
            "type": "integer",
            "title": "I9"
          },
          "i10": {
            "type": "integer",
            "title": "I10"
          },
          "i11": {
            "type": "integer",
            "title": "I11"
          },
          "i12": {
            "type": "integer",
            "title": "I12"
          },
          "i13": {
            "type": "integer",
            "title": "I13"
          },
          "i14": {
            "type": "integer",
            "title": "I14"
          },
          "i15": {
            "type": "integer",
            "title": "I15"
          },
          "i16": {
            "type": "integer",
            "title": "I16"
          },
          "i17": {
            "type": "integer",
            "title": "I17"
          },
          "i18": {
            "type": "integer",
            "title": "I18"
          }
        },
        "type": "object",
        "required": [
          "ecl_tournID"
        ],
        "title": "EclecticCoursesOut"
      },
      "EclecticCoursesOutUpdate": {
        "properties": {
          "coursename": {
            "type": "string",
            "title": "Coursename"
          },
          "p1": {
            "type": "integer",
            "title": "P1"
          },
          "p2": {
            "type": "integer",
            "title": "P2"
          },
          "p3": {
            "type": "integer",
            "title": "P3"
          },
          "p4": {
            "type": "integer",
            "title": "P4"
          },
          "p5": {
            "type": "integer",
            "title": "P5"
          },
          "p6": {
            "type": "integer",
            "title": "P6"
          },
          "p7": {
            "type": "integer",
            "title": "P7"
          },
          "p8": {
            "type": "integer",
            "title": "P8"
          },
          "p9": {
            "type": "integer",
            "title": "P9"
          },
          "p10": {
            "type": "integer",
            "title": "P10"
          },
          "p11": {
            "type": "integer",
            "title": "P11"
          },
          "p12": {
            "type": "integer",
            "title": "P12"
          },
          "p13": {
            "type": "integer",
            "title": "P13"
          },
          "p14": {
            "type": "integer",
            "title": "P14"
          },
          "p15": {
            "type": "integer",
            "title": "P15"
          },
          "p16": {
            "type": "integer",
            "title": "P16"
          },
          "p17": {
            "type": "integer",
            "title": "P17"
          },
          "p18": {
            "type": "integer",
            "title": "P18"
          },
          "pfront": {
            "type": "integer",
            "title": "Pfront"
          },
          "pback": {
            "type": "integer",
            "title": "Pback"
          },
          "par": {
            "type": "integer",
            "title": "Par"
          },
          "i1": {
            "type": "integer",
            "title": "I1"
          },
          "i2": {
            "type": "integer",
            "title": "I2"
          },
          "i3": {
            "type": "integer",
            "title": "I3"
          },
          "i4": {
            "type": "integer",
            "title": "I4"
          },
          "i5": {
            "type": "integer",
            "title": "I5"
          },
          "i6": {
            "type": "integer",
            "title": "I6"
          },
          "i7": {
            "type": "integer",
            "title": "I7"
          },
          "i8": {
            "type": "integer",
            "title": "I8"
          },
          "i9": {
            "type": "integer",
            "title": "I9"
          },
          "i10": {
            "type": "integer",
            "title": "I10"
          },
          "i11": {
            "type": "integer",
            "title": "I11"
          },
          "i12": {
            "type": "integer",
            "title": "I12"
          },
          "i13": {
            "type": "integer",
            "title": "I13"
          },
          "i14": {
            "type": "integer",
            "title": "I14"
          },
          "i15": {
            "type": "integer",
            "title": "I15"
          },
          "i16": {
            "type": "integer",
            "title": "I16"
          },
          "i17": {
            "type": "integer",
            "title": "I17"
          },
          "i18": {
            "type": "integer",
            "title": "I18"
          }
        },
        "type": "object",
        "required": [
          "coursename",
          "p1",
          "p2",
          "p3",
          "p4",
          "p5",
          "p6",
          "p7",
          "p8",
          "p9",
          "p10",
          "p11",
          "p12",
          "p13",
          "p14",
          "p15",
          "p16",
          "p17",
          "p18",
          "pfront",
          "pback",
          "par",
          "i1",
          "i2",
          "i3",
          "i4",
          "i5",
          "i6",
          "i7",
          "i8",
          "i9",
          "i10",
          "i11",
          "i12",
          "i13",
          "i14",
          "i15",
          "i16",
          "i17",
          "i18"
        ],
        "title": "EclecticCoursesOutUpdate"
      },
      "EclecticParticipantsIn": {
        "properties": {
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "oldID": {
            "type": "integer",
            "title": "Oldid"
          },
          "ecl_TournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "lname": {
            "type": "string",
            "title": "Lname"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          }
        },
        "type": "object",
        "title": "EclecticParticipantsIn"
      },
      "EclecticParticipantsOut": {
        "properties": {
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "oldID": {
            "type": "integer",
            "title": "Oldid"
          },
          "ecl_TournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "lname": {
            "type": "string",
            "title": "Lname"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          }
        },
        "type": "object",
        "required": [
          "participantID"
        ],
        "title": "EclecticParticipantsOut"
      },
      "EclecticParticipantsOutUpdate": {
        "properties": {
          "oldID": {
            "type": "integer",
            "title": "Oldid"
          },
          "ecl_TournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "lname": {
            "type": "string",
            "title": "Lname"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          }
        },
        "type": "object",
        "required": [
          "oldID",
          "ecl_TournID",
          "fname",
          "lname",
          "hcp"
        ],
        "title": "EclecticParticipantsOutUpdate"
      },
      "EclecticScoreIn": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "MS": {
            "type": "integer",
            "title": "Ms"
          },
          "scoreDate": {
            "type": "integer",
            "title": "Scoredate"
          },
          "sc1": {
            "type": "string",
            "title": "Sc1"
          },
          "sc2": {
            "type": "string",
            "title": "Sc2"
          },
          "sc3": {
            "type": "string",
            "title": "Sc3"
          },
          "sc4": {
            "type": "string",
            "title": "Sc4"
          },
          "sc5": {
            "type": "string",
            "title": "Sc5"
          },
          "sc6": {
            "type": "string",
            "title": "Sc6"
          },
          "sc7": {
            "type": "string",
            "title": "Sc7"
          },
          "sc8": {
            "type": "string",
            "title": "Sc8"
          },
          "sc9": {
            "type": "string",
            "title": "Sc9"
          },
          "sc10": {
            "type": "string",
            "title": "Sc10"
          },
          "sc11": {
            "type": "string",
            "title": "Sc11"
          },
          "sc12": {
            "type": "string",
            "title": "Sc12"
          },
          "sc13": {
            "type": "string",
            "title": "Sc13"
          },
          "sc14": {
            "type": "string",
            "title": "Sc14"
          },
          "sc15": {
            "type": "string",
            "title": "Sc15"
          },
          "sc16": {
            "type": "string",
            "title": "Sc16"
          },
          "sc17": {
            "type": "string",
            "title": "Sc17"
          },
          "sc18": {
            "type": "string",
            "title": "Sc18"
          },
          "sumScore": {
            "type": "string",
            "title": "Sumscore"
          },
          "sumAlb": {
            "type": "string",
            "title": "Sumalb"
          },
          "sumEag": {
            "type": "string",
            "title": "Sumeag"
          },
          "sumBir": {
            "type": "string",
            "title": "Sumbir"
          },
          "sumPar": {
            "type": "string",
            "title": "Sumpar"
          },
          "sumBog": {
            "type": "string",
            "title": "Sumbog"
          },
          "sumDbo": {
            "type": "string",
            "title": "Sumdbo"
          },
          "sumOth": {
            "type": "string",
            "title": "Sumoth"
          }
        },
        "type": "object",
        "title": "EclecticScoreIn"
      },
      "EclecticScoreNetIn": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "sc1": {
            "type": "string",
            "title": "Sc1"
          },
          "sc2": {
            "type": "string",
            "title": "Sc2"
          },
          "sc3": {
            "type": "string",
            "title": "Sc3"
          },
          "sc4": {
            "type": "string",
            "title": "Sc4"
          },
          "sc5": {
            "type": "string",
            "title": "Sc5"
          },
          "sc6": {
            "type": "string",
            "title": "Sc6"
          },
          "sc7": {
            "type": "string",
            "title": "Sc7"
          },
          "sc8": {
            "type": "string",
            "title": "Sc8"
          },
          "sc9": {
            "type": "string",
            "title": "Sc9"
          },
          "sc10": {
            "type": "string",
            "title": "Sc10"
          },
          "sc11": {
            "type": "string",
            "title": "Sc11"
          },
          "sc12": {
            "type": "string",
            "title": "Sc12"
          },
          "sc13": {
            "type": "string",
            "title": "Sc13"
          },
          "sc14": {
            "type": "string",
            "title": "Sc14"
          },
          "sc15": {
            "type": "string",
            "title": "Sc15"
          },
          "sc16": {
            "type": "string",
            "title": "Sc16"
          },
          "sc17": {
            "type": "string",
            "title": "Sc17"
          },
          "sc18": {
            "type": "string",
            "title": "Sc18"
          },
          "sumScore": {
            "type": "string",
            "title": "Sumscore"
          }
        },
        "type": "object",
        "title": "EclecticScoreNetIn"
      },
      "EclecticScoreNetOut": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "sc1": {
            "type": "string",
            "title": "Sc1"
          },
          "sc2": {
            "type": "string",
            "title": "Sc2"
          },
          "sc3": {
            "type": "string",
            "title": "Sc3"
          },
          "sc4": {
            "type": "string",
            "title": "Sc4"
          },
          "sc5": {
            "type": "string",
            "title": "Sc5"
          },
          "sc6": {
            "type": "string",
            "title": "Sc6"
          },
          "sc7": {
            "type": "string",
            "title": "Sc7"
          },
          "sc8": {
            "type": "string",
            "title": "Sc8"
          },
          "sc9": {
            "type": "string",
            "title": "Sc9"
          },
          "sc10": {
            "type": "string",
            "title": "Sc10"
          },
          "sc11": {
            "type": "string",
            "title": "Sc11"
          },
          "sc12": {
            "type": "string",
            "title": "Sc12"
          },
          "sc13": {
            "type": "string",
            "title": "Sc13"
          },
          "sc14": {
            "type": "string",
            "title": "Sc14"
          },
          "sc15": {
            "type": "string",
            "title": "Sc15"
          },
          "sc16": {
            "type": "string",
            "title": "Sc16"
          },
          "sc17": {
            "type": "string",
            "title": "Sc17"
          },
          "sc18": {
            "type": "string",
            "title": "Sc18"
          },
          "sumScore": {
            "type": "string",
            "title": "Sumscore"
          }
        },
        "type": "object",
        "required": [
          "scoreID"
        ],
        "title": "EclecticScoreNetOut"
      },
      "EclecticScoreNetOutUpdate": {
        "properties": {
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "sc1": {
            "type": "string",
            "title": "Sc1"
          },
          "sc2": {
            "type": "string",
            "title": "Sc2"
          },
          "sc3": {
            "type": "string",
            "title": "Sc3"
          },
          "sc4": {
            "type": "string",
            "title": "Sc4"
          },
          "sc5": {
            "type": "string",
            "title": "Sc5"
          },
          "sc6": {
            "type": "string",
            "title": "Sc6"
          },
          "sc7": {
            "type": "string",
            "title": "Sc7"
          },
          "sc8": {
            "type": "string",
            "title": "Sc8"
          },
          "sc9": {
            "type": "string",
            "title": "Sc9"
          },
          "sc10": {
            "type": "string",
            "title": "Sc10"
          },
          "sc11": {
            "type": "string",
            "title": "Sc11"
          },
          "sc12": {
            "type": "string",
            "title": "Sc12"
          },
          "sc13": {
            "type": "string",
            "title": "Sc13"
          },
          "sc14": {
            "type": "string",
            "title": "Sc14"
          },
          "sc15": {
            "type": "string",
            "title": "Sc15"
          },
          "sc16": {
            "type": "string",
            "title": "Sc16"
          },
          "sc17": {
            "type": "string",
            "title": "Sc17"
          },
          "sc18": {
            "type": "string",
            "title": "Sc18"
          },
          "sumScore": {
            "type": "string",
            "title": "Sumscore"
          }
        },
        "type": "object",
        "required": [
          "ecl_tournID",
          "participantID",
          "sc1",
          "sc2",
          "sc3",
          "sc4",
          "sc5",
          "sc6",
          "sc7",
          "sc8",
          "sc9",
          "sc10",
          "sc11",
          "sc12",
          "sc13",
          "sc14",
          "sc15",
          "sc16",
          "sc17",
          "sc18",
          "sumScore"
        ],
        "title": "EclecticScoreNetOutUpdate"
      },
      "EclecticScoreOut": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "MS": {
            "type": "integer",
            "title": "Ms"
          },
          "scoreDate": {
            "type": "integer",
            "title": "Scoredate"
          },
          "sc1": {
            "type": "string",
            "title": "Sc1"
          },
          "sc2": {
            "type": "string",
            "title": "Sc2"
          },
          "sc3": {
            "type": "string",
            "title": "Sc3"
          },
          "sc4": {
            "type": "string",
            "title": "Sc4"
          },
          "sc5": {
            "type": "string",
            "title": "Sc5"
          },
          "sc6": {
            "type": "string",
            "title": "Sc6"
          },
          "sc7": {
            "type": "string",
            "title": "Sc7"
          },
          "sc8": {
            "type": "string",
            "title": "Sc8"
          },
          "sc9": {
            "type": "string",
            "title": "Sc9"
          },
          "sc10": {
            "type": "string",
            "title": "Sc10"
          },
          "sc11": {
            "type": "string",
            "title": "Sc11"
          },
          "sc12": {
            "type": "string",
            "title": "Sc12"
          },
          "sc13": {
            "type": "string",
            "title": "Sc13"
          },
          "sc14": {
            "type": "string",
            "title": "Sc14"
          },
          "sc15": {
            "type": "string",
            "title": "Sc15"
          },
          "sc16": {
            "type": "string",
            "title": "Sc16"
          },
          "sc17": {
            "type": "string",
            "title": "Sc17"
          },
          "sc18": {
            "type": "string",
            "title": "Sc18"
          },
          "sumScore": {
            "type": "string",
            "title": "Sumscore"
          },
          "sumAlb": {
            "type": "string",
            "title": "Sumalb"
          },
          "sumEag": {
            "type": "string",
            "title": "Sumeag"
          },
          "sumBir": {
            "type": "string",
            "title": "Sumbir"
          },
          "sumPar": {
            "type": "string",
            "title": "Sumpar"
          },
          "sumBog": {
            "type": "string",
            "title": "Sumbog"
          },
          "sumDbo": {
            "type": "string",
            "title": "Sumdbo"
          },
          "sumOth": {
            "type": "string",
            "title": "Sumoth"
          }
        },
        "type": "object",
        "required": [
          "scoreID"
        ],
        "title": "EclecticScoreOut"
      },
      "EclecticScoreOutUpdate": {
        "properties": {
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "MS": {
            "type": "integer",
            "title": "Ms"
          },
          "scoreDate": {
            "type": "integer",
            "title": "Scoredate"
          },
          "sc1": {
            "type": "string",
            "title": "Sc1"
          },
          "sc2": {
            "type": "string",
            "title": "Sc2"
          },
          "sc3": {
            "type": "string",
            "title": "Sc3"
          },
          "sc4": {
            "type": "string",
            "title": "Sc4"
          },
          "sc5": {
            "type": "string",
            "title": "Sc5"
          },
          "sc6": {
            "type": "string",
            "title": "Sc6"
          },
          "sc7": {
            "type": "string",
            "title": "Sc7"
          },
          "sc8": {
            "type": "string",
            "title": "Sc8"
          },
          "sc9": {
            "type": "string",
            "title": "Sc9"
          },
          "sc10": {
            "type": "string",
            "title": "Sc10"
          },
          "sc11": {
            "type": "string",
            "title": "Sc11"
          },
          "sc12": {
            "type": "string",
            "title": "Sc12"
          },
          "sc13": {
            "type": "string",
            "title": "Sc13"
          },
          "sc14": {
            "type": "string",
            "title": "Sc14"
          },
          "sc15": {
            "type": "string",
            "title": "Sc15"
          },
          "sc16": {
            "type": "string",
            "title": "Sc16"
          },
          "sc17": {
            "type": "string",
            "title": "Sc17"
          },
          "sc18": {
            "type": "string",
            "title": "Sc18"
          },
          "sumScore": {
            "type": "string",
            "title": "Sumscore"
          },
          "sumAlb": {
            "type": "string",
            "title": "Sumalb"
          },
          "sumEag": {
            "type": "string",
            "title": "Sumeag"
          },
          "sumBir": {
            "type": "string",
            "title": "Sumbir"
          },
          "sumPar": {
            "type": "string",
            "title": "Sumpar"
          },
          "sumBog": {
            "type": "string",
            "title": "Sumbog"
          },
          "sumDbo": {
            "type": "string",
            "title": "Sumdbo"
          },
          "sumOth": {
            "type": "string",
            "title": "Sumoth"
          }
        },
        "type": "object",
        "required": [
          "ecl_tournID",
          "participantID",
          "hcp",
          "MS",
          "scoreDate",
          "sc1",
          "sc2",
          "sc3",
          "sc4",
          "sc5",
          "sc6",
          "sc7",
          "sc8",
          "sc9",
          "sc10",
          "sc11",
          "sc12",
          "sc13",
          "sc14",
          "sc15",
          "sc16",
          "sc17",
          "sc18",
          "sumScore",
          "sumAlb",
          "sumEag",
          "sumBir",
          "sumPar",
          "sumBog",
          "sumDbo",
          "sumOth"
        ],
        "title": "EclecticScoreOutUpdate"
      },
      "EclecticScoreStblIn": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "sc1": {
            "type": "string",
            "title": "Sc1"
          },
          "sc2": {
            "type": "string",
            "title": "Sc2"
          },
          "sc3": {
            "type": "string",
            "title": "Sc3"
          },
          "sc4": {
            "type": "string",
            "title": "Sc4"
          },
          "sc5": {
            "type": "string",
            "title": "Sc5"
          },
          "sc6": {
            "type": "string",
            "title": "Sc6"
          },
          "sc7": {
            "type": "string",
            "title": "Sc7"
          },
          "sc8": {
            "type": "string",
            "title": "Sc8"
          },
          "sc9": {
            "type": "string",
            "title": "Sc9"
          },
          "sc10": {
            "type": "string",
            "title": "Sc10"
          },
          "sc11": {
            "type": "string",
            "title": "Sc11"
          },
          "sc12": {
            "type": "string",
            "title": "Sc12"
          },
          "sc13": {
            "type": "string",
            "title": "Sc13"
          },
          "sc14": {
            "type": "string",
            "title": "Sc14"
          },
          "sc15": {
            "type": "string",
            "title": "Sc15"
          },
          "sc16": {
            "type": "string",
            "title": "Sc16"
          },
          "sc17": {
            "type": "string",
            "title": "Sc17"
          },
          "sc18": {
            "type": "string",
            "title": "Sc18"
          },
          "sumScore": {
            "type": "string",
            "title": "Sumscore"
          }
        },
        "type": "object",
        "title": "EclecticScoreStblIn"
      },
      "EclecticScoreStblOut": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "sc1": {
            "type": "string",
            "title": "Sc1"
          },
          "sc2": {
            "type": "string",
            "title": "Sc2"
          },
          "sc3": {
            "type": "string",
            "title": "Sc3"
          },
          "sc4": {
            "type": "string",
            "title": "Sc4"
          },
          "sc5": {
            "type": "string",
            "title": "Sc5"
          },
          "sc6": {
            "type": "string",
            "title": "Sc6"
          },
          "sc7": {
            "type": "string",
            "title": "Sc7"
          },
          "sc8": {
            "type": "string",
            "title": "Sc8"
          },
          "sc9": {
            "type": "string",
            "title": "Sc9"
          },
          "sc10": {
            "type": "string",
            "title": "Sc10"
          },
          "sc11": {
            "type": "string",
            "title": "Sc11"
          },
          "sc12": {
            "type": "string",
            "title": "Sc12"
          },
          "sc13": {
            "type": "string",
            "title": "Sc13"
          },
          "sc14": {
            "type": "string",
            "title": "Sc14"
          },
          "sc15": {
            "type": "string",
            "title": "Sc15"
          },
          "sc16": {
            "type": "string",
            "title": "Sc16"
          },
          "sc17": {
            "type": "string",
            "title": "Sc17"
          },
          "sc18": {
            "type": "string",
            "title": "Sc18"
          },
          "sumScore": {
            "type": "string",
            "title": "Sumscore"
          }
        },
        "type": "object",
        "required": [
          "scoreID"
        ],
        "title": "EclecticScoreStblOut"
      },
      "EclecticScoreStblOutUpdate": {
        "properties": {
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "sc1": {
            "type": "string",
            "title": "Sc1"
          },
          "sc2": {
            "type": "string",
            "title": "Sc2"
          },
          "sc3": {
            "type": "string",
            "title": "Sc3"
          },
          "sc4": {
            "type": "string",
            "title": "Sc4"
          },
          "sc5": {
            "type": "string",
            "title": "Sc5"
          },
          "sc6": {
            "type": "string",
            "title": "Sc6"
          },
          "sc7": {
            "type": "string",
            "title": "Sc7"
          },
          "sc8": {
            "type": "string",
            "title": "Sc8"
          },
          "sc9": {
            "type": "string",
            "title": "Sc9"
          },
          "sc10": {
            "type": "string",
            "title": "Sc10"
          },
          "sc11": {
            "type": "string",
            "title": "Sc11"
          },
          "sc12": {
            "type": "string",
            "title": "Sc12"
          },
          "sc13": {
            "type": "string",
            "title": "Sc13"
          },
          "sc14": {
            "type": "string",
            "title": "Sc14"
          },
          "sc15": {
            "type": "string",
            "title": "Sc15"
          },
          "sc16": {
            "type": "string",
            "title": "Sc16"
          },
          "sc17": {
            "type": "string",
            "title": "Sc17"
          },
          "sc18": {
            "type": "string",
            "title": "Sc18"
          },
          "sumScore": {
            "type": "string",
            "title": "Sumscore"
          }
        },
        "type": "object",
        "required": [
          "participantID",
          "ecl_tournID",
          "sc1",
          "sc2",
          "sc3",
          "sc4",
          "sc5",
          "sc6",
          "sc7",
          "sc8",
          "sc9",
          "sc10",
          "sc11",
          "sc12",
          "sc13",
          "sc14",
          "sc15",
          "sc16",
          "sc17",
          "sc18",
          "sumScore"
        ],
        "title": "EclecticScoreStblOutUpdate"
      },
      "EclecticTournamentsIn": {
        "properties": {
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "holes": {
            "type": "string",
            "title": "Holes"
          },
          "tournName": {
            "type": "string",
            "title": "Tournname"
          },
          "eclAlias": {
            "type": "string",
            "title": "Eclalias"
          },
          "tournInfo": {
            "type": "string",
            "title": "Tourninfo"
          },
          "tournType": {
            "type": "integer",
            "title": "Tourntype"
          },
          "rangType": {
            "type": "integer",
            "title": "Rangtype"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "EclecticTournamentsIn"
      },
      "EclecticTournamentsOut": {
        "properties": {
          "ecl_tournID": {
            "type": "integer",
            "title": "Ecl Tournid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "holes": {
            "type": "string",
            "title": "Holes"
          },
          "tournName": {
            "type": "string",
            "title": "Tournname"
          },
          "eclAlias": {
            "type": "string",
            "title": "Eclalias"
          },
          "tournInfo": {
            "type": "string",
            "title": "Tourninfo"
          },
          "tournType": {
            "type": "integer",
            "title": "Tourntype"
          },
          "rangType": {
            "type": "integer",
            "title": "Rangtype"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "ecl_tournID"
        ],
        "title": "EclecticTournamentsOut"
      },
      "EclecticTournamentsOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "holes": {
            "type": "string",
            "title": "Holes"
          },
          "tournName": {
            "type": "string",
            "title": "Tournname"
          },
          "eclAlias": {
            "type": "string",
            "title": "Eclalias"
          },
          "tournInfo": {
            "type": "string",
            "title": "Tourninfo"
          },
          "tournType": {
            "type": "integer",
            "title": "Tourntype"
          },
          "rangType": {
            "type": "integer",
            "title": "Rangtype"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "boolShow",
          "holes",
          "tournName",
          "eclAlias",
          "tournInfo",
          "tournType",
          "rangType",
          "sortnum"
        ],
        "title": "EclecticTournamentsOutUpdate"
      },
      "ElementsDatesliderDatesIn": {
        "properties": {
          "img_date": {
            "type": "integer",
            "title": "Img Date"
          },
          "img_file": {
            "type": "string",
            "title": "Img File"
          }
        },
        "type": "object",
        "title": "ElementsDatesliderDatesIn"
      },
      "ElementsDatesliderDatesOut": {
        "properties": {
          "img_date": {
            "type": "integer",
            "title": "Img Date"
          },
          "img_file": {
            "type": "string",
            "title": "Img File"
          }
        },
        "type": "object",
        "required": [
          "img_date"
        ],
        "title": "ElementsDatesliderDatesOut"
      },
      "ElementsDatesliderDatesOutUpdate": {
        "properties": {
          "img_file": {
            "type": "string",
            "title": "Img File"
          }
        },
        "type": "object",
        "required": [
          "img_file"
        ],
        "title": "ElementsDatesliderDatesOutUpdate"
      },
      "ElementsDatesliderIn": {
        "properties": {
          "img_mon": {
            "type": "string",
            "title": "Img Mon"
          },
          "img_tue": {
            "type": "string",
            "title": "Img Tue"
          },
          "img_wed": {
            "type": "string",
            "title": "Img Wed"
          },
          "img_thu": {
            "type": "string",
            "title": "Img Thu"
          },
          "img_fri": {
            "type": "string",
            "title": "Img Fri"
          },
          "img_sat": {
            "type": "string",
            "title": "Img Sat"
          },
          "img_sun": {
            "type": "string",
            "title": "Img Sun"
          },
          "useStaticContent": {
            "type": "integer",
            "title": "Usestaticcontent"
          },
          "staticContent": {
            "type": "string",
            "title": "Staticcontent"
          },
          "sliderbox_useicon": {
            "type": "integer",
            "title": "Sliderbox Useicon"
          }
        },
        "type": "object",
        "title": "ElementsDatesliderIn"
      },
      "ElementsDatesliderOut": {
        "properties": {
          "img_mon": {
            "type": "integer",
            "title": "Img Mon"
          },
          "img_tue": {
            "type": "string",
            "title": "Img Tue"
          },
          "img_wed": {
            "type": "string",
            "title": "Img Wed"
          },
          "img_thu": {
            "type": "string",
            "title": "Img Thu"
          },
          "img_fri": {
            "type": "string",
            "title": "Img Fri"
          },
          "img_sat": {
            "type": "string",
            "title": "Img Sat"
          },
          "img_sun": {
            "type": "string",
            "title": "Img Sun"
          },
          "useStaticContent": {
            "type": "integer",
            "title": "Usestaticcontent"
          },
          "staticContent": {
            "type": "string",
            "title": "Staticcontent"
          },
          "sliderbox_useicon": {
            "type": "integer",
            "title": "Sliderbox Useicon"
          }
        },
        "type": "object",
        "required": [
          "img_mon"
        ],
        "title": "ElementsDatesliderOut"
      },
      "ElementsDatesliderOutUpdate": {
        "properties": {
          "img_tue": {
            "type": "string",
            "title": "Img Tue"
          },
          "img_wed": {
            "type": "string",
            "title": "Img Wed"
          },
          "img_thu": {
            "type": "string",
            "title": "Img Thu"
          },
          "img_fri": {
            "type": "string",
            "title": "Img Fri"
          },
          "img_sat": {
            "type": "string",
            "title": "Img Sat"
          },
          "img_sun": {
            "type": "string",
            "title": "Img Sun"
          },
          "useStaticContent": {
            "type": "integer",
            "title": "Usestaticcontent"
          },
          "staticContent": {
            "type": "string",
            "title": "Staticcontent"
          },
          "sliderbox_useicon": {
            "type": "integer",
            "title": "Sliderbox Useicon"
          }
        },
        "type": "object",
        "required": [
          "img_tue",
          "img_wed",
          "img_thu",
          "img_fri",
          "img_sat",
          "img_sun",
          "useStaticContent",
          "staticContent",
          "sliderbox_useicon"
        ],
        "title": "ElementsDatesliderOutUpdate"
      },
      "ElementsDatesliderSlidesIn": {
        "properties": {
          "slideID": {
            "type": "integer",
            "title": "Slideid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "align_vert": {
            "type": "string",
            "title": "Align Vert"
          },
          "align_hor": {
            "type": "string",
            "title": "Align Hor"
          },
          "lineBig": {
            "type": "string",
            "title": "Linebig"
          },
          "lineSmall": {
            "type": "string",
            "title": "Linesmall"
          },
          "button_1_text": {
            "type": "string",
            "title": "Button 1 Text"
          },
          "button_1_url": {
            "type": "string",
            "title": "Button 1 Url"
          },
          "button_2_text": {
            "type": "string",
            "title": "Button 2 Text"
          },
          "button_2_url": {
            "type": "string",
            "title": "Button 2 Url"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "button_3_text": {
            "type": "string",
            "title": "Button 3 Text"
          },
          "button_3_url": {
            "type": "string",
            "title": "Button 3 Url"
          },
          "button_1_url_ext": {
            "type": "integer",
            "title": "Button 1 Url Ext"
          },
          "button_2_url_ext": {
            "type": "integer",
            "title": "Button 2 Url Ext"
          },
          "button_3_url_ext": {
            "type": "integer",
            "title": "Button 3 Url Ext"
          },
          "button_4_text": {
            "type": "string",
            "title": "Button 4 Text"
          },
          "button_4_url": {
            "type": "string",
            "title": "Button 4 Url"
          },
          "button_4_url_ext": {
            "type": "integer",
            "title": "Button 4 Url Ext"
          }
        },
        "type": "object",
        "title": "ElementsDatesliderSlidesIn"
      },
      "ElementsDatesliderSlidesOut": {
        "properties": {
          "slideID": {
            "type": "integer",
            "title": "Slideid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "align_vert": {
            "type": "string",
            "title": "Align Vert"
          },
          "align_hor": {
            "type": "string",
            "title": "Align Hor"
          },
          "lineBig": {
            "type": "string",
            "title": "Linebig"
          },
          "lineSmall": {
            "type": "string",
            "title": "Linesmall"
          },
          "button_1_text": {
            "type": "string",
            "title": "Button 1 Text"
          },
          "button_1_url": {
            "type": "string",
            "title": "Button 1 Url"
          },
          "button_2_text": {
            "type": "string",
            "title": "Button 2 Text"
          },
          "button_2_url": {
            "type": "string",
            "title": "Button 2 Url"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "button_3_text": {
            "type": "string",
            "title": "Button 3 Text"
          },
          "button_3_url": {
            "type": "string",
            "title": "Button 3 Url"
          },
          "button_1_url_ext": {
            "type": "integer",
            "title": "Button 1 Url Ext"
          },
          "button_2_url_ext": {
            "type": "integer",
            "title": "Button 2 Url Ext"
          },
          "button_3_url_ext": {
            "type": "integer",
            "title": "Button 3 Url Ext"
          },
          "button_4_text": {
            "type": "string",
            "title": "Button 4 Text"
          },
          "button_4_url": {
            "type": "string",
            "title": "Button 4 Url"
          },
          "button_4_url_ext": {
            "type": "integer",
            "title": "Button 4 Url Ext"
          }
        },
        "type": "object",
        "required": [
          "slideID"
        ],
        "title": "ElementsDatesliderSlidesOut"
      },
      "ElementsDatesliderSlidesOutUpdate": {
        "properties": {
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "align_vert": {
            "type": "string",
            "title": "Align Vert"
          },
          "align_hor": {
            "type": "string",
            "title": "Align Hor"
          },
          "lineBig": {
            "type": "string",
            "title": "Linebig"
          },
          "lineSmall": {
            "type": "string",
            "title": "Linesmall"
          },
          "button_1_text": {
            "type": "string",
            "title": "Button 1 Text"
          },
          "button_1_url": {
            "type": "string",
            "title": "Button 1 Url"
          },
          "button_2_text": {
            "type": "string",
            "title": "Button 2 Text"
          },
          "button_2_url": {
            "type": "string",
            "title": "Button 2 Url"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "button_3_text": {
            "type": "string",
            "title": "Button 3 Text"
          },
          "button_3_url": {
            "type": "string",
            "title": "Button 3 Url"
          },
          "button_1_url_ext": {
            "type": "integer",
            "title": "Button 1 Url Ext"
          },
          "button_2_url_ext": {
            "type": "integer",
            "title": "Button 2 Url Ext"
          },
          "button_3_url_ext": {
            "type": "integer",
            "title": "Button 3 Url Ext"
          },
          "button_4_text": {
            "type": "string",
            "title": "Button 4 Text"
          },
          "button_4_url": {
            "type": "string",
            "title": "Button 4 Url"
          },
          "button_4_url_ext": {
            "type": "integer",
            "title": "Button 4 Url Ext"
          }
        },
        "type": "object",
        "required": [
          "boolShow",
          "align_vert",
          "align_hor",
          "lineBig",
          "lineSmall",
          "button_1_text",
          "button_1_url",
          "button_2_text",
          "button_2_url",
          "sortnum",
          "button_3_text",
          "button_3_url",
          "button_1_url_ext",
          "button_2_url_ext",
          "button_3_url_ext",
          "button_4_text",
          "button_4_url",
          "button_4_url_ext"
        ],
        "title": "ElementsDatesliderSlidesOutUpdate"
      },
      "ElementsFlexsliderElementsIn": {
        "properties": {
          "elementID": {
            "type": "integer",
            "title": "Elementid"
          },
          "sliderID": {
            "type": "integer",
            "title": "Sliderid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "elName": {
            "type": "string",
            "title": "Elname"
          },
          "elImagefile": {
            "type": "string",
            "title": "Elimagefile"
          },
          "elUrl": {
            "type": "string",
            "title": "Elurl"
          },
          "elCaption": {
            "type": "string",
            "title": "Elcaption"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "ElementsFlexsliderElementsIn"
      },
      "ElementsFlexsliderElementsOut": {
        "properties": {
          "elementID": {
            "type": "integer",
            "title": "Elementid"
          },
          "sliderID": {
            "type": "integer",
            "title": "Sliderid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "elName": {
            "type": "string",
            "title": "Elname"
          },
          "elImagefile": {
            "type": "string",
            "title": "Elimagefile"
          },
          "elUrl": {
            "type": "string",
            "title": "Elurl"
          },
          "elCaption": {
            "type": "string",
            "title": "Elcaption"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "elementID"
        ],
        "title": "ElementsFlexsliderElementsOut"
      },
      "ElementsFlexsliderElementsOutUpdate": {
        "properties": {
          "sliderID": {
            "type": "integer",
            "title": "Sliderid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "elName": {
            "type": "string",
            "title": "Elname"
          },
          "elImagefile": {
            "type": "string",
            "title": "Elimagefile"
          },
          "elUrl": {
            "type": "string",
            "title": "Elurl"
          },
          "elCaption": {
            "type": "string",
            "title": "Elcaption"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "sliderID",
          "boolShow",
          "elName",
          "elImagefile",
          "elUrl",
          "elCaption",
          "sortnum"
        ],
        "title": "ElementsFlexsliderElementsOutUpdate"
      },
      "ElementsFlexsliderSlidersIn": {
        "properties": {
          "sliderID": {
            "type": "integer",
            "title": "Sliderid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "slidername": {
            "type": "string",
            "title": "Slidername"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "height": {
            "type": "string",
            "title": "Height"
          },
          "boolFullwidth": {
            "type": "integer",
            "title": "Boolfullwidth"
          },
          "boolTwothird": {
            "type": "integer",
            "title": "Booltwothird"
          },
          "boolOnethird": {
            "type": "integer",
            "title": "Boolonethird"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "ElementsFlexsliderSlidersIn"
      },
      "ElementsFlexsliderSlidersOut": {
        "properties": {
          "sliderID": {
            "type": "integer",
            "title": "Sliderid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "slidername": {
            "type": "string",
            "title": "Slidername"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "height": {
            "type": "string",
            "title": "Height"
          },
          "boolFullwidth": {
            "type": "integer",
            "title": "Boolfullwidth"
          },
          "boolTwothird": {
            "type": "integer",
            "title": "Booltwothird"
          },
          "boolOnethird": {
            "type": "integer",
            "title": "Boolonethird"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "sliderID"
        ],
        "title": "ElementsFlexsliderSlidersOut"
      },
      "ElementsFlexsliderSlidersOutUpdate": {
        "properties": {
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "slidername": {
            "type": "string",
            "title": "Slidername"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "height": {
            "type": "string",
            "title": "Height"
          },
          "boolFullwidth": {
            "type": "integer",
            "title": "Boolfullwidth"
          },
          "boolTwothird": {
            "type": "integer",
            "title": "Booltwothird"
          },
          "boolOnethird": {
            "type": "integer",
            "title": "Boolonethird"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "boolShow",
          "slidername",
          "comments",
          "height",
          "boolFullwidth",
          "boolTwothird",
          "boolOnethird",
          "date_created",
          "created_by"
        ],
        "title": "ElementsFlexsliderSlidersOutUpdate"
      },
      "ElementsLayersliderLayersIn": {
        "properties": {
          "layerID": {
            "type": "integer",
            "title": "Layerid"
          },
          "slideID": {
            "type": "integer",
            "title": "Slideid"
          },
          "pauseIn": {
            "type": "string",
            "title": "Pausein"
          },
          "distTop": {
            "type": "string",
            "title": "Disttop"
          },
          "distLeft": {
            "type": "string",
            "title": "Distleft"
          },
          "animIn": {
            "type": "string",
            "title": "Animin"
          },
          "animOut": {
            "type": "string",
            "title": "Animout"
          },
          "textAlign": {
            "type": "string",
            "title": "Textalign"
          },
          "lineBig": {
            "type": "string",
            "title": "Linebig"
          },
          "lineSmall": {
            "type": "string",
            "title": "Linesmall"
          },
          "button_1_text": {
            "type": "string",
            "title": "Button 1 Text"
          },
          "button_1_url": {
            "type": "string",
            "title": "Button 1 Url"
          },
          "button_2_text": {
            "type": "string",
            "title": "Button 2 Text"
          },
          "button_2_url": {
            "type": "string",
            "title": "Button 2 Url"
          }
        },
        "type": "object",
        "title": "ElementsLayersliderLayersIn"
      },
      "ElementsLayersliderLayersOut": {
        "properties": {
          "layerID": {
            "type": "integer",
            "title": "Layerid"
          },
          "slideID": {
            "type": "integer",
            "title": "Slideid"
          },
          "pauseIn": {
            "type": "string",
            "title": "Pausein"
          },
          "distTop": {
            "type": "string",
            "title": "Disttop"
          },
          "distLeft": {
            "type": "string",
            "title": "Distleft"
          },
          "animIn": {
            "type": "string",
            "title": "Animin"
          },
          "animOut": {
            "type": "string",
            "title": "Animout"
          },
          "textAlign": {
            "type": "string",
            "title": "Textalign"
          },
          "lineBig": {
            "type": "string",
            "title": "Linebig"
          },
          "lineSmall": {
            "type": "string",
            "title": "Linesmall"
          },
          "button_1_text": {
            "type": "string",
            "title": "Button 1 Text"
          },
          "button_1_url": {
            "type": "string",
            "title": "Button 1 Url"
          },
          "button_2_text": {
            "type": "string",
            "title": "Button 2 Text"
          },
          "button_2_url": {
            "type": "string",
            "title": "Button 2 Url"
          }
        },
        "type": "object",
        "required": [
          "layerID"
        ],
        "title": "ElementsLayersliderLayersOut"
      },
      "ElementsLayersliderLayersOutUpdate": {
        "properties": {
          "slideID": {
            "type": "integer",
            "title": "Slideid"
          },
          "pauseIn": {
            "type": "string",
            "title": "Pausein"
          },
          "distTop": {
            "type": "string",
            "title": "Disttop"
          },
          "distLeft": {
            "type": "string",
            "title": "Distleft"
          },
          "animIn": {
            "type": "string",
            "title": "Animin"
          },
          "animOut": {
            "type": "string",
            "title": "Animout"
          },
          "textAlign": {
            "type": "string",
            "title": "Textalign"
          },
          "lineBig": {
            "type": "string",
            "title": "Linebig"
          },
          "lineSmall": {
            "type": "string",
            "title": "Linesmall"
          },
          "button_1_text": {
            "type": "string",
            "title": "Button 1 Text"
          },
          "button_1_url": {
            "type": "string",
            "title": "Button 1 Url"
          },
          "button_2_text": {
            "type": "string",
            "title": "Button 2 Text"
          },
          "button_2_url": {
            "type": "string",
            "title": "Button 2 Url"
          }
        },
        "type": "object",
        "required": [
          "slideID",
          "pauseIn",
          "distTop",
          "distLeft",
          "animIn",
          "animOut",
          "textAlign",
          "lineBig",
          "lineSmall",
          "button_1_text",
          "button_1_url",
          "button_2_text",
          "button_2_url"
        ],
        "title": "ElementsLayersliderLayersOutUpdate"
      },
      "ElementsLayersliderSlidesIn": {
        "properties": {
          "slideID": {
            "type": "integer",
            "title": "Slideid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "slide_name": {
            "type": "string",
            "title": "Slide Name"
          },
          "slide_delay": {
            "type": "string",
            "title": "Slide Delay"
          },
          "slide_transition": {
            "type": "string",
            "title": "Slide Transition"
          },
          "bg_image": {
            "type": "string",
            "title": "Bg Image"
          }
        },
        "type": "object",
        "title": "ElementsLayersliderSlidesIn"
      },
      "ElementsLayersliderSlidesOut": {
        "properties": {
          "slideID": {
            "type": "integer",
            "title": "Slideid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "slide_name": {
            "type": "string",
            "title": "Slide Name"
          },
          "slide_delay": {
            "type": "string",
            "title": "Slide Delay"
          },
          "slide_transition": {
            "type": "string",
            "title": "Slide Transition"
          },
          "bg_image": {
            "type": "string",
            "title": "Bg Image"
          }
        },
        "type": "object",
        "required": [
          "slideID"
        ],
        "title": "ElementsLayersliderSlidesOut"
      },
      "ElementsLayersliderSlidesOutUpdate": {
        "properties": {
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "slide_name": {
            "type": "string",
            "title": "Slide Name"
          },
          "slide_delay": {
            "type": "string",
            "title": "Slide Delay"
          },
          "slide_transition": {
            "type": "string",
            "title": "Slide Transition"
          },
          "bg_image": {
            "type": "string",
            "title": "Bg Image"
          }
        },
        "type": "object",
        "required": [
          "parentID",
          "sortnum",
          "boolShow",
          "slide_name",
          "slide_delay",
          "slide_transition",
          "bg_image"
        ],
        "title": "ElementsLayersliderSlidesOutUpdate"
      },
      "FaqCategoriesIn": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "title": "FaqCategoriesIn"
      },
      "FaqCategoriesOut": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "required": [
          "categoryID"
        ],
        "title": "FaqCategoriesOut"
      },
      "FaqCategoriesOutUpdate": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "required": [
          "category",
          "boolShow",
          "sortnum",
          "depID"
        ],
        "title": "FaqCategoriesOutUpdate"
      },
      "FaqIn": {
        "properties": {
          "qID": {
            "type": "integer",
            "title": "Qid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "question": {
            "type": "string",
            "title": "Question"
          },
          "answer": {
            "type": "string",
            "title": "Answer"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "title": "FaqIn"
      },
      "FaqOut": {
        "properties": {
          "qID": {
            "type": "integer",
            "title": "Qid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "question": {
            "type": "string",
            "title": "Question"
          },
          "answer": {
            "type": "string",
            "title": "Answer"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "required": [
          "qID"
        ],
        "title": "FaqOut"
      },
      "FaqOutUpdate": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "question": {
            "type": "string",
            "title": "Question"
          },
          "answer": {
            "type": "string",
            "title": "Answer"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "required": [
          "categoryID",
          "boolShow",
          "question",
          "answer",
          "sortnum",
          "depID"
        ],
        "title": "FaqOutUpdate"
      },
      "FeedbacksIn": {
        "properties": {
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "feedbackName": {
            "type": "string",
            "title": "Feedbackname"
          },
          "activefrom": {
            "type": "integer",
            "title": "Activefrom"
          },
          "activeto": {
            "type": "integer",
            "title": "Activeto"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "priceGroupID": {
            "type": "integer",
            "title": "Pricegroupid"
          },
          "boolFormToMail": {
            "type": "integer",
            "title": "Boolformtomail"
          },
          "admMailTo": {
            "type": "string",
            "title": "Admmailto"
          },
          "boolOnlinePay": {
            "type": "integer",
            "title": "Boolonlinepay"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "FeedbacksIn"
      },
      "FeedbacksInIn": {
        "properties": {
          "senderID": {
            "type": "integer",
            "title": "Senderid"
          },
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "boolSuConfirmed": {
            "type": "integer",
            "title": "Boolsuconfirmed"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "pricecat": {
            "type": "string",
            "title": "Pricecat"
          },
          "parentinfo": {
            "type": "string",
            "title": "Parentinfo"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "lname": {
            "type": "string",
            "title": "Lname"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "memberID": {
            "type": "string",
            "title": "Memberid"
          },
          "bornyear": {
            "type": "string",
            "title": "Bornyear"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "pcodecity": {
            "type": "string",
            "title": "Pcodecity"
          },
          "postcode": {
            "type": "string",
            "title": "Postcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "telephone": {
            "type": "string",
            "title": "Telephone"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "seldate": {
            "type": "integer",
            "title": "Seldate"
          },
          "homeClub": {
            "type": "string",
            "title": "Homeclub"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "extraInfo": {
            "type": "string",
            "title": "Extrainfo"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "title": "FeedbacksInIn"
      },
      "FeedbacksInOut": {
        "properties": {
          "senderID": {
            "type": "integer",
            "title": "Senderid"
          },
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "boolSuConfirmed": {
            "type": "integer",
            "title": "Boolsuconfirmed"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "pricecat": {
            "type": "string",
            "title": "Pricecat"
          },
          "parentinfo": {
            "type": "string",
            "title": "Parentinfo"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "lname": {
            "type": "string",
            "title": "Lname"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "memberID": {
            "type": "string",
            "title": "Memberid"
          },
          "bornyear": {
            "type": "string",
            "title": "Bornyear"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "pcodecity": {
            "type": "string",
            "title": "Pcodecity"
          },
          "postcode": {
            "type": "string",
            "title": "Postcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "telephone": {
            "type": "string",
            "title": "Telephone"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "seldate": {
            "type": "integer",
            "title": "Seldate"
          },
          "homeClub": {
            "type": "string",
            "title": "Homeclub"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "extraInfo": {
            "type": "string",
            "title": "Extrainfo"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "senderID"
        ],
        "title": "FeedbacksInOut"
      },
      "FeedbacksInOutUpdate": {
        "properties": {
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "boolSuConfirmed": {
            "type": "integer",
            "title": "Boolsuconfirmed"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "pricecat": {
            "type": "string",
            "title": "Pricecat"
          },
          "parentinfo": {
            "type": "string",
            "title": "Parentinfo"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "lname": {
            "type": "string",
            "title": "Lname"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "memberID": {
            "type": "string",
            "title": "Memberid"
          },
          "bornyear": {
            "type": "string",
            "title": "Bornyear"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "pcodecity": {
            "type": "string",
            "title": "Pcodecity"
          },
          "postcode": {
            "type": "string",
            "title": "Postcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "telephone": {
            "type": "string",
            "title": "Telephone"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "seldate": {
            "type": "integer",
            "title": "Seldate"
          },
          "homeClub": {
            "type": "string",
            "title": "Homeclub"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "extraInfo": {
            "type": "string",
            "title": "Extrainfo"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "feedbackID",
          "boolSuConfirmed",
          "orderID",
          "price",
          "pricecat",
          "parentinfo",
          "fname",
          "lname",
          "fullname",
          "email",
          "memberID",
          "bornyear",
          "address",
          "pcodecity",
          "postcode",
          "city",
          "telephone",
          "hcp",
          "seldate",
          "homeClub",
          "comments",
          "extraInfo",
          "date_created"
        ],
        "title": "FeedbacksInOutUpdate"
      },
      "FeedbacksOut": {
        "properties": {
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "feedbackName": {
            "type": "string",
            "title": "Feedbackname"
          },
          "activefrom": {
            "type": "integer",
            "title": "Activefrom"
          },
          "activeto": {
            "type": "integer",
            "title": "Activeto"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "priceGroupID": {
            "type": "integer",
            "title": "Pricegroupid"
          },
          "boolFormToMail": {
            "type": "integer",
            "title": "Boolformtomail"
          },
          "admMailTo": {
            "type": "string",
            "title": "Admmailto"
          },
          "boolOnlinePay": {
            "type": "integer",
            "title": "Boolonlinepay"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "feedbackID"
        ],
        "title": "FeedbacksOut"
      },
      "FeedbacksOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "feedbackName": {
            "type": "string",
            "title": "Feedbackname"
          },
          "activefrom": {
            "type": "integer",
            "title": "Activefrom"
          },
          "activeto": {
            "type": "integer",
            "title": "Activeto"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "priceGroupID": {
            "type": "integer",
            "title": "Pricegroupid"
          },
          "boolFormToMail": {
            "type": "integer",
            "title": "Boolformtomail"
          },
          "admMailTo": {
            "type": "string",
            "title": "Admmailto"
          },
          "boolOnlinePay": {
            "type": "integer",
            "title": "Boolonlinepay"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "feedbackName",
          "activefrom",
          "activeto",
          "formID",
          "priceGroupID",
          "boolFormToMail",
          "admMailTo",
          "boolOnlinePay",
          "date_created",
          "created_by"
        ],
        "title": "FeedbacksOutUpdate"
      },
      "FormsBymailIn": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "formname": {
            "type": "string",
            "title": "Formname"
          },
          "maildate": {
            "type": "integer",
            "title": "Maildate"
          },
          "tomail": {
            "type": "string",
            "title": "Tomail"
          },
          "fromname": {
            "type": "string",
            "title": "Fromname"
          },
          "fromemail": {
            "type": "string",
            "title": "Fromemail"
          },
          "theForm": {
            "type": "string",
            "title": "Theform"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          }
        },
        "type": "object",
        "title": "FormsBymailIn"
      },
      "FormsBymailOut": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "formname": {
            "type": "string",
            "title": "Formname"
          },
          "maildate": {
            "type": "integer",
            "title": "Maildate"
          },
          "tomail": {
            "type": "string",
            "title": "Tomail"
          },
          "fromname": {
            "type": "string",
            "title": "Fromname"
          },
          "fromemail": {
            "type": "string",
            "title": "Fromemail"
          },
          "theForm": {
            "type": "string",
            "title": "Theform"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          }
        },
        "type": "object",
        "required": [
          "recID"
        ],
        "title": "FormsBymailOut"
      },
      "FormsBymailOutUpdate": {
        "properties": {
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "formname": {
            "type": "string",
            "title": "Formname"
          },
          "maildate": {
            "type": "integer",
            "title": "Maildate"
          },
          "tomail": {
            "type": "string",
            "title": "Tomail"
          },
          "fromname": {
            "type": "string",
            "title": "Fromname"
          },
          "fromemail": {
            "type": "string",
            "title": "Fromemail"
          },
          "theForm": {
            "type": "string",
            "title": "Theform"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          }
        },
        "type": "object",
        "required": [
          "formID",
          "formname",
          "maildate",
          "tomail",
          "fromname",
          "fromemail",
          "theForm",
          "formkey"
        ],
        "title": "FormsBymailOutUpdate"
      },
      "FormsFieldsIn": {
        "properties": {
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "required": {
            "type": "integer",
            "title": "Required"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "FormsFieldsIn"
      },
      "FormsFieldsOptionsIn": {
        "properties": {
          "optionID": {
            "type": "integer",
            "title": "Optionid"
          },
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "selOption": {
            "type": "string",
            "title": "Seloption"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "FormsFieldsOptionsIn"
      },
      "FormsFieldsOptionsOut": {
        "properties": {
          "optionID": {
            "type": "integer",
            "title": "Optionid"
          },
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "selOption": {
            "type": "string",
            "title": "Seloption"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "optionID"
        ],
        "title": "FormsFieldsOptionsOut"
      },
      "FormsFieldsOptionsOutUpdate": {
        "properties": {
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "selOption": {
            "type": "string",
            "title": "Seloption"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "fieldID",
          "selOption",
          "sortnum"
        ],
        "title": "FormsFieldsOptionsOutUpdate"
      },
      "FormsFieldsOut": {
        "properties": {
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "required": {
            "type": "integer",
            "title": "Required"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "formID"
        ],
        "title": "FormsFieldsOut"
      },
      "FormsFieldsOutUpdate": {
        "properties": {
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "required": {
            "type": "integer",
            "title": "Required"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "fieldID",
          "required",
          "sortnum"
        ],
        "title": "FormsFieldsOutUpdate"
      },
      "FormsFieldsSourceIn": {
        "properties": {
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "predef": {
            "type": "integer",
            "title": "Predef"
          },
          "fieldname": {
            "type": "string",
            "title": "Fieldname"
          },
          "fieldlabel": {
            "type": "string",
            "title": "Fieldlabel"
          },
          "fieldTypeID": {
            "type": "integer",
            "title": "Fieldtypeid"
          },
          "fieldDescr": {
            "type": "string",
            "title": "Fielddescr"
          },
          "maxchars": {
            "type": "integer",
            "title": "Maxchars"
          },
          "fieldwidth": {
            "type": "string",
            "title": "Fieldwidth"
          },
          "arearows": {
            "type": "integer",
            "title": "Arearows"
          }
        },
        "type": "object",
        "title": "FormsFieldsSourceIn"
      },
      "FormsFieldsSourceOut": {
        "properties": {
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "predef": {
            "type": "integer",
            "title": "Predef"
          },
          "fieldname": {
            "type": "string",
            "title": "Fieldname"
          },
          "fieldlabel": {
            "type": "string",
            "title": "Fieldlabel"
          },
          "fieldTypeID": {
            "type": "integer",
            "title": "Fieldtypeid"
          },
          "fieldDescr": {
            "type": "string",
            "title": "Fielddescr"
          },
          "maxchars": {
            "type": "integer",
            "title": "Maxchars"
          },
          "fieldwidth": {
            "type": "string",
            "title": "Fieldwidth"
          },
          "arearows": {
            "type": "integer",
            "title": "Arearows"
          }
        },
        "type": "object",
        "required": [
          "fieldID"
        ],
        "title": "FormsFieldsSourceOut"
      },
      "FormsFieldsSourceOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "predef": {
            "type": "integer",
            "title": "Predef"
          },
          "fieldname": {
            "type": "string",
            "title": "Fieldname"
          },
          "fieldlabel": {
            "type": "string",
            "title": "Fieldlabel"
          },
          "fieldTypeID": {
            "type": "integer",
            "title": "Fieldtypeid"
          },
          "fieldDescr": {
            "type": "string",
            "title": "Fielddescr"
          },
          "maxchars": {
            "type": "integer",
            "title": "Maxchars"
          },
          "fieldwidth": {
            "type": "string",
            "title": "Fieldwidth"
          },
          "arearows": {
            "type": "integer",
            "title": "Arearows"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "predef",
          "fieldname",
          "fieldlabel",
          "fieldTypeID",
          "fieldDescr",
          "maxchars",
          "fieldwidth",
          "arearows"
        ],
        "title": "FormsFieldsSourceOutUpdate"
      },
      "FormsFieldtypesIn": {
        "properties": {
          "fieldTypeID": {
            "type": "integer",
            "title": "Fieldtypeid"
          },
          "fieldType": {
            "type": "string",
            "title": "Fieldtype"
          },
          "preDef": {
            "type": "integer",
            "title": "Predef"
          },
          "descr": {
            "type": "string",
            "title": "Descr"
          },
          "sort": {
            "type": "integer",
            "title": "Sort"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "defFunction": {
            "type": "string",
            "title": "Deffunction"
          }
        },
        "type": "object",
        "title": "FormsFieldtypesIn"
      },
      "FormsFieldtypesOut": {
        "properties": {
          "fieldTypeID": {
            "type": "integer",
            "title": "Fieldtypeid"
          },
          "fieldType": {
            "type": "string",
            "title": "Fieldtype"
          },
          "preDef": {
            "type": "integer",
            "title": "Predef"
          },
          "descr": {
            "type": "string",
            "title": "Descr"
          },
          "sort": {
            "type": "integer",
            "title": "Sort"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "defFunction": {
            "type": "string",
            "title": "Deffunction"
          }
        },
        "type": "object",
        "required": [
          "fieldTypeID"
        ],
        "title": "FormsFieldtypesOut"
      },
      "FormsFieldtypesOutUpdate": {
        "properties": {
          "fieldType": {
            "type": "string",
            "title": "Fieldtype"
          },
          "preDef": {
            "type": "integer",
            "title": "Predef"
          },
          "descr": {
            "type": "string",
            "title": "Descr"
          },
          "sort": {
            "type": "integer",
            "title": "Sort"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "defFunction": {
            "type": "string",
            "title": "Deffunction"
          }
        },
        "type": "object",
        "required": [
          "fieldType",
          "preDef",
          "descr",
          "sort",
          "boolShow",
          "defFunction"
        ],
        "title": "FormsFieldtypesOutUpdate"
      },
      "FormsIn": {
        "properties": {
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "formName": {
            "type": "string",
            "title": "Formname"
          },
          "formType": {
            "type": "string",
            "title": "Formtype"
          },
          "formDescription": {
            "type": "string",
            "title": "Formdescription"
          },
          "mailReceiver": {
            "type": "string",
            "title": "Mailreceiver"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "date_updated": {
            "type": "integer",
            "title": "Date Updated"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "FormsIn"
      },
      "FormsOut": {
        "properties": {
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "formName": {
            "type": "string",
            "title": "Formname"
          },
          "formType": {
            "type": "string",
            "title": "Formtype"
          },
          "formDescription": {
            "type": "string",
            "title": "Formdescription"
          },
          "mailReceiver": {
            "type": "string",
            "title": "Mailreceiver"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "date_updated": {
            "type": "integer",
            "title": "Date Updated"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "formID"
        ],
        "title": "FormsOut"
      },
      "FormsOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "formName": {
            "type": "string",
            "title": "Formname"
          },
          "formType": {
            "type": "string",
            "title": "Formtype"
          },
          "formDescription": {
            "type": "string",
            "title": "Formdescription"
          },
          "mailReceiver": {
            "type": "string",
            "title": "Mailreceiver"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "date_updated": {
            "type": "integer",
            "title": "Date Updated"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "formName",
          "formType",
          "formDescription",
          "mailReceiver",
          "date_created",
          "date_updated",
          "created_by"
        ],
        "title": "FormsOutUpdate"
      },
      "FormsReceivedIn": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "form": {
            "type": "string",
            "title": "Form"
          },
          "sender_lname": {
            "type": "string",
            "title": "Sender Lname"
          },
          "sender_fname": {
            "type": "string",
            "title": "Sender Fname"
          },
          "sender_email": {
            "type": "string",
            "title": "Sender Email"
          },
          "to_mail": {
            "type": "string",
            "title": "To Mail"
          },
          "formContent": {
            "type": "string",
            "title": "Formcontent"
          },
          "formKey": {
            "type": "string",
            "title": "Formkey"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "title": "FormsReceivedIn"
      },
      "FormsReceivedOut": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "form": {
            "type": "string",
            "title": "Form"
          },
          "sender_lname": {
            "type": "string",
            "title": "Sender Lname"
          },
          "sender_fname": {
            "type": "string",
            "title": "Sender Fname"
          },
          "sender_email": {
            "type": "string",
            "title": "Sender Email"
          },
          "to_mail": {
            "type": "string",
            "title": "To Mail"
          },
          "formContent": {
            "type": "string",
            "title": "Formcontent"
          },
          "formKey": {
            "type": "string",
            "title": "Formkey"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "recID"
        ],
        "title": "FormsReceivedOut"
      },
      "FormsReceivedOutUpdate": {
        "properties": {
          "form": {
            "type": "string",
            "title": "Form"
          },
          "sender_lname": {
            "type": "string",
            "title": "Sender Lname"
          },
          "sender_fname": {
            "type": "string",
            "title": "Sender Fname"
          },
          "sender_email": {
            "type": "string",
            "title": "Sender Email"
          },
          "to_mail": {
            "type": "string",
            "title": "To Mail"
          },
          "formContent": {
            "type": "string",
            "title": "Formcontent"
          },
          "formKey": {
            "type": "string",
            "title": "Formkey"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "form",
          "sender_lname",
          "sender_fname",
          "sender_email",
          "to_mail",
          "formContent",
          "formKey",
          "date_created"
        ],
        "title": "FormsReceivedOutUpdate"
      },
      "FormsTypesIn": {
        "properties": {
          "formType": {
            "type": "integer",
            "title": "Formtype"
          },
          "typename": {
            "type": "string",
            "title": "Typename"
          }
        },
        "type": "object",
        "title": "FormsTypesIn"
      },
      "FormsTypesOut": {
        "properties": {
          "formType": {
            "type": "integer",
            "title": "Formtype"
          },
          "typename": {
            "type": "string",
            "title": "Typename"
          }
        },
        "type": "object",
        "required": [
          "formType"
        ],
        "title": "FormsTypesOut"
      },
      "FormsTypesOutUpdate": {
        "properties": {
          "typename": {
            "type": "string",
            "title": "Typename"
          }
        },
        "type": "object",
        "required": [
          "typename"
        ],
        "title": "FormsTypesOutUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImagesCcondIn": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "title": "ImagesCcondIn"
      },
      "ImagesCcondOut": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "imageID"
        ],
        "title": "ImagesCcondOut"
      },
      "ImagesCcondOutUpdate": {
        "properties": {
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "imagefile",
          "date_created"
        ],
        "title": "ImagesCcondOutUpdate"
      },
      "ImagesIn": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "imgWidth": {
            "type": "integer",
            "title": "Imgwidth"
          },
          "imgHeight": {
            "type": "integer",
            "title": "Imgheight"
          },
          "imagename": {
            "type": "string",
            "title": "Imagename"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "credits": {
            "type": "string",
            "title": "Credits"
          },
          "sizecat": {
            "type": "integer",
            "title": "Sizecat"
          },
          "boolBoxed": {
            "type": "boolean",
            "title": "Boolboxed"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "categoryID",
          "imagename",
          "imagefile"
        ],
        "title": "ImagesIn",
        "description": "Matches model class Images"
      },
      "ImagesOut": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "imgWidth": {
            "type": "integer",
            "title": "Imgwidth"
          },
          "imgHeight": {
            "type": "integer",
            "title": "Imgheight"
          },
          "imagename": {
            "type": "string",
            "title": "Imagename"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "credits": {
            "type": "string",
            "title": "Credits"
          },
          "sizecat": {
            "type": "integer",
            "title": "Sizecat"
          },
          "boolBoxed": {
            "type": "boolean",
            "title": "Boolboxed"
          },
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "categoryID",
          "imagename",
          "imagefile",
          "imageID",
          "date_created",
          "created_by"
        ],
        "title": "ImagesOut"
      },
      "ImagesOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "imgWidth": {
            "type": "integer",
            "title": "Imgwidth"
          },
          "imgHeight": {
            "type": "integer",
            "title": "Imgheight"
          },
          "imagename": {
            "type": "string",
            "title": "Imagename"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "credits": {
            "type": "string",
            "title": "Credits"
          },
          "sizecat": {
            "type": "integer",
            "title": "Sizecat"
          },
          "boolBoxed": {
            "type": "boolean",
            "title": "Boolboxed"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "categoryID",
          "imgWidth",
          "imgHeight",
          "imagename",
          "imagefile",
          "imgDescription",
          "credits",
          "sizecat",
          "boolBoxed",
          "date_created",
          "created_by"
        ],
        "title": "ImagesOutUpdate"
      },
      "ImagesProfilesIn": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "imagepath": {
            "type": "string",
            "title": "Imagepath"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "title": "ImagesProfilesIn"
      },
      "ImagesProfilesOut": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "imagepath": {
            "type": "string",
            "title": "Imagepath"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "imageID"
        ],
        "title": "ImagesProfilesOut"
      },
      "ImagesProfilesOutUpdate": {
        "properties": {
          "imagepath": {
            "type": "string",
            "title": "Imagepath"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          }
        },
        "type": "object",
        "required": [
          "imagepath",
          "imagefile",
          "firstname",
          "lastname",
          "date_created"
        ],
        "title": "ImagesProfilesOutUpdate"
      },
      "ImagesSliderIn": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "title": "ImagesSliderIn"
      },
      "ImagesSliderOut": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "required": [
          "imageID"
        ],
        "title": "ImagesSliderOut"
      },
      "ImagesSliderOutUpdate": {
        "properties": {
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "required": [
          "imagefile",
          "date_created",
          "depID"
        ],
        "title": "ImagesSliderOutUpdate"
      },
      "Images_CategoriesIn": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "category"
        ],
        "title": "Images_CategoriesIn",
        "description": "Matches model class Images_Categories"
      },
      "Images_CategoriesOut": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "category",
          "categoryID"
        ],
        "title": "Images_CategoriesOut"
      },
      "Images_CategoriesOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "category"
        ],
        "title": "Images_CategoriesOutUpdate"
      },
      "MembersChangeIn": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "membernum": {
            "type": "string",
            "title": "Membernum"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "memberemail": {
            "type": "string",
            "title": "Memberemail"
          },
          "cat_old": {
            "type": "string",
            "title": "Cat Old"
          },
          "cat_new": {
            "type": "string",
            "title": "Cat New"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "terms_extra": {
            "type": "string",
            "title": "Terms Extra"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "famMembers": {
            "type": "string",
            "title": "Fammembers"
          }
        },
        "type": "object",
        "title": "MembersChangeIn"
      },
      "MembersChangeOut": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "membernum": {
            "type": "string",
            "title": "Membernum"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "memberemail": {
            "type": "string",
            "title": "Memberemail"
          },
          "cat_old": {
            "type": "string",
            "title": "Cat Old"
          },
          "cat_new": {
            "type": "string",
            "title": "Cat New"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "terms_extra": {
            "type": "string",
            "title": "Terms Extra"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "famMembers": {
            "type": "string",
            "title": "Fammembers"
          }
        },
        "type": "object",
        "required": [
          "recID"
        ],
        "title": "MembersChangeOut"
      },
      "MembersChangeOutUpdate": {
        "properties": {
          "membernum": {
            "type": "string",
            "title": "Membernum"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "memberemail": {
            "type": "string",
            "title": "Memberemail"
          },
          "cat_old": {
            "type": "string",
            "title": "Cat Old"
          },
          "cat_new": {
            "type": "string",
            "title": "Cat New"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "terms_extra": {
            "type": "string",
            "title": "Terms Extra"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "famMembers": {
            "type": "string",
            "title": "Fammembers"
          }
        },
        "type": "object",
        "required": [
          "membernum",
          "firstname",
          "lastname",
          "memberemail",
          "cat_old",
          "cat_new",
          "comments",
          "formkey",
          "terms",
          "terms_extra",
          "boolDeleted",
          "date_created",
          "famMembers"
        ],
        "title": "MembersChangeOutUpdate"
      },
      "MembersInIn": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "orderConfirmed": {
            "type": "integer",
            "title": "Orderconfirmed"
          },
          "born": {
            "type": "string",
            "title": "Born"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "membAddress": {
            "type": "string",
            "title": "Membaddress"
          },
          "pcodecity": {
            "type": "string",
            "title": "Pcodecity"
          },
          "fromEmail": {
            "type": "string",
            "title": "Fromemail"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "parentname": {
            "type": "string",
            "title": "Parentname"
          },
          "parentphone": {
            "type": "string",
            "title": "Parentphone"
          },
          "parentemail": {
            "type": "string",
            "title": "Parentemail"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "membOtherClub": {
            "type": "string",
            "title": "Membotherclub"
          },
          "otherClubname": {
            "type": "string",
            "title": "Otherclubname"
          },
          "boolHomeclub": {
            "type": "string",
            "title": "Boolhomeclub"
          },
          "boolEcoDue": {
            "type": "string",
            "title": "Boolecodue"
          },
          "houseMagazine": {
            "type": "string",
            "title": "Housemagazine"
          },
          "wishMagazine": {
            "type": "string",
            "title": "Wishmagazine"
          },
          "membercat": {
            "type": "string",
            "title": "Membercat"
          },
          "familyRelations": {
            "type": "string",
            "title": "Familyrelations"
          },
          "extra_1": {
            "type": "string",
            "title": "Extra 1"
          },
          "extra_2": {
            "type": "string",
            "title": "Extra 2"
          },
          "extra_3": {
            "type": "string",
            "title": "Extra 3"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "payPeriode": {
            "type": "string",
            "title": "Payperiode"
          },
          "terms_extra": {
            "type": "string",
            "title": "Terms Extra"
          },
          "vtgCourse": {
            "type": "string",
            "title": "Vtgcourse"
          },
          "vtgClub": {
            "type": "string",
            "title": "Vtgclub"
          },
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "vtgYear": {
            "type": "string",
            "title": "Vtgyear"
          },
          "otherMembernum": {
            "type": "string",
            "title": "Othermembernum"
          },
          "boolAdult": {
            "type": "integer",
            "title": "Booladult"
          },
          "vtgID": {
            "type": "integer",
            "title": "Vtgid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "otherClubMemberNum": {
            "type": "string",
            "title": "Otherclubmembernum"
          },
          "familyMembership": {
            "type": "integer",
            "title": "Familymembership"
          },
          "customerclub": {
            "type": "string",
            "title": "Customerclub"
          },
          "participantID_vtg": {
            "type": "integer",
            "title": "Participantid Vtg"
          },
          "borndate": {
            "type": "integer",
            "title": "Borndate"
          },
          "junOrgTraining": {
            "type": "string",
            "title": "Junorgtraining"
          }
        },
        "type": "object",
        "title": "MembersInIn"
      },
      "MembersInOut": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "orderConfirmed": {
            "type": "integer",
            "title": "Orderconfirmed"
          },
          "born": {
            "type": "string",
            "title": "Born"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "membAddress": {
            "type": "string",
            "title": "Membaddress"
          },
          "pcodecity": {
            "type": "string",
            "title": "Pcodecity"
          },
          "fromEmail": {
            "type": "string",
            "title": "Fromemail"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "parentname": {
            "type": "string",
            "title": "Parentname"
          },
          "parentphone": {
            "type": "string",
            "title": "Parentphone"
          },
          "parentemail": {
            "type": "string",
            "title": "Parentemail"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "membOtherClub": {
            "type": "string",
            "title": "Membotherclub"
          },
          "otherClubname": {
            "type": "string",
            "title": "Otherclubname"
          },
          "boolHomeclub": {
            "type": "string",
            "title": "Boolhomeclub"
          },
          "boolEcoDue": {
            "type": "string",
            "title": "Boolecodue"
          },
          "houseMagazine": {
            "type": "string",
            "title": "Housemagazine"
          },
          "wishMagazine": {
            "type": "string",
            "title": "Wishmagazine"
          },
          "membercat": {
            "type": "string",
            "title": "Membercat"
          },
          "familyRelations": {
            "type": "string",
            "title": "Familyrelations"
          },
          "extra_1": {
            "type": "string",
            "title": "Extra 1"
          },
          "extra_2": {
            "type": "string",
            "title": "Extra 2"
          },
          "extra_3": {
            "type": "string",
            "title": "Extra 3"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "payPeriode": {
            "type": "string",
            "title": "Payperiode"
          },
          "terms_extra": {
            "type": "string",
            "title": "Terms Extra"
          },
          "vtgCourse": {
            "type": "string",
            "title": "Vtgcourse"
          },
          "vtgClub": {
            "type": "string",
            "title": "Vtgclub"
          },
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "vtgYear": {
            "type": "string",
            "title": "Vtgyear"
          },
          "otherMembernum": {
            "type": "string",
            "title": "Othermembernum"
          },
          "boolAdult": {
            "type": "integer",
            "title": "Booladult"
          },
          "vtgID": {
            "type": "integer",
            "title": "Vtgid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "otherClubMemberNum": {
            "type": "string",
            "title": "Otherclubmembernum"
          },
          "familyMembership": {
            "type": "integer",
            "title": "Familymembership"
          },
          "customerclub": {
            "type": "string",
            "title": "Customerclub"
          },
          "participantID_vtg": {
            "type": "integer",
            "title": "Participantid Vtg"
          },
          "borndate": {
            "type": "integer",
            "title": "Borndate"
          },
          "junOrgTraining": {
            "type": "string",
            "title": "Junorgtraining"
          }
        },
        "type": "object",
        "required": [
          "recID"
        ],
        "title": "MembersInOut"
      },
      "MembersInOutUpdate": {
        "properties": {
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "orderConfirmed": {
            "type": "integer",
            "title": "Orderconfirmed"
          },
          "born": {
            "type": "string",
            "title": "Born"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "membAddress": {
            "type": "string",
            "title": "Membaddress"
          },
          "pcodecity": {
            "type": "string",
            "title": "Pcodecity"
          },
          "fromEmail": {
            "type": "string",
            "title": "Fromemail"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "parentname": {
            "type": "string",
            "title": "Parentname"
          },
          "parentphone": {
            "type": "string",
            "title": "Parentphone"
          },
          "parentemail": {
            "type": "string",
            "title": "Parentemail"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "membOtherClub": {
            "type": "string",
            "title": "Membotherclub"
          },
          "otherClubname": {
            "type": "string",
            "title": "Otherclubname"
          },
          "boolHomeclub": {
            "type": "string",
            "title": "Boolhomeclub"
          },
          "boolEcoDue": {
            "type": "string",
            "title": "Boolecodue"
          },
          "houseMagazine": {
            "type": "string",
            "title": "Housemagazine"
          },
          "wishMagazine": {
            "type": "string",
            "title": "Wishmagazine"
          },
          "membercat": {
            "type": "string",
            "title": "Membercat"
          },
          "familyRelations": {
            "type": "string",
            "title": "Familyrelations"
          },
          "extra_1": {
            "type": "string",
            "title": "Extra 1"
          },
          "extra_2": {
            "type": "string",
            "title": "Extra 2"
          },
          "extra_3": {
            "type": "string",
            "title": "Extra 3"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "payPeriode": {
            "type": "string",
            "title": "Payperiode"
          },
          "terms_extra": {
            "type": "string",
            "title": "Terms Extra"
          },
          "vtgCourse": {
            "type": "string",
            "title": "Vtgcourse"
          },
          "vtgClub": {
            "type": "string",
            "title": "Vtgclub"
          },
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "vtgYear": {
            "type": "string",
            "title": "Vtgyear"
          },
          "otherMembernum": {
            "type": "string",
            "title": "Othermembernum"
          },
          "boolAdult": {
            "type": "integer",
            "title": "Booladult"
          },
          "vtgID": {
            "type": "integer",
            "title": "Vtgid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "otherClubMemberNum": {
            "type": "string",
            "title": "Otherclubmembernum"
          },
          "familyMembership": {
            "type": "integer",
            "title": "Familymembership"
          },
          "customerclub": {
            "type": "string",
            "title": "Customerclub"
          },
          "participantID_vtg": {
            "type": "integer",
            "title": "Participantid Vtg"
          },
          "borndate": {
            "type": "integer",
            "title": "Borndate"
          },
          "junOrgTraining": {
            "type": "string",
            "title": "Junorgtraining"
          }
        },
        "type": "object",
        "required": [
          "orderID",
          "orderConfirmed",
          "born",
          "firstname",
          "lastname",
          "membAddress",
          "pcodecity",
          "fromEmail",
          "phone",
          "parentname",
          "parentphone",
          "parentemail",
          "hcp",
          "membOtherClub",
          "otherClubname",
          "boolHomeclub",
          "boolEcoDue",
          "houseMagazine",
          "wishMagazine",
          "membercat",
          "familyRelations",
          "extra_1",
          "extra_2",
          "extra_3",
          "comments",
          "formkey",
          "date_created",
          "boolDeleted",
          "terms",
          "payPeriode",
          "terms_extra",
          "vtgCourse",
          "vtgClub",
          "gender",
          "vtgYear",
          "otherMembernum",
          "boolAdult",
          "vtgID",
          "categoryID",
          "otherClubMemberNum",
          "familyMembership",
          "customerclub",
          "participantID_vtg",
          "borndate",
          "junOrgTraining"
        ],
        "title": "MembersInOutUpdate"
      },
      "MembersOutIn": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "membernum": {
            "type": "string",
            "title": "Membernum"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          },
          "contactMe": {
            "type": "string",
            "title": "Contactme"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "supportMember": {
            "type": "string",
            "title": "Supportmember"
          }
        },
        "type": "object",
        "title": "MembersOutIn"
      },
      "MembersOutOut": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "membernum": {
            "type": "string",
            "title": "Membernum"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          },
          "contactMe": {
            "type": "string",
            "title": "Contactme"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "supportMember": {
            "type": "string",
            "title": "Supportmember"
          }
        },
        "type": "object",
        "required": [
          "recID"
        ],
        "title": "MembersOutOut"
      },
      "MembersOutOutUpdate": {
        "properties": {
          "membernum": {
            "type": "string",
            "title": "Membernum"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "formkey": {
            "type": "string",
            "title": "Formkey"
          },
          "contactMe": {
            "type": "string",
            "title": "Contactme"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolDeleted": {
            "type": "integer",
            "title": "Booldeleted"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "supportMember": {
            "type": "string",
            "title": "Supportmember"
          }
        },
        "type": "object",
        "required": [
          "membernum",
          "firstname",
          "lastname",
          "email",
          "comments",
          "formkey",
          "contactMe",
          "date_created",
          "boolDeleted",
          "reason",
          "supportMember"
        ],
        "title": "MembersOutOutUpdate"
      },
      "MembersSignoutSourceIn": {
        "properties": {
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "fieldname": {
            "type": "string",
            "title": "Fieldname"
          },
          "fieldtype": {
            "type": "integer",
            "title": "Fieldtype"
          },
          "fieldExplain": {
            "type": "string",
            "title": "Fieldexplain"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolActive": {
            "type": "integer",
            "title": "Boolactive"
          },
          "db_col": {
            "type": "string",
            "title": "Db Col"
          },
          "field_html": {
            "type": "string",
            "title": "Field Html"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "MembersSignoutSourceIn"
      },
      "MembersSignoutSourceOut": {
        "properties": {
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "fieldname": {
            "type": "string",
            "title": "Fieldname"
          },
          "fieldtype": {
            "type": "integer",
            "title": "Fieldtype"
          },
          "fieldExplain": {
            "type": "string",
            "title": "Fieldexplain"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolActive": {
            "type": "integer",
            "title": "Boolactive"
          },
          "db_col": {
            "type": "string",
            "title": "Db Col"
          },
          "field_html": {
            "type": "string",
            "title": "Field Html"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "fieldID"
        ],
        "title": "MembersSignoutSourceOut"
      },
      "MembersSignoutSourceOutUpdate": {
        "properties": {
          "fieldname": {
            "type": "string",
            "title": "Fieldname"
          },
          "fieldtype": {
            "type": "integer",
            "title": "Fieldtype"
          },
          "fieldExplain": {
            "type": "string",
            "title": "Fieldexplain"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolActive": {
            "type": "integer",
            "title": "Boolactive"
          },
          "db_col": {
            "type": "string",
            "title": "Db Col"
          },
          "field_html": {
            "type": "string",
            "title": "Field Html"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "fieldname",
          "fieldtype",
          "fieldExplain",
          "boolShow",
          "boolActive",
          "db_col",
          "field_html",
          "sortnum"
        ],
        "title": "MembersSignoutSourceOutUpdate"
      },
      "MembersSignupSourceIn": {
        "properties": {
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "fieldname": {
            "type": "string",
            "title": "Fieldname"
          },
          "fieldtype": {
            "type": "integer",
            "title": "Fieldtype"
          },
          "fieldExplain": {
            "type": "string",
            "title": "Fieldexplain"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolActive": {
            "type": "integer",
            "title": "Boolactive"
          },
          "db_col": {
            "type": "string",
            "title": "Db Col"
          },
          "field_html": {
            "type": "string",
            "title": "Field Html"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "MembersSignupSourceIn"
      },
      "MembersSignupSourceOut": {
        "properties": {
          "fieldID": {
            "type": "integer",
            "title": "Fieldid"
          },
          "fieldname": {
            "type": "string",
            "title": "Fieldname"
          },
          "fieldtype": {
            "type": "integer",
            "title": "Fieldtype"
          },
          "fieldExplain": {
            "type": "string",
            "title": "Fieldexplain"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolActive": {
            "type": "integer",
            "title": "Boolactive"
          },
          "db_col": {
            "type": "string",
            "title": "Db Col"
          },
          "field_html": {
            "type": "string",
            "title": "Field Html"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "fieldID"
        ],
        "title": "MembersSignupSourceOut"
      },
      "MembersSignupSourceOutUpdate": {
        "properties": {
          "fieldname": {
            "type": "string",
            "title": "Fieldname"
          },
          "fieldtype": {
            "type": "integer",
            "title": "Fieldtype"
          },
          "fieldExplain": {
            "type": "string",
            "title": "Fieldexplain"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolActive": {
            "type": "integer",
            "title": "Boolactive"
          },
          "db_col": {
            "type": "string",
            "title": "Db Col"
          },
          "field_html": {
            "type": "string",
            "title": "Field Html"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "fieldname",
          "fieldtype",
          "fieldExplain",
          "boolShow",
          "boolActive",
          "db_col",
          "field_html",
          "sortnum"
        ],
        "title": "MembersSignupSourceOutUpdate"
      },
      "MembershipsIn": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "catprice": {
            "type": "integer",
            "title": "Catprice"
          },
          "price_quota": {
            "type": "string",
            "title": "Price Quota"
          },
          "catdescription": {
            "type": "string",
            "title": "Catdescription"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "boolTerms": {
            "type": "integer",
            "title": "Boolterms"
          },
          "catterms": {
            "type": "string",
            "title": "Catterms"
          },
          "boolFamily": {
            "type": "integer",
            "title": "Boolfamily"
          },
          "catmail": {
            "type": "string",
            "title": "Catmail"
          },
          "boolCatmail": {
            "type": "integer",
            "title": "Boolcatmail"
          },
          "catprice_month": {
            "type": "integer",
            "title": "Catprice Month"
          },
          "catprice_year": {
            "type": "integer",
            "title": "Catprice Year"
          },
          "show_priceMonth": {
            "type": "integer",
            "title": "Show Pricemonth"
          },
          "show_priceYear": {
            "type": "integer",
            "title": "Show Priceyear"
          },
          "boolSelInVtg": {
            "type": "integer",
            "title": "Boolselinvtg"
          },
          "boolSelectSignup": {
            "type": "integer",
            "title": "Boolselectsignup"
          },
          "boolSelectChangecat": {
            "type": "integer",
            "title": "Boolselectchangecat"
          }
        },
        "type": "object",
        "title": "MembershipsIn"
      },
      "MembershipsOut": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "catprice": {
            "type": "integer",
            "title": "Catprice"
          },
          "price_quota": {
            "type": "string",
            "title": "Price Quota"
          },
          "catdescription": {
            "type": "string",
            "title": "Catdescription"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "boolTerms": {
            "type": "integer",
            "title": "Boolterms"
          },
          "catterms": {
            "type": "string",
            "title": "Catterms"
          },
          "boolFamily": {
            "type": "integer",
            "title": "Boolfamily"
          },
          "catmail": {
            "type": "string",
            "title": "Catmail"
          },
          "boolCatmail": {
            "type": "integer",
            "title": "Boolcatmail"
          },
          "catprice_month": {
            "type": "integer",
            "title": "Catprice Month"
          },
          "catprice_year": {
            "type": "integer",
            "title": "Catprice Year"
          },
          "show_priceMonth": {
            "type": "integer",
            "title": "Show Pricemonth"
          },
          "show_priceYear": {
            "type": "integer",
            "title": "Show Priceyear"
          },
          "boolSelInVtg": {
            "type": "integer",
            "title": "Boolselinvtg"
          },
          "boolSelectSignup": {
            "type": "integer",
            "title": "Boolselectsignup"
          },
          "boolSelectChangecat": {
            "type": "integer",
            "title": "Boolselectchangecat"
          }
        },
        "type": "object",
        "required": [
          "categoryID"
        ],
        "title": "MembershipsOut"
      },
      "MembershipsOutUpdate": {
        "properties": {
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "catprice": {
            "type": "integer",
            "title": "Catprice"
          },
          "price_quota": {
            "type": "string",
            "title": "Price Quota"
          },
          "catdescription": {
            "type": "string",
            "title": "Catdescription"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "boolTerms": {
            "type": "integer",
            "title": "Boolterms"
          },
          "catterms": {
            "type": "string",
            "title": "Catterms"
          },
          "boolFamily": {
            "type": "integer",
            "title": "Boolfamily"
          },
          "catmail": {
            "type": "string",
            "title": "Catmail"
          },
          "boolCatmail": {
            "type": "integer",
            "title": "Boolcatmail"
          },
          "catprice_month": {
            "type": "integer",
            "title": "Catprice Month"
          },
          "catprice_year": {
            "type": "integer",
            "title": "Catprice Year"
          },
          "show_priceMonth": {
            "type": "integer",
            "title": "Show Pricemonth"
          },
          "show_priceYear": {
            "type": "integer",
            "title": "Show Priceyear"
          },
          "boolSelInVtg": {
            "type": "integer",
            "title": "Boolselinvtg"
          },
          "boolSelectSignup": {
            "type": "integer",
            "title": "Boolselectsignup"
          },
          "boolSelectChangecat": {
            "type": "integer",
            "title": "Boolselectchangecat"
          }
        },
        "type": "object",
        "required": [
          "boolShow",
          "category",
          "sortnum",
          "catprice",
          "price_quota",
          "catdescription",
          "date_created",
          "created_by",
          "boolTerms",
          "catterms",
          "boolFamily",
          "catmail",
          "boolCatmail",
          "catprice_month",
          "catprice_year",
          "show_priceMonth",
          "show_priceYear",
          "boolSelInVtg",
          "boolSelectSignup",
          "boolSelectChangecat"
        ],
        "title": "MembershipsOutUpdate"
      },
      "MembershipsVtgIn": {
        "properties": {
          "vtgListID": {
            "type": "integer",
            "title": "Vtglistid"
          },
          "membercatID": {
            "type": "integer",
            "title": "Membercatid"
          }
        },
        "type": "object",
        "title": "MembershipsVtgIn"
      },
      "MembershipsVtgOut": {
        "properties": {
          "vtgListID": {
            "type": "integer",
            "title": "Vtglistid"
          },
          "membercatID": {
            "type": "integer",
            "title": "Membercatid"
          }
        },
        "type": "object",
        "required": [
          "vtgListID"
        ],
        "title": "MembershipsVtgOut"
      },
      "MembershipsVtgOutUpdate": {
        "properties": {
          "membercatID": {
            "type": "integer",
            "title": "Membercatid"
          }
        },
        "type": "object",
        "required": [
          "membercatID"
        ],
        "title": "MembershipsVtgOutUpdate"
      },
      "MenuMainIn": {
        "properties": {
          "itemID": {
            "type": "integer",
            "title": "Itemid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolNewWin": {
            "type": "integer",
            "title": "Boolnewwin"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "item": {
            "type": "string",
            "title": "Item"
          },
          "itemlink": {
            "type": "string",
            "title": "Itemlink"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          }
        },
        "type": "object",
        "title": "MenuMainIn"
      },
      "MenuMainOut": {
        "properties": {
          "itemID": {
            "type": "integer",
            "title": "Itemid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolNewWin": {
            "type": "integer",
            "title": "Boolnewwin"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "item": {
            "type": "string",
            "title": "Item"
          },
          "itemlink": {
            "type": "string",
            "title": "Itemlink"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          }
        },
        "type": "object",
        "required": [
          "itemID"
        ],
        "title": "MenuMainOut"
      },
      "MenuMainOutUpdate": {
        "properties": {
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolNewWin": {
            "type": "integer",
            "title": "Boolnewwin"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "item": {
            "type": "string",
            "title": "Item"
          },
          "itemlink": {
            "type": "string",
            "title": "Itemlink"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          }
        },
        "type": "object",
        "required": [
          "parentID",
          "boolShow",
          "boolNewWin",
          "sortnum",
          "item",
          "itemlink",
          "icon"
        ],
        "title": "MenuMainOutUpdate"
      },
      "NewsArticleIn": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolPubl": {
            "type": "boolean",
            "title": "Boolpubl"
          },
          "boolShow": {
            "type": "boolean",
            "title": "Boolshow"
          },
          "boolPri": {
            "type": "boolean",
            "title": "Boolpri"
          },
          "template": {
            "type": "integer",
            "title": "Template"
          },
          "validfrom": {
            "type": "string",
            "format": "date-time",
            "title": "Validfrom"
          },
          "validto": {
            "type": "string",
            "format": "date-time",
            "title": "Validto"
          },
          "author": {
            "type": "string",
            "title": "Author"
          },
          "heading": {
            "type": "string",
            "title": "Heading"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "templateImageID": {
            "type": "integer",
            "title": "Templateimageid"
          },
          "templateImage": {
            "type": "string",
            "title": "Templateimage"
          },
          "templimg_descr": {
            "type": "string",
            "title": "Templimg Descr"
          },
          "ingress": {
            "type": "string",
            "title": "Ingress"
          },
          "newscontent": {
            "type": "string",
            "title": "Newscontent"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "useFBcomments": {
            "type": "boolean",
            "title": "Usefbcomments"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          },
          "amtReceivers": {
            "type": "integer",
            "title": "Amtreceivers"
          },
          "videoUrl": {
            "type": "string",
            "title": "Videourl"
          },
          "boolInfoscreen": {
            "type": "boolean",
            "title": "Boolinfoscreen"
          },
          "boolBoxed": {
            "type": "boolean",
            "title": "Boolboxed"
          },
          "boolRss": {
            "type": "boolean",
            "title": "Boolrss"
          },
          "boolToFacebook": {
            "type": "boolean",
            "title": "Booltofacebook"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "boolPubl",
          "boolShow",
          "boolPri",
          "validfrom",
          "validto",
          "heading",
          "urlTitle",
          "date_created",
          "created_by"
        ],
        "title": "NewsArticleIn"
      },
      "NewsArticleOut": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolPubl": {
            "type": "boolean",
            "title": "Boolpubl"
          },
          "boolShow": {
            "type": "boolean",
            "title": "Boolshow"
          },
          "boolPri": {
            "type": "boolean",
            "title": "Boolpri"
          },
          "template": {
            "type": "integer",
            "title": "Template"
          },
          "validfrom": {
            "type": "string",
            "format": "date-time",
            "title": "Validfrom"
          },
          "validto": {
            "type": "string",
            "format": "date-time",
            "title": "Validto"
          },
          "author": {
            "type": "string",
            "title": "Author"
          },
          "heading": {
            "type": "string",
            "title": "Heading"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "templateImageID": {
            "type": "integer",
            "title": "Templateimageid"
          },
          "templateImage": {
            "type": "string",
            "title": "Templateimage"
          },
          "templimg_descr": {
            "type": "string",
            "title": "Templimg Descr"
          },
          "ingress": {
            "type": "string",
            "title": "Ingress"
          },
          "newscontent": {
            "type": "string",
            "title": "Newscontent"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "useFBcomments": {
            "type": "boolean",
            "title": "Usefbcomments"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          },
          "amtReceivers": {
            "type": "integer",
            "title": "Amtreceivers"
          },
          "videoUrl": {
            "type": "string",
            "title": "Videourl"
          },
          "boolInfoscreen": {
            "type": "boolean",
            "title": "Boolinfoscreen"
          },
          "boolBoxed": {
            "type": "boolean",
            "title": "Boolboxed"
          },
          "boolRss": {
            "type": "boolean",
            "title": "Boolrss"
          },
          "boolToFacebook": {
            "type": "boolean",
            "title": "Booltofacebook"
          },
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "boolPubl",
          "boolShow",
          "boolPri",
          "validfrom",
          "validto",
          "heading",
          "urlTitle",
          "date_created",
          "created_by",
          "articleID"
        ],
        "title": "NewsArticleOut"
      },
      "NewsArticleOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolPubl": {
            "type": "boolean",
            "title": "Boolpubl"
          },
          "boolShow": {
            "type": "boolean",
            "title": "Boolshow"
          },
          "boolPri": {
            "type": "boolean",
            "title": "Boolpri"
          },
          "template": {
            "type": "integer",
            "title": "Template"
          },
          "validfrom": {
            "type": "string",
            "format": "date-time",
            "title": "Validfrom"
          },
          "validto": {
            "type": "string",
            "format": "date-time",
            "title": "Validto"
          },
          "author": {
            "type": "string",
            "title": "Author"
          },
          "heading": {
            "type": "string",
            "title": "Heading"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "templateImageID": {
            "type": "integer",
            "title": "Templateimageid"
          },
          "templateImage": {
            "type": "string",
            "title": "Templateimage"
          },
          "templimg_descr": {
            "type": "string",
            "title": "Templimg Descr"
          },
          "ingress": {
            "type": "string",
            "title": "Ingress"
          },
          "newscontent": {
            "type": "string",
            "title": "Newscontent"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "useFBcomments": {
            "type": "boolean",
            "title": "Usefbcomments"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          },
          "amtReceivers": {
            "type": "integer",
            "title": "Amtreceivers"
          },
          "videoUrl": {
            "type": "string",
            "title": "Videourl"
          },
          "boolInfoscreen": {
            "type": "boolean",
            "title": "Boolinfoscreen"
          },
          "boolBoxed": {
            "type": "boolean",
            "title": "Boolboxed"
          },
          "boolRss": {
            "type": "boolean",
            "title": "Boolrss"
          },
          "boolToFacebook": {
            "type": "boolean",
            "title": "Booltofacebook"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "boolPubl",
          "boolShow",
          "boolPri",
          "template",
          "validfrom",
          "validto",
          "author",
          "heading",
          "urlTitle",
          "indexImageID",
          "indexImage",
          "indexImagePath",
          "indeximg_descr",
          "templateImageID",
          "templateImage",
          "templimg_descr",
          "ingress",
          "newscontent",
          "pagedescription",
          "useFBcomments",
          "date_published",
          "date_created",
          "created_by",
          "date_modified",
          "modified_by",
          "amtReceivers",
          "videoUrl",
          "boolInfoscreen",
          "boolBoxed",
          "boolRss",
          "boolToFacebook"
        ],
        "title": "NewsArticleOutUpdate"
      },
      "NewsArticlesPluginsIn": {
        "properties": {
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "pluginRef": {
            "type": "integer",
            "title": "Pluginref"
          }
        },
        "type": "object",
        "title": "NewsArticlesPluginsIn"
      },
      "NewsArticlesPluginsOut": {
        "properties": {
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "pluginRef": {
            "type": "integer",
            "title": "Pluginref"
          }
        },
        "type": "object",
        "required": [
          "articleID"
        ],
        "title": "NewsArticlesPluginsOut"
      },
      "NewsArticlesPluginsOutUpdate": {
        "properties": {
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "pluginRef": {
            "type": "integer",
            "title": "Pluginref"
          }
        },
        "type": "object",
        "required": [
          "pluginID",
          "pluginRef"
        ],
        "title": "NewsArticlesPluginsOutUpdate"
      },
      "NewsBulletinsIn": {
        "properties": {
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "heading": {
            "type": "string",
            "title": "Heading"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "newscontent": {
            "type": "string",
            "title": "Newscontent"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "date_published": {
            "type": "integer",
            "title": "Date Published"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "integer",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          }
        },
        "type": "object",
        "title": "NewsBulletinsIn"
      },
      "NewsBulletinsOut": {
        "properties": {
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "heading": {
            "type": "string",
            "title": "Heading"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "newscontent": {
            "type": "string",
            "title": "Newscontent"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "date_published": {
            "type": "integer",
            "title": "Date Published"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "integer",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          }
        },
        "type": "object",
        "required": [
          "articleID"
        ],
        "title": "NewsBulletinsOut"
      },
      "NewsBulletinsOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "heading": {
            "type": "string",
            "title": "Heading"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "newscontent": {
            "type": "string",
            "title": "Newscontent"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "date_published": {
            "type": "integer",
            "title": "Date Published"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "integer",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "boolShow",
          "heading",
          "urlTitle",
          "indexImageID",
          "indexImage",
          "indexImagePath",
          "indeximg_descr",
          "newscontent",
          "pagedescription",
          "date_published",
          "date_created",
          "created_by",
          "date_modified",
          "modified_by"
        ],
        "title": "NewsBulletinsOutUpdate"
      },
      "NewsKeywordsIn": {
        "properties": {
          "keyword": {
            "type": "string",
            "title": "Keyword"
          },
          "numSearch": {
            "type": "integer",
            "title": "Numsearch"
          }
        },
        "type": "object",
        "title": "NewsKeywordsIn"
      },
      "NewsKeywordsOut": {
        "properties": {
          "keyword": {
            "type": "integer",
            "title": "Keyword"
          },
          "numSearch": {
            "type": "integer",
            "title": "Numsearch"
          }
        },
        "type": "object",
        "required": [
          "keyword"
        ],
        "title": "NewsKeywordsOut"
      },
      "NewsKeywordsOutUpdate": {
        "properties": {
          "numSearch": {
            "type": "integer",
            "title": "Numsearch"
          }
        },
        "type": "object",
        "required": [
          "numSearch"
        ],
        "title": "NewsKeywordsOutUpdate"
      },
      "OrderdetailsIn": {
        "properties": {
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "productNumber": {
            "type": "string",
            "title": "Productnumber"
          },
          "productName": {
            "type": "string",
            "title": "Productname"
          },
          "prodVarID": {
            "type": "integer",
            "title": "Prodvarid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "activityName": {
            "type": "string",
            "title": "Activityname"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "tournName": {
            "type": "string",
            "title": "Tournname"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "feedbackName": {
            "type": "string",
            "title": "Feedbackname"
          },
          "senderID": {
            "type": "integer",
            "title": "Senderid"
          },
          "spec": {
            "type": "string",
            "title": "Spec"
          },
          "textspec": {
            "type": "string",
            "title": "Textspec"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unitprice": {
            "type": "integer",
            "title": "Unitprice"
          },
          "taxPros": {
            "type": "integer",
            "title": "Taxpros"
          },
          "subtotal": {
            "type": "integer",
            "title": "Subtotal"
          },
          "memberRecID": {
            "type": "integer",
            "title": "Memberrecid"
          }
        },
        "type": "object",
        "title": "OrderdetailsIn"
      },
      "OrderdetailsOut": {
        "properties": {
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "productNumber": {
            "type": "string",
            "title": "Productnumber"
          },
          "productName": {
            "type": "string",
            "title": "Productname"
          },
          "prodVarID": {
            "type": "integer",
            "title": "Prodvarid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "activityName": {
            "type": "string",
            "title": "Activityname"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "tournName": {
            "type": "string",
            "title": "Tournname"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "feedbackName": {
            "type": "string",
            "title": "Feedbackname"
          },
          "senderID": {
            "type": "integer",
            "title": "Senderid"
          },
          "spec": {
            "type": "string",
            "title": "Spec"
          },
          "textspec": {
            "type": "string",
            "title": "Textspec"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unitprice": {
            "type": "integer",
            "title": "Unitprice"
          },
          "taxPros": {
            "type": "integer",
            "title": "Taxpros"
          },
          "subtotal": {
            "type": "integer",
            "title": "Subtotal"
          },
          "memberRecID": {
            "type": "integer",
            "title": "Memberrecid"
          }
        },
        "type": "object",
        "required": [
          "orderID"
        ],
        "title": "OrderdetailsOut"
      },
      "OrderdetailsOutUpdate": {
        "properties": {
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "productNumber": {
            "type": "string",
            "title": "Productnumber"
          },
          "productName": {
            "type": "string",
            "title": "Productname"
          },
          "prodVarID": {
            "type": "integer",
            "title": "Prodvarid"
          },
          "activityID": {
            "type": "integer",
            "title": "Activityid"
          },
          "activityName": {
            "type": "string",
            "title": "Activityname"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "tournName": {
            "type": "string",
            "title": "Tournname"
          },
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "feedbackID": {
            "type": "integer",
            "title": "Feedbackid"
          },
          "feedbackName": {
            "type": "string",
            "title": "Feedbackname"
          },
          "senderID": {
            "type": "integer",
            "title": "Senderid"
          },
          "spec": {
            "type": "string",
            "title": "Spec"
          },
          "textspec": {
            "type": "string",
            "title": "Textspec"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unitprice": {
            "type": "integer",
            "title": "Unitprice"
          },
          "taxPros": {
            "type": "integer",
            "title": "Taxpros"
          },
          "subtotal": {
            "type": "integer",
            "title": "Subtotal"
          },
          "memberRecID": {
            "type": "integer",
            "title": "Memberrecid"
          }
        },
        "type": "object",
        "required": [
          "productID",
          "productNumber",
          "productName",
          "prodVarID",
          "activityID",
          "activityName",
          "tournID",
          "tournName",
          "participantID",
          "feedbackID",
          "feedbackName",
          "senderID",
          "spec",
          "textspec",
          "quantity",
          "unitprice",
          "taxPros",
          "subtotal",
          "memberRecID"
        ],
        "title": "OrderdetailsOutUpdate"
      },
      "OrdersIn": {
        "properties": {
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "orderNum": {
            "type": "string",
            "title": "Ordernum"
          },
          "paymentRef": {
            "type": "string",
            "title": "Paymentref"
          },
          "payType": {
            "type": "string",
            "title": "Paytype"
          },
          "payMethod": {
            "type": "string",
            "title": "Paymethod"
          },
          "maskedPan": {
            "type": "string",
            "title": "Maskedpan"
          },
          "cartID": {
            "type": "string",
            "title": "Cartid"
          },
          "customerID": {
            "type": "integer",
            "title": "Customerid"
          },
          "custFname": {
            "type": "string",
            "title": "Custfname"
          },
          "custSname": {
            "type": "string",
            "title": "Custsname"
          },
          "custCompany": {
            "type": "string",
            "title": "Custcompany"
          },
          "custAddress": {
            "type": "string",
            "title": "Custaddress"
          },
          "custPostcode": {
            "type": "string",
            "title": "Custpostcode"
          },
          "custTown": {
            "type": "string",
            "title": "Custtown"
          },
          "custEmail": {
            "type": "string",
            "title": "Custemail"
          },
          "custPhone": {
            "type": "string",
            "title": "Custphone"
          },
          "custComments": {
            "type": "string",
            "title": "Custcomments"
          },
          "shippingMethod": {
            "type": "string",
            "title": "Shippingmethod"
          },
          "shippingPrice": {
            "type": "integer",
            "title": "Shippingprice"
          },
          "admFee": {
            "type": "integer",
            "title": "Admfee"
          },
          "admFeeDescription": {
            "type": "string",
            "title": "Admfeedescription"
          },
          "boolCancelled": {
            "type": "integer",
            "title": "Boolcancelled"
          },
          "orderKey": {
            "type": "string",
            "title": "Orderkey"
          },
          "confirmKey": {
            "type": "string",
            "title": "Confirmkey"
          },
          "dateCreated": {
            "type": "integer",
            "title": "Datecreated"
          },
          "boolCustConfirmed": {
            "type": "integer",
            "title": "Boolcustconfirmed"
          },
          "dateCustConfirmed": {
            "type": "integer",
            "title": "Datecustconfirmed"
          },
          "boolShipped": {
            "type": "integer",
            "title": "Boolshipped"
          },
          "dateShipped": {
            "type": "integer",
            "title": "Dateshipped"
          },
          "boolClosed": {
            "type": "integer",
            "title": "Boolclosed"
          },
          "dateClosed": {
            "type": "integer",
            "title": "Dateclosed"
          },
          "closed_by": {
            "type": "string",
            "title": "Closed By"
          },
          "cancelled_by": {
            "type": "string",
            "title": "Cancelled By"
          },
          "sysComments": {
            "type": "string",
            "title": "Syscomments"
          },
          "amountCharged": {
            "type": "integer",
            "title": "Amountcharged"
          },
          "amountReserved": {
            "type": "integer",
            "title": "Amountreserved"
          },
          "trigger_Webhook": {
            "type": "integer",
            "title": "Trigger Webhook"
          },
          "reservedAmount": {
            "type": "integer",
            "title": "Reservedamount"
          },
          "chargedAmount": {
            "type": "integer",
            "title": "Chargedamount"
          },
          "chargeID": {
            "type": "string",
            "title": "Chargeid"
          },
          "chargeDate": {
            "type": "integer",
            "title": "Chargedate"
          },
          "boolPaymentConfirmed": {
            "type": "integer",
            "title": "Boolpaymentconfirmed"
          },
          "datePaymentConfirmed": {
            "type": "integer",
            "title": "Datepaymentconfirmed"
          },
          "boolEmailReceipt": {
            "type": "integer",
            "title": "Boolemailreceipt"
          },
          "payAccount": {
            "type": "integer",
            "title": "Payaccount"
          },
          "payLocal": {
            "type": "integer",
            "title": "Paylocal"
          },
          "boolRefunded": {
            "type": "integer",
            "title": "Boolrefunded"
          },
          "refundRef": {
            "type": "string",
            "title": "Refundref"
          },
          "refundAmount": {
            "type": "integer",
            "title": "Refundamount"
          },
          "refundDate": {
            "type": "integer",
            "title": "Refunddate"
          }
        },
        "type": "object",
        "title": "OrdersIn"
      },
      "OrdersOut": {
        "properties": {
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "orderNum": {
            "type": "string",
            "title": "Ordernum"
          },
          "paymentRef": {
            "type": "string",
            "title": "Paymentref"
          },
          "payType": {
            "type": "string",
            "title": "Paytype"
          },
          "payMethod": {
            "type": "string",
            "title": "Paymethod"
          },
          "maskedPan": {
            "type": "string",
            "title": "Maskedpan"
          },
          "cartID": {
            "type": "string",
            "title": "Cartid"
          },
          "customerID": {
            "type": "integer",
            "title": "Customerid"
          },
          "custFname": {
            "type": "string",
            "title": "Custfname"
          },
          "custSname": {
            "type": "string",
            "title": "Custsname"
          },
          "custCompany": {
            "type": "string",
            "title": "Custcompany"
          },
          "custAddress": {
            "type": "string",
            "title": "Custaddress"
          },
          "custPostcode": {
            "type": "string",
            "title": "Custpostcode"
          },
          "custTown": {
            "type": "string",
            "title": "Custtown"
          },
          "custEmail": {
            "type": "string",
            "title": "Custemail"
          },
          "custPhone": {
            "type": "string",
            "title": "Custphone"
          },
          "custComments": {
            "type": "string",
            "title": "Custcomments"
          },
          "shippingMethod": {
            "type": "string",
            "title": "Shippingmethod"
          },
          "shippingPrice": {
            "type": "integer",
            "title": "Shippingprice"
          },
          "admFee": {
            "type": "integer",
            "title": "Admfee"
          },
          "admFeeDescription": {
            "type": "string",
            "title": "Admfeedescription"
          },
          "boolCancelled": {
            "type": "integer",
            "title": "Boolcancelled"
          },
          "orderKey": {
            "type": "string",
            "title": "Orderkey"
          },
          "confirmKey": {
            "type": "string",
            "title": "Confirmkey"
          },
          "dateCreated": {
            "type": "integer",
            "title": "Datecreated"
          },
          "boolCustConfirmed": {
            "type": "integer",
            "title": "Boolcustconfirmed"
          },
          "dateCustConfirmed": {
            "type": "integer",
            "title": "Datecustconfirmed"
          },
          "boolShipped": {
            "type": "integer",
            "title": "Boolshipped"
          },
          "dateShipped": {
            "type": "integer",
            "title": "Dateshipped"
          },
          "boolClosed": {
            "type": "integer",
            "title": "Boolclosed"
          },
          "dateClosed": {
            "type": "integer",
            "title": "Dateclosed"
          },
          "closed_by": {
            "type": "string",
            "title": "Closed By"
          },
          "cancelled_by": {
            "type": "string",
            "title": "Cancelled By"
          },
          "sysComments": {
            "type": "string",
            "title": "Syscomments"
          },
          "amountCharged": {
            "type": "integer",
            "title": "Amountcharged"
          },
          "amountReserved": {
            "type": "integer",
            "title": "Amountreserved"
          },
          "trigger_Webhook": {
            "type": "integer",
            "title": "Trigger Webhook"
          },
          "reservedAmount": {
            "type": "integer",
            "title": "Reservedamount"
          },
          "chargedAmount": {
            "type": "integer",
            "title": "Chargedamount"
          },
          "chargeID": {
            "type": "string",
            "title": "Chargeid"
          },
          "chargeDate": {
            "type": "integer",
            "title": "Chargedate"
          },
          "boolPaymentConfirmed": {
            "type": "integer",
            "title": "Boolpaymentconfirmed"
          },
          "datePaymentConfirmed": {
            "type": "integer",
            "title": "Datepaymentconfirmed"
          },
          "boolEmailReceipt": {
            "type": "integer",
            "title": "Boolemailreceipt"
          },
          "payAccount": {
            "type": "integer",
            "title": "Payaccount"
          },
          "payLocal": {
            "type": "integer",
            "title": "Paylocal"
          },
          "boolRefunded": {
            "type": "integer",
            "title": "Boolrefunded"
          },
          "refundRef": {
            "type": "string",
            "title": "Refundref"
          },
          "refundAmount": {
            "type": "integer",
            "title": "Refundamount"
          },
          "refundDate": {
            "type": "integer",
            "title": "Refunddate"
          }
        },
        "type": "object",
        "required": [
          "orderID"
        ],
        "title": "OrdersOut"
      },
      "OrdersOutUpdate": {
        "properties": {
          "orderNum": {
            "type": "string",
            "title": "Ordernum"
          },
          "paymentRef": {
            "type": "string",
            "title": "Paymentref"
          },
          "payType": {
            "type": "string",
            "title": "Paytype"
          },
          "payMethod": {
            "type": "string",
            "title": "Paymethod"
          },
          "maskedPan": {
            "type": "string",
            "title": "Maskedpan"
          },
          "cartID": {
            "type": "string",
            "title": "Cartid"
          },
          "customerID": {
            "type": "integer",
            "title": "Customerid"
          },
          "custFname": {
            "type": "string",
            "title": "Custfname"
          },
          "custSname": {
            "type": "string",
            "title": "Custsname"
          },
          "custCompany": {
            "type": "string",
            "title": "Custcompany"
          },
          "custAddress": {
            "type": "string",
            "title": "Custaddress"
          },
          "custPostcode": {
            "type": "string",
            "title": "Custpostcode"
          },
          "custTown": {
            "type": "string",
            "title": "Custtown"
          },
          "custEmail": {
            "type": "string",
            "title": "Custemail"
          },
          "custPhone": {
            "type": "string",
            "title": "Custphone"
          },
          "custComments": {
            "type": "string",
            "title": "Custcomments"
          },
          "shippingMethod": {
            "type": "string",
            "title": "Shippingmethod"
          },
          "shippingPrice": {
            "type": "integer",
            "title": "Shippingprice"
          },
          "admFee": {
            "type": "integer",
            "title": "Admfee"
          },
          "admFeeDescription": {
            "type": "string",
            "title": "Admfeedescription"
          },
          "boolCancelled": {
            "type": "integer",
            "title": "Boolcancelled"
          },
          "orderKey": {
            "type": "string",
            "title": "Orderkey"
          },
          "confirmKey": {
            "type": "string",
            "title": "Confirmkey"
          },
          "dateCreated": {
            "type": "integer",
            "title": "Datecreated"
          },
          "boolCustConfirmed": {
            "type": "integer",
            "title": "Boolcustconfirmed"
          },
          "dateCustConfirmed": {
            "type": "integer",
            "title": "Datecustconfirmed"
          },
          "boolShipped": {
            "type": "integer",
            "title": "Boolshipped"
          },
          "dateShipped": {
            "type": "integer",
            "title": "Dateshipped"
          },
          "boolClosed": {
            "type": "integer",
            "title": "Boolclosed"
          },
          "dateClosed": {
            "type": "integer",
            "title": "Dateclosed"
          },
          "closed_by": {
            "type": "string",
            "title": "Closed By"
          },
          "cancelled_by": {
            "type": "string",
            "title": "Cancelled By"
          },
          "sysComments": {
            "type": "string",
            "title": "Syscomments"
          },
          "amountCharged": {
            "type": "integer",
            "title": "Amountcharged"
          },
          "amountReserved": {
            "type": "integer",
            "title": "Amountreserved"
          },
          "trigger_Webhook": {
            "type": "integer",
            "title": "Trigger Webhook"
          },
          "reservedAmount": {
            "type": "integer",
            "title": "Reservedamount"
          },
          "chargedAmount": {
            "type": "integer",
            "title": "Chargedamount"
          },
          "chargeID": {
            "type": "string",
            "title": "Chargeid"
          },
          "chargeDate": {
            "type": "integer",
            "title": "Chargedate"
          },
          "boolPaymentConfirmed": {
            "type": "integer",
            "title": "Boolpaymentconfirmed"
          },
          "datePaymentConfirmed": {
            "type": "integer",
            "title": "Datepaymentconfirmed"
          },
          "boolEmailReceipt": {
            "type": "integer",
            "title": "Boolemailreceipt"
          },
          "payAccount": {
            "type": "integer",
            "title": "Payaccount"
          },
          "payLocal": {
            "type": "integer",
            "title": "Paylocal"
          },
          "boolRefunded": {
            "type": "integer",
            "title": "Boolrefunded"
          },
          "refundRef": {
            "type": "string",
            "title": "Refundref"
          },
          "refundAmount": {
            "type": "integer",
            "title": "Refundamount"
          },
          "refundDate": {
            "type": "integer",
            "title": "Refunddate"
          }
        },
        "type": "object",
        "required": [
          "orderNum",
          "paymentRef",
          "payType",
          "payMethod",
          "maskedPan",
          "cartID",
          "customerID",
          "custFname",
          "custSname",
          "custCompany",
          "custAddress",
          "custPostcode",
          "custTown",
          "custEmail",
          "custPhone",
          "custComments",
          "shippingMethod",
          "shippingPrice",
          "admFee",
          "admFeeDescription",
          "boolCancelled",
          "orderKey",
          "confirmKey",
          "dateCreated",
          "boolCustConfirmed",
          "dateCustConfirmed",
          "boolShipped",
          "dateShipped",
          "boolClosed",
          "dateClosed",
          "closed_by",
          "cancelled_by",
          "sysComments",
          "amountCharged",
          "amountReserved",
          "trigger_Webhook",
          "reservedAmount",
          "chargedAmount",
          "chargeID",
          "chargeDate",
          "boolPaymentConfirmed",
          "datePaymentConfirmed",
          "boolEmailReceipt",
          "payAccount",
          "payLocal",
          "boolRefunded",
          "refundRef",
          "refundAmount",
          "refundDate"
        ],
        "title": "OrdersOutUpdate"
      },
      "PagesIn": {
        "properties": {
          "pageID": {
            "type": "integer",
            "title": "Pageid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "menuID": {
            "type": "integer",
            "title": "Menuid"
          },
          "boolArchive": {
            "type": "integer",
            "title": "Boolarchive"
          },
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "plugin_ref": {
            "type": "string",
            "title": "Plugin Ref"
          },
          "functionID": {
            "type": "integer",
            "title": "Functionid"
          },
          "functionRef": {
            "type": "string",
            "title": "Functionref"
          },
          "fRefAlias": {
            "type": "string",
            "title": "Frefalias"
          },
          "boolStart": {
            "type": "integer",
            "title": "Boolstart"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolShowinmega": {
            "type": "integer",
            "title": "Boolshowinmega"
          },
          "boolPrivacy": {
            "type": "integer",
            "title": "Boolprivacy"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "template": {
            "type": "integer",
            "title": "Template"
          },
          "templateID": {
            "type": "integer",
            "title": "Templateid"
          },
          "boolImgZoom": {
            "type": "integer",
            "title": "Boolimgzoom"
          },
          "boolDirectLink": {
            "type": "integer",
            "title": "Booldirectlink"
          },
          "directLink": {
            "type": "string",
            "title": "Directlink"
          },
          "boolExtLink": {
            "type": "integer",
            "title": "Boolextlink"
          },
          "validfrom": {
            "type": "integer",
            "title": "Validfrom"
          },
          "validto": {
            "type": "integer",
            "title": "Validto"
          },
          "pagename": {
            "type": "string",
            "title": "Pagename"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "templateImageID": {
            "type": "integer",
            "title": "Templateimageid"
          },
          "templateImage": {
            "type": "string",
            "title": "Templateimage"
          },
          "templimg_descr": {
            "type": "string",
            "title": "Templimg Descr"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "pageheading": {
            "type": "string",
            "title": "Pageheading"
          },
          "pagecontent": {
            "type": "string",
            "title": "Pagecontent"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "integer",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          },
          "videoUrl": {
            "type": "string",
            "title": "Videourl"
          },
          "teaser": {
            "type": "string",
            "title": "Teaser"
          },
          "boolInfoscreen": {
            "type": "integer",
            "title": "Boolinfoscreen"
          },
          "boolArchived": {
            "type": "integer",
            "title": "Boolarchived"
          },
          "template_bgcolor": {
            "type": "string",
            "title": "Template Bgcolor"
          },
          "pageurlname": {
            "type": "string",
            "title": "Pageurlname"
          },
          "headerImage": {
            "type": "string",
            "title": "Headerimage"
          }
        },
        "type": "object",
        "title": "PagesIn"
      },
      "PagesMenusIn": {
        "properties": {
          "menuID": {
            "type": "integer",
            "title": "Menuid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "menuheading": {
            "type": "string",
            "title": "Menuheading"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "PagesMenusIn"
      },
      "PagesMenusOut": {
        "properties": {
          "menuID": {
            "type": "integer",
            "title": "Menuid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "menuheading": {
            "type": "string",
            "title": "Menuheading"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "menuID"
        ],
        "title": "PagesMenusOut"
      },
      "PagesMenusOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "menuheading": {
            "type": "string",
            "title": "Menuheading"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "boolShow",
          "menuheading",
          "sortnum",
          "date_created",
          "created_by"
        ],
        "title": "PagesMenusOutUpdate"
      },
      "PagesOut": {
        "properties": {
          "pageID": {
            "type": "integer",
            "title": "Pageid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "menuID": {
            "type": "integer",
            "title": "Menuid"
          },
          "boolArchive": {
            "type": "integer",
            "title": "Boolarchive"
          },
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "plugin_ref": {
            "type": "string",
            "title": "Plugin Ref"
          },
          "functionID": {
            "type": "integer",
            "title": "Functionid"
          },
          "functionRef": {
            "type": "string",
            "title": "Functionref"
          },
          "fRefAlias": {
            "type": "string",
            "title": "Frefalias"
          },
          "boolStart": {
            "type": "integer",
            "title": "Boolstart"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolShowinmega": {
            "type": "integer",
            "title": "Boolshowinmega"
          },
          "boolPrivacy": {
            "type": "integer",
            "title": "Boolprivacy"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "template": {
            "type": "integer",
            "title": "Template"
          },
          "templateID": {
            "type": "integer",
            "title": "Templateid"
          },
          "boolImgZoom": {
            "type": "integer",
            "title": "Boolimgzoom"
          },
          "boolDirectLink": {
            "type": "integer",
            "title": "Booldirectlink"
          },
          "directLink": {
            "type": "string",
            "title": "Directlink"
          },
          "boolExtLink": {
            "type": "integer",
            "title": "Boolextlink"
          },
          "validfrom": {
            "type": "integer",
            "title": "Validfrom"
          },
          "validto": {
            "type": "integer",
            "title": "Validto"
          },
          "pagename": {
            "type": "string",
            "title": "Pagename"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "templateImageID": {
            "type": "integer",
            "title": "Templateimageid"
          },
          "templateImage": {
            "type": "string",
            "title": "Templateimage"
          },
          "templimg_descr": {
            "type": "string",
            "title": "Templimg Descr"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "pageheading": {
            "type": "string",
            "title": "Pageheading"
          },
          "pagecontent": {
            "type": "string",
            "title": "Pagecontent"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "integer",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          },
          "videoUrl": {
            "type": "string",
            "title": "Videourl"
          },
          "teaser": {
            "type": "string",
            "title": "Teaser"
          },
          "boolInfoscreen": {
            "type": "integer",
            "title": "Boolinfoscreen"
          },
          "boolArchived": {
            "type": "integer",
            "title": "Boolarchived"
          },
          "template_bgcolor": {
            "type": "string",
            "title": "Template Bgcolor"
          },
          "pageurlname": {
            "type": "string",
            "title": "Pageurlname"
          },
          "headerImage": {
            "type": "string",
            "title": "Headerimage"
          }
        },
        "type": "object",
        "required": [
          "pageID"
        ],
        "title": "PagesOut"
      },
      "PagesOutUpdate": {
        "properties": {
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "menuID": {
            "type": "integer",
            "title": "Menuid"
          },
          "boolArchive": {
            "type": "integer",
            "title": "Boolarchive"
          },
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "plugin_ref": {
            "type": "string",
            "title": "Plugin Ref"
          },
          "functionID": {
            "type": "integer",
            "title": "Functionid"
          },
          "functionRef": {
            "type": "string",
            "title": "Functionref"
          },
          "fRefAlias": {
            "type": "string",
            "title": "Frefalias"
          },
          "boolStart": {
            "type": "integer",
            "title": "Boolstart"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolShowinmega": {
            "type": "integer",
            "title": "Boolshowinmega"
          },
          "boolPrivacy": {
            "type": "integer",
            "title": "Boolprivacy"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "template": {
            "type": "integer",
            "title": "Template"
          },
          "templateID": {
            "type": "integer",
            "title": "Templateid"
          },
          "boolImgZoom": {
            "type": "integer",
            "title": "Boolimgzoom"
          },
          "boolDirectLink": {
            "type": "integer",
            "title": "Booldirectlink"
          },
          "directLink": {
            "type": "string",
            "title": "Directlink"
          },
          "boolExtLink": {
            "type": "integer",
            "title": "Boolextlink"
          },
          "validfrom": {
            "type": "integer",
            "title": "Validfrom"
          },
          "validto": {
            "type": "integer",
            "title": "Validto"
          },
          "pagename": {
            "type": "string",
            "title": "Pagename"
          },
          "pagedescription": {
            "type": "string",
            "title": "Pagedescription"
          },
          "indexImageID": {
            "type": "integer",
            "title": "Indeximageid"
          },
          "indexImage": {
            "type": "string",
            "title": "Indeximage"
          },
          "indexImagePath": {
            "type": "string",
            "title": "Indeximagepath"
          },
          "indeximg_descr": {
            "type": "string",
            "title": "Indeximg Descr"
          },
          "templateImageID": {
            "type": "integer",
            "title": "Templateimageid"
          },
          "templateImage": {
            "type": "string",
            "title": "Templateimage"
          },
          "templimg_descr": {
            "type": "string",
            "title": "Templimg Descr"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "pageheading": {
            "type": "string",
            "title": "Pageheading"
          },
          "pagecontent": {
            "type": "string",
            "title": "Pagecontent"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "date_modified": {
            "type": "integer",
            "title": "Date Modified"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          },
          "videoUrl": {
            "type": "string",
            "title": "Videourl"
          },
          "teaser": {
            "type": "string",
            "title": "Teaser"
          },
          "boolInfoscreen": {
            "type": "integer",
            "title": "Boolinfoscreen"
          },
          "boolArchived": {
            "type": "integer",
            "title": "Boolarchived"
          },
          "template_bgcolor": {
            "type": "string",
            "title": "Template Bgcolor"
          },
          "pageurlname": {
            "type": "string",
            "title": "Pageurlname"
          },
          "headerImage": {
            "type": "string",
            "title": "Headerimage"
          }
        },
        "type": "object",
        "required": [
          "parentID",
          "depID",
          "menuID",
          "boolArchive",
          "pluginID",
          "plugin_ref",
          "functionID",
          "functionRef",
          "fRefAlias",
          "boolStart",
          "boolShow",
          "boolShowinmega",
          "boolPrivacy",
          "sortnum",
          "template",
          "templateID",
          "boolImgZoom",
          "boolDirectLink",
          "directLink",
          "boolExtLink",
          "validfrom",
          "validto",
          "pagename",
          "pagedescription",
          "indexImageID",
          "indexImage",
          "indexImagePath",
          "indeximg_descr",
          "templateImageID",
          "templateImage",
          "templimg_descr",
          "urlTitle",
          "pageheading",
          "pagecontent",
          "date_created",
          "created_by",
          "date_modified",
          "modified_by",
          "videoUrl",
          "teaser",
          "boolInfoscreen",
          "boolArchived",
          "template_bgcolor",
          "pageurlname",
          "headerImage"
        ],
        "title": "PagesOutUpdate"
      },
      "PagesPluginsIn": {
        "properties": {
          "pageID": {
            "type": "integer",
            "title": "Pageid"
          },
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "pluginRef": {
            "type": "integer",
            "title": "Pluginref"
          }
        },
        "type": "object",
        "title": "PagesPluginsIn"
      },
      "PagesPluginsOut": {
        "properties": {
          "pageID": {
            "type": "integer",
            "title": "Pageid"
          },
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "pluginRef": {
            "type": "integer",
            "title": "Pluginref"
          }
        },
        "type": "object",
        "required": [
          "pageID"
        ],
        "title": "PagesPluginsOut"
      },
      "PagesPluginsOutUpdate": {
        "properties": {
          "articleID": {
            "type": "integer",
            "title": "Articleid"
          },
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "pluginRef": {
            "type": "integer",
            "title": "Pluginref"
          }
        },
        "type": "object",
        "required": [
          "articleID",
          "pluginID",
          "pluginRef"
        ],
        "title": "PagesPluginsOutUpdate"
      },
      "PaymentIn": {
        "properties": {
          "orgnummer": {
            "type": "string",
            "title": "Orgnummer"
          },
          "boolOrdertoEmail": {
            "type": "integer",
            "title": "Boolordertoemail"
          },
          "emailOrders": {
            "type": "string",
            "title": "Emailorders"
          },
          "boolDibs": {
            "type": "integer",
            "title": "Booldibs"
          },
          "DibsMerchantID": {
            "type": "string",
            "title": "Dibsmerchantid"
          },
          "Dibs_description": {
            "type": "string",
            "title": "Dibs Description"
          },
          "feeDibs": {
            "type": "integer",
            "title": "Feedibs"
          },
          "Dibs_test": {
            "type": "integer",
            "title": "Dibs Test"
          },
          "boolKlarna_invoice": {
            "type": "integer",
            "title": "Boolklarna Invoice"
          },
          "boolKlarna_account": {
            "type": "integer",
            "title": "Boolklarna Account"
          },
          "KlarnaMerchantID": {
            "type": "string",
            "title": "Klarnamerchantid"
          },
          "KlarnaSecret": {
            "type": "string",
            "title": "Klarnasecret"
          },
          "feeKlarna_invoice": {
            "type": "integer",
            "title": "Feeklarna Invoice"
          },
          "Klarna_inv_description": {
            "type": "string",
            "title": "Klarna Inv Description"
          },
          "feeKlarna_account": {
            "type": "integer",
            "title": "Feeklarna Account"
          },
          "Klarna_acc_description": {
            "type": "string",
            "title": "Klarna Acc Description"
          },
          "boolLocalhandling": {
            "type": "integer",
            "title": "Boollocalhandling"
          },
          "feeLocalhandling": {
            "type": "integer",
            "title": "Feelocalhandling"
          },
          "Local_description": {
            "type": "string",
            "title": "Local Description"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          }
        },
        "type": "object",
        "title": "PaymentIn"
      },
      "PaymentOut": {
        "properties": {
          "orgnummer": {
            "type": "integer",
            "title": "Orgnummer"
          },
          "boolOrdertoEmail": {
            "type": "integer",
            "title": "Boolordertoemail"
          },
          "emailOrders": {
            "type": "string",
            "title": "Emailorders"
          },
          "boolDibs": {
            "type": "integer",
            "title": "Booldibs"
          },
          "DibsMerchantID": {
            "type": "string",
            "title": "Dibsmerchantid"
          },
          "Dibs_description": {
            "type": "string",
            "title": "Dibs Description"
          },
          "feeDibs": {
            "type": "integer",
            "title": "Feedibs"
          },
          "Dibs_test": {
            "type": "integer",
            "title": "Dibs Test"
          },
          "boolKlarna_invoice": {
            "type": "integer",
            "title": "Boolklarna Invoice"
          },
          "boolKlarna_account": {
            "type": "integer",
            "title": "Boolklarna Account"
          },
          "KlarnaMerchantID": {
            "type": "string",
            "title": "Klarnamerchantid"
          },
          "KlarnaSecret": {
            "type": "string",
            "title": "Klarnasecret"
          },
          "feeKlarna_invoice": {
            "type": "integer",
            "title": "Feeklarna Invoice"
          },
          "Klarna_inv_description": {
            "type": "string",
            "title": "Klarna Inv Description"
          },
          "feeKlarna_account": {
            "type": "integer",
            "title": "Feeklarna Account"
          },
          "Klarna_acc_description": {
            "type": "string",
            "title": "Klarna Acc Description"
          },
          "boolLocalhandling": {
            "type": "integer",
            "title": "Boollocalhandling"
          },
          "feeLocalhandling": {
            "type": "integer",
            "title": "Feelocalhandling"
          },
          "Local_description": {
            "type": "string",
            "title": "Local Description"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          }
        },
        "type": "object",
        "required": [
          "orgnummer"
        ],
        "title": "PaymentOut"
      },
      "PaymentOutUpdate": {
        "properties": {
          "boolOrdertoEmail": {
            "type": "integer",
            "title": "Boolordertoemail"
          },
          "emailOrders": {
            "type": "string",
            "title": "Emailorders"
          },
          "boolDibs": {
            "type": "integer",
            "title": "Booldibs"
          },
          "DibsMerchantID": {
            "type": "string",
            "title": "Dibsmerchantid"
          },
          "Dibs_description": {
            "type": "string",
            "title": "Dibs Description"
          },
          "feeDibs": {
            "type": "integer",
            "title": "Feedibs"
          },
          "Dibs_test": {
            "type": "integer",
            "title": "Dibs Test"
          },
          "boolKlarna_invoice": {
            "type": "integer",
            "title": "Boolklarna Invoice"
          },
          "boolKlarna_account": {
            "type": "integer",
            "title": "Boolklarna Account"
          },
          "KlarnaMerchantID": {
            "type": "string",
            "title": "Klarnamerchantid"
          },
          "KlarnaSecret": {
            "type": "string",
            "title": "Klarnasecret"
          },
          "feeKlarna_invoice": {
            "type": "integer",
            "title": "Feeklarna Invoice"
          },
          "Klarna_inv_description": {
            "type": "string",
            "title": "Klarna Inv Description"
          },
          "feeKlarna_account": {
            "type": "integer",
            "title": "Feeklarna Account"
          },
          "Klarna_acc_description": {
            "type": "string",
            "title": "Klarna Acc Description"
          },
          "boolLocalhandling": {
            "type": "integer",
            "title": "Boollocalhandling"
          },
          "feeLocalhandling": {
            "type": "integer",
            "title": "Feelocalhandling"
          },
          "Local_description": {
            "type": "string",
            "title": "Local Description"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          }
        },
        "type": "object",
        "required": [
          "boolOrdertoEmail",
          "emailOrders",
          "boolDibs",
          "DibsMerchantID",
          "Dibs_description",
          "feeDibs",
          "Dibs_test",
          "boolKlarna_invoice",
          "boolKlarna_account",
          "KlarnaMerchantID",
          "KlarnaSecret",
          "feeKlarna_invoice",
          "Klarna_inv_description",
          "feeKlarna_account",
          "Klarna_acc_description",
          "boolLocalhandling",
          "feeLocalhandling",
          "Local_description",
          "terms"
        ],
        "title": "PaymentOutUpdate"
      },
      "PhotoalbumImagesIn": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgWidth": {
            "type": "string",
            "title": "Imgwidth"
          },
          "imgHeight": {
            "type": "string",
            "title": "Imgheight"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "sortnum": {
            "type": "string",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "PhotoalbumImagesIn"
      },
      "PhotoalbumImagesOut": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgWidth": {
            "type": "string",
            "title": "Imgwidth"
          },
          "imgHeight": {
            "type": "string",
            "title": "Imgheight"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "sortnum": {
            "type": "string",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "imageID"
        ],
        "title": "PhotoalbumImagesOut"
      },
      "PhotoalbumImagesOutUpdate": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "imgWidth": {
            "type": "string",
            "title": "Imgwidth"
          },
          "imgHeight": {
            "type": "string",
            "title": "Imgheight"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          },
          "sortnum": {
            "type": "string",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "categoryID",
          "boolShow",
          "imagefile",
          "imgWidth",
          "imgHeight",
          "imgDescription",
          "sortnum"
        ],
        "title": "PhotoalbumImagesOutUpdate"
      },
      "PhotoalbumIn": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "albumname": {
            "type": "string",
            "title": "Albumname"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "sortnum": {
            "type": "string",
            "title": "Sortnum"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "PhotoalbumIn"
      },
      "PhotoalbumOut": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "albumname": {
            "type": "string",
            "title": "Albumname"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "sortnum": {
            "type": "string",
            "title": "Sortnum"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "categoryID"
        ],
        "title": "PhotoalbumOut"
      },
      "PhotoalbumOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "albumname": {
            "type": "string",
            "title": "Albumname"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "sortnum": {
            "type": "string",
            "title": "Sortnum"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "boolShow",
          "albumname",
          "urlAlias",
          "sortnum",
          "date_created",
          "created_by"
        ],
        "title": "PhotoalbumOutUpdate"
      },
      "PluginsCategoriesIn": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "pluginCat": {
            "type": "string",
            "title": "Plugincat"
          }
        },
        "type": "object",
        "title": "PluginsCategoriesIn"
      },
      "PluginsCategoriesOut": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "pluginCat": {
            "type": "string",
            "title": "Plugincat"
          }
        },
        "type": "object",
        "required": [
          "categoryID"
        ],
        "title": "PluginsCategoriesOut"
      },
      "PluginsCategoriesOutUpdate": {
        "properties": {
          "pluginCat": {
            "type": "string",
            "title": "Plugincat"
          }
        },
        "type": "object",
        "required": [
          "pluginCat"
        ],
        "title": "PluginsCategoriesOutUpdate"
      },
      "PluginsIn": {
        "properties": {
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "pluginPagefile": {
            "type": "string",
            "title": "Pluginpagefile"
          },
          "pluginFunction": {
            "type": "string",
            "title": "Pluginfunction"
          },
          "pluginName": {
            "type": "string",
            "title": "Pluginname"
          },
          "pluginMain": {
            "type": "string",
            "title": "Pluginmain"
          },
          "areaID": {
            "type": "integer",
            "title": "Areaid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "superv": {
            "type": "integer",
            "title": "Superv"
          }
        },
        "type": "object",
        "title": "PluginsIn"
      },
      "PluginsOut": {
        "properties": {
          "pluginID": {
            "type": "integer",
            "title": "Pluginid"
          },
          "pluginPagefile": {
            "type": "string",
            "title": "Pluginpagefile"
          },
          "pluginFunction": {
            "type": "string",
            "title": "Pluginfunction"
          },
          "pluginName": {
            "type": "string",
            "title": "Pluginname"
          },
          "pluginMain": {
            "type": "string",
            "title": "Pluginmain"
          },
          "areaID": {
            "type": "integer",
            "title": "Areaid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "superv": {
            "type": "integer",
            "title": "Superv"
          }
        },
        "type": "object",
        "required": [
          "pluginID"
        ],
        "title": "PluginsOut"
      },
      "PluginsOutUpdate": {
        "properties": {
          "pluginPagefile": {
            "type": "string",
            "title": "Pluginpagefile"
          },
          "pluginFunction": {
            "type": "string",
            "title": "Pluginfunction"
          },
          "pluginName": {
            "type": "string",
            "title": "Pluginname"
          },
          "pluginMain": {
            "type": "string",
            "title": "Pluginmain"
          },
          "areaID": {
            "type": "integer",
            "title": "Areaid"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "superv": {
            "type": "integer",
            "title": "Superv"
          }
        },
        "type": "object",
        "required": [
          "pluginPagefile",
          "pluginFunction",
          "pluginName",
          "pluginMain",
          "areaID",
          "categoryID",
          "sortnum",
          "superv"
        ],
        "title": "PluginsOutUpdate"
      },
      "ProfilesIn": {
        "properties": {
          "profileID": {
            "type": "integer",
            "title": "Profileid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "descr": {
            "type": "string",
            "title": "Descr"
          },
          "myFacebook": {
            "type": "string",
            "title": "Myfacebook"
          },
          "myInsta": {
            "type": "string",
            "title": "Myinsta"
          },
          "myScangolf": {
            "type": "string",
            "title": "Myscangolf"
          },
          "myLinkedin": {
            "type": "string",
            "title": "Mylinkedin"
          },
          "myTwitter": {
            "type": "string",
            "title": "Mytwitter"
          },
          "myYoutube": {
            "type": "string",
            "title": "Myyoutube"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "ProfilesIn"
      },
      "ProfilesOut": {
        "properties": {
          "profileID": {
            "type": "integer",
            "title": "Profileid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "descr": {
            "type": "string",
            "title": "Descr"
          },
          "myFacebook": {
            "type": "string",
            "title": "Myfacebook"
          },
          "myInsta": {
            "type": "string",
            "title": "Myinsta"
          },
          "myScangolf": {
            "type": "string",
            "title": "Myscangolf"
          },
          "myLinkedin": {
            "type": "string",
            "title": "Mylinkedin"
          },
          "myTwitter": {
            "type": "string",
            "title": "Mytwitter"
          },
          "myYoutube": {
            "type": "string",
            "title": "Myyoutube"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "profileID"
        ],
        "title": "ProfilesOut"
      },
      "ProfilesOutUpdate": {
        "properties": {
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "descr": {
            "type": "string",
            "title": "Descr"
          },
          "myFacebook": {
            "type": "string",
            "title": "Myfacebook"
          },
          "myInsta": {
            "type": "string",
            "title": "Myinsta"
          },
          "myScangolf": {
            "type": "string",
            "title": "Myscangolf"
          },
          "myLinkedin": {
            "type": "string",
            "title": "Mylinkedin"
          },
          "myTwitter": {
            "type": "string",
            "title": "Mytwitter"
          },
          "myYoutube": {
            "type": "string",
            "title": "Myyoutube"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "firstname",
          "lastname",
          "imageID",
          "email",
          "phone",
          "descr",
          "myFacebook",
          "myInsta",
          "myScangolf",
          "myLinkedin",
          "myTwitter",
          "myYoutube",
          "date_created",
          "created_by"
        ],
        "title": "ProfilesOutUpdate"
      },
      "SetupBasicIn": {
        "properties": {
          "clubname": {
            "type": "string",
            "title": "Clubname"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "postcode": {
            "type": "string",
            "title": "Postcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "orgnr": {
            "type": "string",
            "title": "Orgnr"
          },
          "longitude": {
            "type": "string",
            "title": "Longitude"
          },
          "latitude": {
            "type": "string",
            "title": "Latitude"
          },
          "urlContact": {
            "type": "string",
            "title": "Urlcontact"
          },
          "defibrillator": {
            "type": "integer",
            "title": "Defibrillator"
          },
          "memberSignupTo": {
            "type": "string",
            "title": "Membersignupto"
          },
          "memberSignupTo_cc": {
            "type": "string",
            "title": "Membersignupto Cc"
          },
          "memberTerms": {
            "type": "string",
            "title": "Memberterms"
          },
          "memberOnlinePay": {
            "type": "integer",
            "title": "Memberonlinepay"
          },
          "course_condition": {
            "type": "string",
            "title": "Course Condition"
          },
          "ccond_url": {
            "type": "string",
            "title": "Ccond Url"
          },
          "ccond_image": {
            "type": "string",
            "title": "Ccond Image"
          },
          "ccond_validfrom": {
            "type": "integer",
            "title": "Ccond Validfrom"
          },
          "ccond_validto": {
            "type": "integer",
            "title": "Ccond Validto"
          },
          "blogDescr": {
            "type": "string",
            "title": "Blogdescr"
          },
          "blogNumInWidget": {
            "type": "integer",
            "title": "Blognuminwidget"
          },
          "extraMailMsg": {
            "type": "string",
            "title": "Extramailmsg"
          },
          "memberSelPayPeriode": {
            "type": "integer",
            "title": "Memberselpayperiode"
          },
          "geoHeight": {
            "type": "string",
            "title": "Geoheight"
          },
          "ccon_selreport": {
            "type": "string",
            "title": "Ccon Selreport"
          },
          "ccon_rssurl": {
            "type": "string",
            "title": "Ccon Rssurl"
          }
        },
        "type": "object",
        "title": "SetupBasicIn"
      },
      "SetupBasicOut": {
        "properties": {
          "clubname": {
            "type": "integer",
            "title": "Clubname"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "postcode": {
            "type": "string",
            "title": "Postcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "orgnr": {
            "type": "string",
            "title": "Orgnr"
          },
          "longitude": {
            "type": "string",
            "title": "Longitude"
          },
          "latitude": {
            "type": "string",
            "title": "Latitude"
          },
          "urlContact": {
            "type": "string",
            "title": "Urlcontact"
          },
          "defibrillator": {
            "type": "integer",
            "title": "Defibrillator"
          },
          "memberSignupTo": {
            "type": "string",
            "title": "Membersignupto"
          },
          "memberSignupTo_cc": {
            "type": "string",
            "title": "Membersignupto Cc"
          },
          "memberTerms": {
            "type": "string",
            "title": "Memberterms"
          },
          "memberOnlinePay": {
            "type": "integer",
            "title": "Memberonlinepay"
          },
          "course_condition": {
            "type": "string",
            "title": "Course Condition"
          },
          "ccond_url": {
            "type": "string",
            "title": "Ccond Url"
          },
          "ccond_image": {
            "type": "string",
            "title": "Ccond Image"
          },
          "ccond_validfrom": {
            "type": "integer",
            "title": "Ccond Validfrom"
          },
          "ccond_validto": {
            "type": "integer",
            "title": "Ccond Validto"
          },
          "blogDescr": {
            "type": "string",
            "title": "Blogdescr"
          },
          "blogNumInWidget": {
            "type": "integer",
            "title": "Blognuminwidget"
          },
          "extraMailMsg": {
            "type": "string",
            "title": "Extramailmsg"
          },
          "memberSelPayPeriode": {
            "type": "integer",
            "title": "Memberselpayperiode"
          },
          "geoHeight": {
            "type": "string",
            "title": "Geoheight"
          },
          "ccon_selreport": {
            "type": "string",
            "title": "Ccon Selreport"
          },
          "ccon_rssurl": {
            "type": "string",
            "title": "Ccon Rssurl"
          }
        },
        "type": "object",
        "required": [
          "clubname"
        ],
        "title": "SetupBasicOut"
      },
      "SetupBasicOutUpdate": {
        "properties": {
          "address": {
            "type": "string",
            "title": "Address"
          },
          "postcode": {
            "type": "string",
            "title": "Postcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "orgnr": {
            "type": "string",
            "title": "Orgnr"
          },
          "longitude": {
            "type": "string",
            "title": "Longitude"
          },
          "latitude": {
            "type": "string",
            "title": "Latitude"
          },
          "urlContact": {
            "type": "string",
            "title": "Urlcontact"
          },
          "defibrillator": {
            "type": "integer",
            "title": "Defibrillator"
          },
          "memberSignupTo": {
            "type": "string",
            "title": "Membersignupto"
          },
          "memberSignupTo_cc": {
            "type": "string",
            "title": "Membersignupto Cc"
          },
          "memberTerms": {
            "type": "string",
            "title": "Memberterms"
          },
          "memberOnlinePay": {
            "type": "integer",
            "title": "Memberonlinepay"
          },
          "course_condition": {
            "type": "string",
            "title": "Course Condition"
          },
          "ccond_url": {
            "type": "string",
            "title": "Ccond Url"
          },
          "ccond_image": {
            "type": "string",
            "title": "Ccond Image"
          },
          "ccond_validfrom": {
            "type": "integer",
            "title": "Ccond Validfrom"
          },
          "ccond_validto": {
            "type": "integer",
            "title": "Ccond Validto"
          },
          "blogDescr": {
            "type": "string",
            "title": "Blogdescr"
          },
          "blogNumInWidget": {
            "type": "integer",
            "title": "Blognuminwidget"
          },
          "extraMailMsg": {
            "type": "string",
            "title": "Extramailmsg"
          },
          "memberSelPayPeriode": {
            "type": "integer",
            "title": "Memberselpayperiode"
          },
          "geoHeight": {
            "type": "string",
            "title": "Geoheight"
          },
          "ccon_selreport": {
            "type": "string",
            "title": "Ccon Selreport"
          },
          "ccon_rssurl": {
            "type": "string",
            "title": "Ccon Rssurl"
          }
        },
        "type": "object",
        "required": [
          "address",
          "postcode",
          "city",
          "orgnr",
          "longitude",
          "latitude",
          "urlContact",
          "defibrillator",
          "memberSignupTo",
          "memberSignupTo_cc",
          "memberTerms",
          "memberOnlinePay",
          "course_condition",
          "ccond_url",
          "ccond_image",
          "ccond_validfrom",
          "ccond_validto",
          "blogDescr",
          "blogNumInWidget",
          "extraMailMsg",
          "memberSelPayPeriode",
          "geoHeight",
          "ccon_selreport",
          "ccon_rssurl"
        ],
        "title": "SetupBasicOutUpdate"
      },
      "SetupBasicReceiversIn": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "receiver": {
            "type": "string",
            "title": "Receiver"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "mainContact": {
            "type": "integer",
            "title": "Maincontact"
          }
        },
        "type": "object",
        "title": "SetupBasicReceiversIn"
      },
      "SetupBasicReceiversOut": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "receiver": {
            "type": "string",
            "title": "Receiver"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "mainContact": {
            "type": "integer",
            "title": "Maincontact"
          }
        },
        "type": "object",
        "required": [
          "recID"
        ],
        "title": "SetupBasicReceiversOut"
      },
      "SetupBasicReceiversOutUpdate": {
        "properties": {
          "receiver": {
            "type": "string",
            "title": "Receiver"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "mainContact": {
            "type": "integer",
            "title": "Maincontact"
          }
        },
        "type": "object",
        "required": [
          "receiver",
          "phone",
          "email",
          "sortnum",
          "mainContact"
        ],
        "title": "SetupBasicReceiversOutUpdate"
      },
      "SetupLanguageIn": {
        "properties": {
          "langCode": {
            "type": "string",
            "title": "Langcode"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "localurl": {
            "type": "string",
            "title": "Localurl"
          }
        },
        "type": "object",
        "title": "SetupLanguageIn"
      },
      "SetupLanguageOut": {
        "properties": {
          "langCode": {
            "type": "integer",
            "title": "Langcode"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "localurl": {
            "type": "string",
            "title": "Localurl"
          }
        },
        "type": "object",
        "required": [
          "langCode"
        ],
        "title": "SetupLanguageOut"
      },
      "SetupLanguageOutUpdate": {
        "properties": {
          "language": {
            "type": "string",
            "title": "Language"
          },
          "localurl": {
            "type": "string",
            "title": "Localurl"
          }
        },
        "type": "object",
        "required": [
          "language",
          "localurl"
        ],
        "title": "SetupLanguageOutUpdate"
      },
      "SetupPaymentIn": {
        "properties": {
          "email_orders": {
            "type": "string",
            "title": "Email Orders"
          },
          "email_orders_cc": {
            "type": "string",
            "title": "Email Orders Cc"
          },
          "boolLocal": {
            "type": "integer",
            "title": "Boollocal"
          },
          "localDescr": {
            "type": "string",
            "title": "Localdescr"
          },
          "local_fee": {
            "type": "integer",
            "title": "Local Fee"
          },
          "boolNets": {
            "type": "integer",
            "title": "Boolnets"
          },
          "Nets_testmodus": {
            "type": "integer",
            "title": "Nets Testmodus"
          },
          "Nets_merchantID": {
            "type": "string",
            "title": "Nets Merchantid"
          },
          "Nets_secretkey_live": {
            "type": "string",
            "title": "Nets Secretkey Live"
          },
          "Nets_checkoutkey_live": {
            "type": "string",
            "title": "Nets Checkoutkey Live"
          },
          "Nets_secretkey_test": {
            "type": "string",
            "title": "Nets Secretkey Test"
          },
          "Nets_checkoutkey_test": {
            "type": "string",
            "title": "Nets Checkoutkey Test"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "boolCharge": {
            "type": "integer",
            "title": "Boolcharge"
          },
          "accID": {
            "type": "integer",
            "title": "Accid"
          },
          "accountName": {
            "type": "string",
            "title": "Accountname"
          },
          "companyAdr": {
            "type": "string",
            "title": "Companyadr"
          },
          "pcode": {
            "type": "string",
            "title": "Pcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "orgnr": {
            "type": "string",
            "title": "Orgnr"
          },
          "boolOrder_byemail": {
            "type": "integer",
            "title": "Boolorder Byemail"
          }
        },
        "type": "object",
        "title": "SetupPaymentIn"
      },
      "SetupPaymentOut": {
        "properties": {
          "email_orders": {
            "type": "integer",
            "title": "Email Orders"
          },
          "email_orders_cc": {
            "type": "string",
            "title": "Email Orders Cc"
          },
          "boolLocal": {
            "type": "integer",
            "title": "Boollocal"
          },
          "localDescr": {
            "type": "string",
            "title": "Localdescr"
          },
          "local_fee": {
            "type": "integer",
            "title": "Local Fee"
          },
          "boolNets": {
            "type": "integer",
            "title": "Boolnets"
          },
          "Nets_testmodus": {
            "type": "integer",
            "title": "Nets Testmodus"
          },
          "Nets_merchantID": {
            "type": "string",
            "title": "Nets Merchantid"
          },
          "Nets_secretkey_live": {
            "type": "string",
            "title": "Nets Secretkey Live"
          },
          "Nets_checkoutkey_live": {
            "type": "string",
            "title": "Nets Checkoutkey Live"
          },
          "Nets_secretkey_test": {
            "type": "string",
            "title": "Nets Secretkey Test"
          },
          "Nets_checkoutkey_test": {
            "type": "string",
            "title": "Nets Checkoutkey Test"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "boolCharge": {
            "type": "integer",
            "title": "Boolcharge"
          },
          "accID": {
            "type": "integer",
            "title": "Accid"
          },
          "accountName": {
            "type": "string",
            "title": "Accountname"
          },
          "companyAdr": {
            "type": "string",
            "title": "Companyadr"
          },
          "pcode": {
            "type": "string",
            "title": "Pcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "orgnr": {
            "type": "string",
            "title": "Orgnr"
          },
          "boolOrder_byemail": {
            "type": "integer",
            "title": "Boolorder Byemail"
          }
        },
        "type": "object",
        "required": [
          "email_orders"
        ],
        "title": "SetupPaymentOut"
      },
      "SetupPaymentOutUpdate": {
        "properties": {
          "email_orders_cc": {
            "type": "string",
            "title": "Email Orders Cc"
          },
          "boolLocal": {
            "type": "integer",
            "title": "Boollocal"
          },
          "localDescr": {
            "type": "string",
            "title": "Localdescr"
          },
          "local_fee": {
            "type": "integer",
            "title": "Local Fee"
          },
          "boolNets": {
            "type": "integer",
            "title": "Boolnets"
          },
          "Nets_testmodus": {
            "type": "integer",
            "title": "Nets Testmodus"
          },
          "Nets_merchantID": {
            "type": "string",
            "title": "Nets Merchantid"
          },
          "Nets_secretkey_live": {
            "type": "string",
            "title": "Nets Secretkey Live"
          },
          "Nets_checkoutkey_live": {
            "type": "string",
            "title": "Nets Checkoutkey Live"
          },
          "Nets_secretkey_test": {
            "type": "string",
            "title": "Nets Secretkey Test"
          },
          "Nets_checkoutkey_test": {
            "type": "string",
            "title": "Nets Checkoutkey Test"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "boolCharge": {
            "type": "integer",
            "title": "Boolcharge"
          },
          "accID": {
            "type": "integer",
            "title": "Accid"
          },
          "accountName": {
            "type": "string",
            "title": "Accountname"
          },
          "companyAdr": {
            "type": "string",
            "title": "Companyadr"
          },
          "pcode": {
            "type": "string",
            "title": "Pcode"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "orgnr": {
            "type": "string",
            "title": "Orgnr"
          },
          "boolOrder_byemail": {
            "type": "integer",
            "title": "Boolorder Byemail"
          }
        },
        "type": "object",
        "required": [
          "email_orders_cc",
          "boolLocal",
          "localDescr",
          "local_fee",
          "boolNets",
          "Nets_testmodus",
          "Nets_merchantID",
          "Nets_secretkey_live",
          "Nets_checkoutkey_live",
          "Nets_secretkey_test",
          "Nets_checkoutkey_test",
          "terms",
          "boolCharge",
          "accID",
          "accountName",
          "companyAdr",
          "pcode",
          "city",
          "orgnr",
          "boolOrder_byemail"
        ],
        "title": "SetupPaymentOutUpdate"
      },
      "SetupSiteIn": {
        "properties": {
          "amtNewsMainFront": {
            "type": "integer",
            "title": "Amtnewsmainfront"
          },
          "amtNewsDepFront": {
            "type": "integer",
            "title": "Amtnewsdepfront"
          },
          "amtNewsPri": {
            "type": "integer",
            "title": "Amtnewspri"
          },
          "newsPriBig": {
            "type": "integer",
            "title": "Newspribig"
          },
          "siteDescription": {
            "type": "string",
            "title": "Sitedescription"
          },
          "fb_Url": {
            "type": "string",
            "title": "Fb Url"
          },
          "fb_AppId": {
            "type": "string",
            "title": "Fb Appid"
          },
          "fb_AdminID": {
            "type": "string",
            "title": "Fb Adminid"
          },
          "fb_AppSecret": {
            "type": "string",
            "title": "Fb Appsecret"
          },
          "fb_pixelID": {
            "type": "string",
            "title": "Fb Pixelid"
          },
          "google_Verification": {
            "type": "string",
            "title": "Google Verification"
          },
          "google_AnalyticsID": {
            "type": "string",
            "title": "Google Analyticsid"
          },
          "google_API_KEY": {
            "type": "string",
            "title": "Google Api Key"
          },
          "insta_Url": {
            "type": "string",
            "title": "Insta Url"
          },
          "twitter_Url": {
            "type": "string",
            "title": "Twitter Url"
          },
          "youtube_Url": {
            "type": "string",
            "title": "Youtube Url"
          },
          "snapchat_Url": {
            "type": "string",
            "title": "Snapchat Url"
          },
          "topLanguage": {
            "type": "integer",
            "title": "Toplanguage"
          },
          "topSearch": {
            "type": "integer",
            "title": "Topsearch"
          },
          "topUser": {
            "type": "integer",
            "title": "Topuser"
          },
          "topSocial": {
            "type": "integer",
            "title": "Topsocial"
          },
          "topWeather": {
            "type": "integer",
            "title": "Topweather"
          },
          "weather_url": {
            "type": "string",
            "title": "Weather Url"
          },
          "spotify_Url": {
            "type": "string",
            "title": "Spotify Url"
          },
          "google_Tagmanager": {
            "type": "string",
            "title": "Google Tagmanager"
          },
          "title_front": {
            "type": "string",
            "title": "Title Front"
          },
          "yr_url": {
            "type": "string",
            "title": "Yr Url"
          },
          "googleMapCode": {
            "type": "string",
            "title": "Googlemapcode"
          },
          "longitude": {
            "type": "string",
            "title": "Longitude"
          },
          "latitude": {
            "type": "string",
            "title": "Latitude"
          },
          "geoHeight": {
            "type": "string",
            "title": "Geoheight"
          },
          "yr_widgetBG": {
            "type": "string",
            "title": "Yr Widgetbg"
          },
          "hioOnlyYear": {
            "type": "integer",
            "title": "Hioonlyyear"
          },
          "linkedIn_Url": {
            "type": "string",
            "title": "Linkedin Url"
          },
          "newsTemplate": {
            "type": "integer",
            "title": "Newstemplate"
          },
          "useInfoscreen": {
            "type": "integer",
            "title": "Useinfoscreen"
          },
          "fb_PageID": {
            "type": "string",
            "title": "Fb Pageid"
          },
          "useCSbooking": {
            "type": "integer",
            "title": "Usecsbooking"
          }
        },
        "type": "object",
        "title": "SetupSiteIn"
      },
      "SetupSiteOut": {
        "properties": {
          "amtNewsMainFront": {
            "type": "integer",
            "title": "Amtnewsmainfront"
          },
          "amtNewsDepFront": {
            "type": "integer",
            "title": "Amtnewsdepfront"
          },
          "amtNewsPri": {
            "type": "integer",
            "title": "Amtnewspri"
          },
          "newsPriBig": {
            "type": "integer",
            "title": "Newspribig"
          },
          "siteDescription": {
            "type": "string",
            "title": "Sitedescription"
          },
          "fb_Url": {
            "type": "string",
            "title": "Fb Url"
          },
          "fb_AppId": {
            "type": "string",
            "title": "Fb Appid"
          },
          "fb_AdminID": {
            "type": "string",
            "title": "Fb Adminid"
          },
          "fb_AppSecret": {
            "type": "string",
            "title": "Fb Appsecret"
          },
          "fb_pixelID": {
            "type": "string",
            "title": "Fb Pixelid"
          },
          "google_Verification": {
            "type": "string",
            "title": "Google Verification"
          },
          "google_AnalyticsID": {
            "type": "string",
            "title": "Google Analyticsid"
          },
          "google_API_KEY": {
            "type": "string",
            "title": "Google Api Key"
          },
          "insta_Url": {
            "type": "string",
            "title": "Insta Url"
          },
          "twitter_Url": {
            "type": "string",
            "title": "Twitter Url"
          },
          "youtube_Url": {
            "type": "string",
            "title": "Youtube Url"
          },
          "snapchat_Url": {
            "type": "string",
            "title": "Snapchat Url"
          },
          "topLanguage": {
            "type": "integer",
            "title": "Toplanguage"
          },
          "topSearch": {
            "type": "integer",
            "title": "Topsearch"
          },
          "topUser": {
            "type": "integer",
            "title": "Topuser"
          },
          "topSocial": {
            "type": "integer",
            "title": "Topsocial"
          },
          "topWeather": {
            "type": "integer",
            "title": "Topweather"
          },
          "weather_url": {
            "type": "string",
            "title": "Weather Url"
          },
          "spotify_Url": {
            "type": "string",
            "title": "Spotify Url"
          },
          "google_Tagmanager": {
            "type": "string",
            "title": "Google Tagmanager"
          },
          "title_front": {
            "type": "string",
            "title": "Title Front"
          },
          "yr_url": {
            "type": "string",
            "title": "Yr Url"
          },
          "googleMapCode": {
            "type": "string",
            "title": "Googlemapcode"
          },
          "longitude": {
            "type": "string",
            "title": "Longitude"
          },
          "latitude": {
            "type": "string",
            "title": "Latitude"
          },
          "geoHeight": {
            "type": "string",
            "title": "Geoheight"
          },
          "yr_widgetBG": {
            "type": "string",
            "title": "Yr Widgetbg"
          },
          "hioOnlyYear": {
            "type": "integer",
            "title": "Hioonlyyear"
          },
          "linkedIn_Url": {
            "type": "string",
            "title": "Linkedin Url"
          },
          "newsTemplate": {
            "type": "integer",
            "title": "Newstemplate"
          },
          "useInfoscreen": {
            "type": "integer",
            "title": "Useinfoscreen"
          },
          "fb_PageID": {
            "type": "string",
            "title": "Fb Pageid"
          },
          "useCSbooking": {
            "type": "integer",
            "title": "Usecsbooking"
          }
        },
        "type": "object",
        "required": [
          "amtNewsMainFront"
        ],
        "title": "SetupSiteOut"
      },
      "SetupSiteOutUpdate": {
        "properties": {
          "amtNewsDepFront": {
            "type": "integer",
            "title": "Amtnewsdepfront"
          },
          "amtNewsPri": {
            "type": "integer",
            "title": "Amtnewspri"
          },
          "newsPriBig": {
            "type": "integer",
            "title": "Newspribig"
          },
          "siteDescription": {
            "type": "string",
            "title": "Sitedescription"
          },
          "fb_Url": {
            "type": "string",
            "title": "Fb Url"
          },
          "fb_AppId": {
            "type": "string",
            "title": "Fb Appid"
          },
          "fb_AdminID": {
            "type": "string",
            "title": "Fb Adminid"
          },
          "fb_AppSecret": {
            "type": "string",
            "title": "Fb Appsecret"
          },
          "fb_pixelID": {
            "type": "string",
            "title": "Fb Pixelid"
          },
          "google_Verification": {
            "type": "string",
            "title": "Google Verification"
          },
          "google_AnalyticsID": {
            "type": "string",
            "title": "Google Analyticsid"
          },
          "google_API_KEY": {
            "type": "string",
            "title": "Google Api Key"
          },
          "insta_Url": {
            "type": "string",
            "title": "Insta Url"
          },
          "twitter_Url": {
            "type": "string",
            "title": "Twitter Url"
          },
          "youtube_Url": {
            "type": "string",
            "title": "Youtube Url"
          },
          "snapchat_Url": {
            "type": "string",
            "title": "Snapchat Url"
          },
          "topLanguage": {
            "type": "integer",
            "title": "Toplanguage"
          },
          "topSearch": {
            "type": "integer",
            "title": "Topsearch"
          },
          "topUser": {
            "type": "integer",
            "title": "Topuser"
          },
          "topSocial": {
            "type": "integer",
            "title": "Topsocial"
          },
          "topWeather": {
            "type": "integer",
            "title": "Topweather"
          },
          "weather_url": {
            "type": "string",
            "title": "Weather Url"
          },
          "spotify_Url": {
            "type": "string",
            "title": "Spotify Url"
          },
          "google_Tagmanager": {
            "type": "string",
            "title": "Google Tagmanager"
          },
          "title_front": {
            "type": "string",
            "title": "Title Front"
          },
          "yr_url": {
            "type": "string",
            "title": "Yr Url"
          },
          "googleMapCode": {
            "type": "string",
            "title": "Googlemapcode"
          },
          "longitude": {
            "type": "string",
            "title": "Longitude"
          },
          "latitude": {
            "type": "string",
            "title": "Latitude"
          },
          "geoHeight": {
            "type": "string",
            "title": "Geoheight"
          },
          "yr_widgetBG": {
            "type": "string",
            "title": "Yr Widgetbg"
          },
          "hioOnlyYear": {
            "type": "integer",
            "title": "Hioonlyyear"
          },
          "linkedIn_Url": {
            "type": "string",
            "title": "Linkedin Url"
          },
          "newsTemplate": {
            "type": "integer",
            "title": "Newstemplate"
          },
          "useInfoscreen": {
            "type": "integer",
            "title": "Useinfoscreen"
          },
          "fb_PageID": {
            "type": "string",
            "title": "Fb Pageid"
          },
          "useCSbooking": {
            "type": "integer",
            "title": "Usecsbooking"
          }
        },
        "type": "object",
        "required": [
          "amtNewsDepFront",
          "amtNewsPri",
          "newsPriBig",
          "siteDescription",
          "fb_Url",
          "fb_AppId",
          "fb_AdminID",
          "fb_AppSecret",
          "fb_pixelID",
          "google_Verification",
          "google_AnalyticsID",
          "google_API_KEY",
          "insta_Url",
          "twitter_Url",
          "youtube_Url",
          "snapchat_Url",
          "topLanguage",
          "topSearch",
          "topUser",
          "topSocial",
          "topWeather",
          "weather_url",
          "spotify_Url",
          "google_Tagmanager",
          "title_front",
          "yr_url",
          "googleMapCode",
          "longitude",
          "latitude",
          "geoHeight",
          "yr_widgetBG",
          "hioOnlyYear",
          "linkedIn_Url",
          "newsTemplate",
          "useInfoscreen",
          "fb_PageID",
          "useCSbooking"
        ],
        "title": "SetupSiteOutUpdate"
      },
      "ShopCategoriesIn": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "ShopCategoriesIn"
      },
      "ShopCategoriesOut": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "categoryID"
        ],
        "title": "ShopCategoriesOut"
      },
      "ShopCategoriesOutUpdate": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "category",
          "boolShow",
          "urlAlias",
          "sortnum"
        ],
        "title": "ShopCategoriesOutUpdate"
      },
      "ShopProductsImagesIn": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          }
        },
        "type": "object",
        "title": "ShopProductsImagesIn"
      },
      "ShopProductsImagesOut": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          }
        },
        "type": "object",
        "required": [
          "imageID"
        ],
        "title": "ShopProductsImagesOut"
      },
      "ShopProductsImagesOutUpdate": {
        "properties": {
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "imagefile": {
            "type": "string",
            "title": "Imagefile"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "imgDescription": {
            "type": "string",
            "title": "Imgdescription"
          }
        },
        "type": "object",
        "required": [
          "productID",
          "imagefile",
          "sortnum",
          "imgDescription"
        ],
        "title": "ShopProductsImagesOutUpdate"
      },
      "ShopProductsIn": {
        "properties": {
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "boolExpired": {
            "type": "integer",
            "title": "Boolexpired"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolForSale": {
            "type": "integer",
            "title": "Boolforsale"
          },
          "boolVariants": {
            "type": "integer",
            "title": "Boolvariants"
          },
          "boolTextvariant": {
            "type": "integer",
            "title": "Booltextvariant"
          },
          "boolLimitOne": {
            "type": "integer",
            "title": "Boollimitone"
          },
          "boolShipping": {
            "type": "integer",
            "title": "Boolshipping"
          },
          "custSpecText": {
            "type": "string",
            "title": "Custspectext"
          },
          "sortnum": {
            "type": "string",
            "title": "Sortnum"
          },
          "pricePrefix": {
            "type": "string",
            "title": "Priceprefix"
          },
          "priceOffset": {
            "type": "integer",
            "title": "Priceoffset"
          },
          "textvarlabel": {
            "type": "string",
            "title": "Textvarlabel"
          },
          "boolTextvarRequired": {
            "type": "integer",
            "title": "Booltextvarrequired"
          },
          "productName": {
            "type": "string",
            "title": "Productname"
          },
          "variant": {
            "type": "string",
            "title": "Variant"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "taxCode": {
            "type": "integer",
            "title": "Taxcode"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "price_std": {
            "type": "integer",
            "title": "Price Std"
          },
          "boolPrice_camp": {
            "type": "integer",
            "title": "Boolprice Camp"
          },
          "price_camp": {
            "type": "integer",
            "title": "Price Camp"
          },
          "campFromdate": {
            "type": "integer",
            "title": "Campfromdate"
          },
          "campTodate": {
            "type": "integer",
            "title": "Camptodate"
          },
          "stock": {
            "type": "string",
            "title": "Stock"
          },
          "shortdescr": {
            "type": "string",
            "title": "Shortdescr"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "datereg": {
            "type": "integer",
            "title": "Datereg"
          },
          "creator": {
            "type": "string",
            "title": "Creator"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolLocalSaleOnly": {
            "type": "integer",
            "title": "Boollocalsaleonly"
          }
        },
        "type": "object",
        "title": "ShopProductsIn"
      },
      "ShopProductsOut": {
        "properties": {
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "boolExpired": {
            "type": "integer",
            "title": "Boolexpired"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolForSale": {
            "type": "integer",
            "title": "Boolforsale"
          },
          "boolVariants": {
            "type": "integer",
            "title": "Boolvariants"
          },
          "boolTextvariant": {
            "type": "integer",
            "title": "Booltextvariant"
          },
          "boolLimitOne": {
            "type": "integer",
            "title": "Boollimitone"
          },
          "boolShipping": {
            "type": "integer",
            "title": "Boolshipping"
          },
          "custSpecText": {
            "type": "string",
            "title": "Custspectext"
          },
          "sortnum": {
            "type": "string",
            "title": "Sortnum"
          },
          "pricePrefix": {
            "type": "string",
            "title": "Priceprefix"
          },
          "priceOffset": {
            "type": "integer",
            "title": "Priceoffset"
          },
          "textvarlabel": {
            "type": "string",
            "title": "Textvarlabel"
          },
          "boolTextvarRequired": {
            "type": "integer",
            "title": "Booltextvarrequired"
          },
          "productName": {
            "type": "string",
            "title": "Productname"
          },
          "variant": {
            "type": "string",
            "title": "Variant"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "taxCode": {
            "type": "integer",
            "title": "Taxcode"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "price_std": {
            "type": "integer",
            "title": "Price Std"
          },
          "boolPrice_camp": {
            "type": "integer",
            "title": "Boolprice Camp"
          },
          "price_camp": {
            "type": "integer",
            "title": "Price Camp"
          },
          "campFromdate": {
            "type": "integer",
            "title": "Campfromdate"
          },
          "campTodate": {
            "type": "integer",
            "title": "Camptodate"
          },
          "stock": {
            "type": "string",
            "title": "Stock"
          },
          "shortdescr": {
            "type": "string",
            "title": "Shortdescr"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "datereg": {
            "type": "integer",
            "title": "Datereg"
          },
          "creator": {
            "type": "string",
            "title": "Creator"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolLocalSaleOnly": {
            "type": "integer",
            "title": "Boollocalsaleonly"
          }
        },
        "type": "object",
        "required": [
          "productID"
        ],
        "title": "ShopProductsOut"
      },
      "ShopProductsOutUpdate": {
        "properties": {
          "parentID": {
            "type": "integer",
            "title": "Parentid"
          },
          "boolExpired": {
            "type": "integer",
            "title": "Boolexpired"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "boolForSale": {
            "type": "integer",
            "title": "Boolforsale"
          },
          "boolVariants": {
            "type": "integer",
            "title": "Boolvariants"
          },
          "boolTextvariant": {
            "type": "integer",
            "title": "Booltextvariant"
          },
          "boolLimitOne": {
            "type": "integer",
            "title": "Boollimitone"
          },
          "boolShipping": {
            "type": "integer",
            "title": "Boolshipping"
          },
          "custSpecText": {
            "type": "string",
            "title": "Custspectext"
          },
          "sortnum": {
            "type": "string",
            "title": "Sortnum"
          },
          "pricePrefix": {
            "type": "string",
            "title": "Priceprefix"
          },
          "priceOffset": {
            "type": "integer",
            "title": "Priceoffset"
          },
          "textvarlabel": {
            "type": "string",
            "title": "Textvarlabel"
          },
          "boolTextvarRequired": {
            "type": "integer",
            "title": "Booltextvarrequired"
          },
          "productName": {
            "type": "string",
            "title": "Productname"
          },
          "variant": {
            "type": "string",
            "title": "Variant"
          },
          "urlAlias": {
            "type": "string",
            "title": "Urlalias"
          },
          "taxCode": {
            "type": "integer",
            "title": "Taxcode"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "price_std": {
            "type": "integer",
            "title": "Price Std"
          },
          "boolPrice_camp": {
            "type": "integer",
            "title": "Boolprice Camp"
          },
          "price_camp": {
            "type": "integer",
            "title": "Price Camp"
          },
          "campFromdate": {
            "type": "integer",
            "title": "Campfromdate"
          },
          "campTodate": {
            "type": "integer",
            "title": "Camptodate"
          },
          "stock": {
            "type": "string",
            "title": "Stock"
          },
          "shortdescr": {
            "type": "string",
            "title": "Shortdescr"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "datereg": {
            "type": "integer",
            "title": "Datereg"
          },
          "creator": {
            "type": "string",
            "title": "Creator"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "boolLocalSaleOnly": {
            "type": "integer",
            "title": "Boollocalsaleonly"
          }
        },
        "type": "object",
        "required": [
          "parentID",
          "boolExpired",
          "boolShow",
          "boolForSale",
          "boolVariants",
          "boolTextvariant",
          "boolLimitOne",
          "boolShipping",
          "custSpecText",
          "sortnum",
          "pricePrefix",
          "priceOffset",
          "textvarlabel",
          "boolTextvarRequired",
          "productName",
          "variant",
          "urlAlias",
          "taxCode",
          "price",
          "price_std",
          "boolPrice_camp",
          "price_camp",
          "campFromdate",
          "campTodate",
          "stock",
          "shortdescr",
          "description",
          "datereg",
          "creator",
          "categoryID",
          "boolLocalSaleOnly"
        ],
        "title": "ShopProductsOutUpdate"
      },
      "ShopProductvargroupIn": {
        "properties": {
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "vargroupID": {
            "type": "integer",
            "title": "Vargroupid"
          }
        },
        "type": "object",
        "title": "ShopProductvargroupIn"
      },
      "ShopProductvargroupOut": {
        "properties": {
          "productID": {
            "type": "integer",
            "title": "Productid"
          },
          "vargroupID": {
            "type": "integer",
            "title": "Vargroupid"
          }
        },
        "type": "object",
        "required": [
          "productID"
        ],
        "title": "ShopProductvargroupOut"
      },
      "ShopProductvargroupOutUpdate": {
        "properties": {
          "vargroupID": {
            "type": "integer",
            "title": "Vargroupid"
          }
        },
        "type": "object",
        "required": [
          "vargroupID"
        ],
        "title": "ShopProductvargroupOutUpdate"
      },
      "ShopSetupIn": {
        "properties": {
          "boolCategories": {
            "type": "integer",
            "title": "Boolcategories"
          },
          "payment_Nets": {
            "type": "integer",
            "title": "Payment Nets"
          },
          "payment_Local": {
            "type": "integer",
            "title": "Payment Local"
          },
          "payment_Local_Descr": {
            "type": "string",
            "title": "Payment Local Descr"
          },
          "mailMessage": {
            "type": "string",
            "title": "Mailmessage"
          }
        },
        "type": "object",
        "title": "ShopSetupIn"
      },
      "ShopSetupOut": {
        "properties": {
          "boolCategories": {
            "type": "integer",
            "title": "Boolcategories"
          },
          "payment_Nets": {
            "type": "integer",
            "title": "Payment Nets"
          },
          "payment_Local": {
            "type": "integer",
            "title": "Payment Local"
          },
          "payment_Local_Descr": {
            "type": "string",
            "title": "Payment Local Descr"
          },
          "mailMessage": {
            "type": "string",
            "title": "Mailmessage"
          }
        },
        "type": "object",
        "required": [
          "boolCategories"
        ],
        "title": "ShopSetupOut"
      },
      "ShopSetupOutUpdate": {
        "properties": {
          "payment_Nets": {
            "type": "integer",
            "title": "Payment Nets"
          },
          "payment_Local": {
            "type": "integer",
            "title": "Payment Local"
          },
          "payment_Local_Descr": {
            "type": "string",
            "title": "Payment Local Descr"
          },
          "mailMessage": {
            "type": "string",
            "title": "Mailmessage"
          }
        },
        "type": "object",
        "required": [
          "payment_Nets",
          "payment_Local",
          "payment_Local_Descr",
          "mailMessage"
        ],
        "title": "ShopSetupOutUpdate"
      },
      "ShopShippingsIn": {
        "properties": {
          "shippingID": {
            "type": "integer",
            "title": "Shippingid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "shippingMethod": {
            "type": "string",
            "title": "Shippingmethod"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "ShopShippingsIn"
      },
      "ShopShippingsOut": {
        "properties": {
          "shippingID": {
            "type": "integer",
            "title": "Shippingid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "shippingMethod": {
            "type": "string",
            "title": "Shippingmethod"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "shippingID"
        ],
        "title": "ShopShippingsOut"
      },
      "ShopShippingsOutUpdate": {
        "properties": {
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "shippingMethod": {
            "type": "string",
            "title": "Shippingmethod"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "boolShow",
          "shippingMethod",
          "price",
          "sortnum"
        ],
        "title": "ShopShippingsOutUpdate"
      },
      "ShopVargroupsIn": {
        "properties": {
          "varGroupID": {
            "type": "integer",
            "title": "Vargroupid"
          },
          "groupname": {
            "type": "string",
            "title": "Groupname"
          }
        },
        "type": "object",
        "title": "ShopVargroupsIn"
      },
      "ShopVargroupsOut": {
        "properties": {
          "varGroupID": {
            "type": "integer",
            "title": "Vargroupid"
          },
          "groupname": {
            "type": "string",
            "title": "Groupname"
          }
        },
        "type": "object",
        "required": [
          "varGroupID"
        ],
        "title": "ShopVargroupsOut"
      },
      "ShopVargroupsOutUpdate": {
        "properties": {
          "groupname": {
            "type": "string",
            "title": "Groupname"
          }
        },
        "type": "object",
        "required": [
          "groupname"
        ],
        "title": "ShopVargroupsOutUpdate"
      },
      "SimTournamentScoreIn": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          },
          "netto": {
            "type": "integer",
            "title": "Netto"
          },
          "brutto": {
            "type": "integer",
            "title": "Brutto"
          }
        },
        "type": "object",
        "title": "SimTournamentScoreIn"
      },
      "SimTournamentScoreOut": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          },
          "netto": {
            "type": "integer",
            "title": "Netto"
          },
          "brutto": {
            "type": "integer",
            "title": "Brutto"
          }
        },
        "type": "object",
        "required": [
          "scoreID"
        ],
        "title": "SimTournamentScoreOut"
      },
      "SimTournamentScoreOutUpdate": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          },
          "netto": {
            "type": "integer",
            "title": "Netto"
          },
          "brutto": {
            "type": "integer",
            "title": "Brutto"
          }
        },
        "type": "object",
        "required": [
          "tournID",
          "playerID",
          "hcp",
          "netto",
          "brutto"
        ],
        "title": "SimTournamentScoreOutUpdate"
      },
      "SimTournamentSignupsIn": {
        "properties": {
          "signupID": {
            "type": "integer",
            "title": "Signupid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "onWaitlist": {
            "type": "integer",
            "title": "Onwaitlist"
          }
        },
        "type": "object",
        "title": "SimTournamentSignupsIn"
      },
      "SimTournamentSignupsOut": {
        "properties": {
          "signupID": {
            "type": "integer",
            "title": "Signupid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "onWaitlist": {
            "type": "integer",
            "title": "Onwaitlist"
          }
        },
        "type": "object",
        "required": [
          "signupID"
        ],
        "title": "SimTournamentSignupsOut"
      },
      "SimTournamentSignupsOutUpdate": {
        "properties": {
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "onWaitlist": {
            "type": "integer",
            "title": "Onwaitlist"
          }
        },
        "type": "object",
        "required": [
          "playerID",
          "tournID",
          "firstname",
          "lastname",
          "email",
          "phone",
          "onWaitlist"
        ],
        "title": "SimTournamentSignupsOutUpdate"
      },
      "SimTournamentsIn": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "tournname": {
            "type": "string",
            "title": "Tournname"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "tourndate": {
            "type": "integer",
            "title": "Tourndate"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "coursename": {
            "type": "string",
            "title": "Coursename"
          },
          "maxParticipants": {
            "type": "string",
            "title": "Maxparticipants"
          },
          "partReserved": {
            "type": "string",
            "title": "Partreserved"
          },
          "tournDescription": {
            "type": "string",
            "title": "Tourndescription"
          },
          "boolWaitlist": {
            "type": "integer",
            "title": "Boolwaitlist"
          },
          "signup_from": {
            "type": "integer",
            "title": "Signup From"
          },
          "signup_to": {
            "type": "integer",
            "title": "Signup To"
          },
          "boolTeeTimePubl": {
            "type": "integer",
            "title": "Boolteetimepubl"
          },
          "boolResPubl": {
            "type": "integer",
            "title": "Boolrespubl"
          }
        },
        "type": "object",
        "title": "SimTournamentsIn"
      },
      "SimTournamentsOut": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "tournname": {
            "type": "string",
            "title": "Tournname"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "tourndate": {
            "type": "integer",
            "title": "Tourndate"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "coursename": {
            "type": "string",
            "title": "Coursename"
          },
          "maxParticipants": {
            "type": "string",
            "title": "Maxparticipants"
          },
          "partReserved": {
            "type": "string",
            "title": "Partreserved"
          },
          "tournDescription": {
            "type": "string",
            "title": "Tourndescription"
          },
          "boolWaitlist": {
            "type": "integer",
            "title": "Boolwaitlist"
          },
          "signup_from": {
            "type": "integer",
            "title": "Signup From"
          },
          "signup_to": {
            "type": "integer",
            "title": "Signup To"
          },
          "boolTeeTimePubl": {
            "type": "integer",
            "title": "Boolteetimepubl"
          },
          "boolResPubl": {
            "type": "integer",
            "title": "Boolrespubl"
          }
        },
        "type": "object",
        "required": [
          "tournID"
        ],
        "title": "SimTournamentsOut"
      },
      "SimTournamentsOutUpdate": {
        "properties": {
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "tournname": {
            "type": "string",
            "title": "Tournname"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "tourndate": {
            "type": "integer",
            "title": "Tourndate"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "coursename": {
            "type": "string",
            "title": "Coursename"
          },
          "maxParticipants": {
            "type": "string",
            "title": "Maxparticipants"
          },
          "partReserved": {
            "type": "string",
            "title": "Partreserved"
          },
          "tournDescription": {
            "type": "string",
            "title": "Tourndescription"
          },
          "boolWaitlist": {
            "type": "integer",
            "title": "Boolwaitlist"
          },
          "signup_from": {
            "type": "integer",
            "title": "Signup From"
          },
          "signup_to": {
            "type": "integer",
            "title": "Signup To"
          },
          "boolTeeTimePubl": {
            "type": "integer",
            "title": "Boolteetimepubl"
          },
          "boolResPubl": {
            "type": "integer",
            "title": "Boolrespubl"
          }
        },
        "type": "object",
        "required": [
          "tourID",
          "boolShow",
          "tournname",
          "urlTitle",
          "tourndate",
          "time_from",
          "coursename",
          "maxParticipants",
          "partReserved",
          "tournDescription",
          "boolWaitlist",
          "signup_from",
          "signup_to",
          "boolTeeTimePubl",
          "boolResPubl"
        ],
        "title": "SimTournamentsOutUpdate"
      },
      "SimTourplayersIn": {
        "properties": {
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          }
        },
        "type": "object",
        "title": "SimTourplayersIn"
      },
      "SimTourplayersOut": {
        "properties": {
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          }
        },
        "type": "object",
        "required": [
          "playerID"
        ],
        "title": "SimTourplayersOut"
      },
      "SimTourplayersOutUpdate": {
        "properties": {
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          }
        },
        "type": "object",
        "required": [
          "tourID",
          "firstname",
          "lastname",
          "hcp"
        ],
        "title": "SimTourplayersOutUpdate"
      },
      "SimToursIn": {
        "properties": {
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "tourname": {
            "type": "string",
            "title": "Tourname"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "SimToursIn"
      },
      "SimToursOut": {
        "properties": {
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "tourname": {
            "type": "string",
            "title": "Tourname"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "tourID"
        ],
        "title": "SimToursOut"
      },
      "SimToursOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "tourname": {
            "type": "string",
            "title": "Tourname"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "tourname",
          "urlTitle",
          "boolShow",
          "sortnum"
        ],
        "title": "SimToursOutUpdate"
      },
      "SiteUserIn": {
        "properties": {},
        "type": "object",
        "title": "SiteUserIn",
        "description": "You can add real fields here later"
      },
      "SiteUserOut": {
        "properties": {
          "userID": {
            "type": "integer",
            "title": "Userid"
          }
        },
        "type": "object",
        "required": [
          "userID"
        ],
        "title": "SiteUserOut",
        "description": "You can add real fields here later"
      },
      "SiteUserOutUpdate": {
        "properties": {},
        "type": "object",
        "title": "SiteUserOutUpdate"
      },
      "SiteusersPwdtempIn": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "useremail": {
            "type": "string",
            "title": "Useremail"
          },
          "pwdkey": {
            "type": "string",
            "title": "Pwdkey"
          },
          "date_valid": {
            "type": "integer",
            "title": "Date Valid"
          }
        },
        "type": "object",
        "title": "SiteusersPwdtempIn"
      },
      "SiteusersPwdtempOut": {
        "properties": {
          "username": {
            "type": "integer",
            "title": "Username"
          },
          "useremail": {
            "type": "string",
            "title": "Useremail"
          },
          "pwdkey": {
            "type": "string",
            "title": "Pwdkey"
          },
          "date_valid": {
            "type": "integer",
            "title": "Date Valid"
          }
        },
        "type": "object",
        "required": [
          "username"
        ],
        "title": "SiteusersPwdtempOut"
      },
      "SiteusersPwdtempOutUpdate": {
        "properties": {
          "useremail": {
            "type": "string",
            "title": "Useremail"
          },
          "pwdkey": {
            "type": "string",
            "title": "Pwdkey"
          },
          "date_valid": {
            "type": "integer",
            "title": "Date Valid"
          }
        },
        "type": "object",
        "required": [
          "useremail",
          "pwdkey",
          "date_valid"
        ],
        "title": "SiteusersPwdtempOutUpdate"
      },
      "SiteusersSubscrIn": {
        "properties": {
          "userID": {
            "type": "integer",
            "title": "Userid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "title": "SiteusersSubscrIn"
      },
      "SiteusersSubscrOut": {
        "properties": {
          "userID": {
            "type": "integer",
            "title": "Userid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "required": [
          "userID"
        ],
        "title": "SiteusersSubscrOut"
      },
      "SiteusersSubscrOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          }
        },
        "type": "object",
        "required": [
          "depID"
        ],
        "title": "SiteusersSubscrOutUpdate"
      },
      "SponsorsCategoriesIn": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolPri": {
            "type": "integer",
            "title": "Boolpri"
          },
          "sizecat": {
            "type": "integer",
            "title": "Sizecat"
          }
        },
        "type": "object",
        "title": "SponsorsCategoriesIn"
      },
      "SponsorsCategoriesOut": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolPri": {
            "type": "integer",
            "title": "Boolpri"
          },
          "sizecat": {
            "type": "integer",
            "title": "Sizecat"
          }
        },
        "type": "object",
        "required": [
          "categoryID"
        ],
        "title": "SponsorsCategoriesOut"
      },
      "SponsorsCategoriesOutUpdate": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "boolPri": {
            "type": "integer",
            "title": "Boolpri"
          },
          "sizecat": {
            "type": "integer",
            "title": "Sizecat"
          }
        },
        "type": "object",
        "required": [
          "category",
          "sortnum",
          "boolPri",
          "sizecat"
        ],
        "title": "SponsorsCategoriesOutUpdate"
      },
      "SponsorsIn": {
        "properties": {
          "sponsorID": {
            "type": "integer",
            "title": "Sponsorid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "sponsor": {
            "type": "string",
            "title": "Sponsor"
          },
          "logofile": {
            "type": "string",
            "title": "Logofile"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "sponsorDescr": {
            "type": "string",
            "title": "Sponsordescr"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          }
        },
        "type": "object",
        "title": "SponsorsIn"
      },
      "SponsorsOut": {
        "properties": {
          "sponsorID": {
            "type": "integer",
            "title": "Sponsorid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "sponsor": {
            "type": "string",
            "title": "Sponsor"
          },
          "logofile": {
            "type": "string",
            "title": "Logofile"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "sponsorDescr": {
            "type": "string",
            "title": "Sponsordescr"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          }
        },
        "type": "object",
        "required": [
          "sponsorID"
        ],
        "title": "SponsorsOut"
      },
      "SponsorsOutUpdate": {
        "properties": {
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "sponsor": {
            "type": "string",
            "title": "Sponsor"
          },
          "logofile": {
            "type": "string",
            "title": "Logofile"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "sponsorDescr": {
            "type": "string",
            "title": "Sponsordescr"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          }
        },
        "type": "object",
        "required": [
          "boolShow",
          "sponsor",
          "logofile",
          "url",
          "sortnum",
          "sponsorDescr",
          "categoryID"
        ],
        "title": "SponsorsOutUpdate"
      },
      "StatusCourseclubIn": {
        "properties": {
          "boolCourse9": {
            "type": "integer",
            "title": "Boolcourse9"
          },
          "txtCourse9": {
            "type": "string",
            "title": "Txtcourse9"
          },
          "boolSimCenter": {
            "type": "integer",
            "title": "Boolsimcenter"
          },
          "txtSimCenter": {
            "type": "string",
            "title": "Txtsimcenter"
          },
          "boolRange": {
            "type": "integer",
            "title": "Boolrange"
          },
          "txtRange": {
            "type": "string",
            "title": "Txtrange"
          },
          "boolPracticeOut": {
            "type": "integer",
            "title": "Boolpracticeout"
          },
          "txtPracticeOut": {
            "type": "string",
            "title": "Txtpracticeout"
          },
          "boolPracticeIn": {
            "type": "integer",
            "title": "Boolpracticein"
          },
          "txtPracticeIn": {
            "type": "string",
            "title": "Txtpracticein"
          },
          "boolPracticeGreen": {
            "type": "integer",
            "title": "Boolpracticegreen"
          },
          "txtPracticeGreen": {
            "type": "string",
            "title": "Txtpracticegreen"
          },
          "selGreenQ": {
            "type": "string",
            "title": "Selgreenq"
          },
          "txtGreenQ": {
            "type": "string",
            "title": "Txtgreenq"
          },
          "boolBallplacing": {
            "type": "integer",
            "title": "Boolballplacing"
          },
          "txtBallplacing": {
            "type": "string",
            "title": "Txtballplacing"
          },
          "boolLessons": {
            "type": "integer",
            "title": "Boollessons"
          },
          "txtLessons": {
            "type": "string",
            "title": "Txtlessons"
          },
          "boolCafe": {
            "type": "integer",
            "title": "Boolcafe"
          },
          "txtCafe": {
            "type": "string",
            "title": "Txtcafe"
          },
          "boolShop": {
            "type": "integer",
            "title": "Boolshop"
          },
          "txtShop": {
            "type": "string",
            "title": "Txtshop"
          },
          "boolKiosk": {
            "type": "integer",
            "title": "Boolkiosk"
          },
          "txtKiosk": {
            "type": "string",
            "title": "Txtkiosk"
          },
          "boolOffice": {
            "type": "integer",
            "title": "Booloffice"
          },
          "txtOffice": {
            "type": "string",
            "title": "Txtoffice"
          }
        },
        "type": "object",
        "title": "StatusCourseclubIn"
      },
      "StatusCourseclubOut": {
        "properties": {
          "boolCourse9": {
            "type": "integer",
            "title": "Boolcourse9"
          },
          "txtCourse9": {
            "type": "string",
            "title": "Txtcourse9"
          },
          "boolSimCenter": {
            "type": "integer",
            "title": "Boolsimcenter"
          },
          "txtSimCenter": {
            "type": "string",
            "title": "Txtsimcenter"
          },
          "boolRange": {
            "type": "integer",
            "title": "Boolrange"
          },
          "txtRange": {
            "type": "string",
            "title": "Txtrange"
          },
          "boolPracticeOut": {
            "type": "integer",
            "title": "Boolpracticeout"
          },
          "txtPracticeOut": {
            "type": "string",
            "title": "Txtpracticeout"
          },
          "boolPracticeIn": {
            "type": "integer",
            "title": "Boolpracticein"
          },
          "txtPracticeIn": {
            "type": "string",
            "title": "Txtpracticein"
          },
          "boolPracticeGreen": {
            "type": "integer",
            "title": "Boolpracticegreen"
          },
          "txtPracticeGreen": {
            "type": "string",
            "title": "Txtpracticegreen"
          },
          "selGreenQ": {
            "type": "string",
            "title": "Selgreenq"
          },
          "txtGreenQ": {
            "type": "string",
            "title": "Txtgreenq"
          },
          "boolBallplacing": {
            "type": "integer",
            "title": "Boolballplacing"
          },
          "txtBallplacing": {
            "type": "string",
            "title": "Txtballplacing"
          },
          "boolLessons": {
            "type": "integer",
            "title": "Boollessons"
          },
          "txtLessons": {
            "type": "string",
            "title": "Txtlessons"
          },
          "boolCafe": {
            "type": "integer",
            "title": "Boolcafe"
          },
          "txtCafe": {
            "type": "string",
            "title": "Txtcafe"
          },
          "boolShop": {
            "type": "integer",
            "title": "Boolshop"
          },
          "txtShop": {
            "type": "string",
            "title": "Txtshop"
          },
          "boolKiosk": {
            "type": "integer",
            "title": "Boolkiosk"
          },
          "txtKiosk": {
            "type": "string",
            "title": "Txtkiosk"
          },
          "boolOffice": {
            "type": "integer",
            "title": "Booloffice"
          },
          "txtOffice": {
            "type": "string",
            "title": "Txtoffice"
          }
        },
        "type": "object",
        "required": [
          "boolCourse9"
        ],
        "title": "StatusCourseclubOut"
      },
      "StatusCourseclubOutUpdate": {
        "properties": {
          "txtCourse9": {
            "type": "string",
            "title": "Txtcourse9"
          },
          "boolSimCenter": {
            "type": "integer",
            "title": "Boolsimcenter"
          },
          "txtSimCenter": {
            "type": "string",
            "title": "Txtsimcenter"
          },
          "boolRange": {
            "type": "integer",
            "title": "Boolrange"
          },
          "txtRange": {
            "type": "string",
            "title": "Txtrange"
          },
          "boolPracticeOut": {
            "type": "integer",
            "title": "Boolpracticeout"
          },
          "txtPracticeOut": {
            "type": "string",
            "title": "Txtpracticeout"
          },
          "boolPracticeIn": {
            "type": "integer",
            "title": "Boolpracticein"
          },
          "txtPracticeIn": {
            "type": "string",
            "title": "Txtpracticein"
          },
          "boolPracticeGreen": {
            "type": "integer",
            "title": "Boolpracticegreen"
          },
          "txtPracticeGreen": {
            "type": "string",
            "title": "Txtpracticegreen"
          },
          "selGreenQ": {
            "type": "string",
            "title": "Selgreenq"
          },
          "txtGreenQ": {
            "type": "string",
            "title": "Txtgreenq"
          },
          "boolBallplacing": {
            "type": "integer",
            "title": "Boolballplacing"
          },
          "txtBallplacing": {
            "type": "string",
            "title": "Txtballplacing"
          },
          "boolLessons": {
            "type": "integer",
            "title": "Boollessons"
          },
          "txtLessons": {
            "type": "string",
            "title": "Txtlessons"
          },
          "boolCafe": {
            "type": "integer",
            "title": "Boolcafe"
          },
          "txtCafe": {
            "type": "string",
            "title": "Txtcafe"
          },
          "boolShop": {
            "type": "integer",
            "title": "Boolshop"
          },
          "txtShop": {
            "type": "string",
            "title": "Txtshop"
          },
          "boolKiosk": {
            "type": "integer",
            "title": "Boolkiosk"
          },
          "txtKiosk": {
            "type": "string",
            "title": "Txtkiosk"
          },
          "boolOffice": {
            "type": "integer",
            "title": "Booloffice"
          },
          "txtOffice": {
            "type": "string",
            "title": "Txtoffice"
          }
        },
        "type": "object",
        "required": [
          "txtCourse9",
          "boolSimCenter",
          "txtSimCenter",
          "boolRange",
          "txtRange",
          "boolPracticeOut",
          "txtPracticeOut",
          "boolPracticeIn",
          "txtPracticeIn",
          "boolPracticeGreen",
          "txtPracticeGreen",
          "selGreenQ",
          "txtGreenQ",
          "boolBallplacing",
          "txtBallplacing",
          "boolLessons",
          "txtLessons",
          "boolCafe",
          "txtCafe",
          "boolShop",
          "txtShop",
          "boolKiosk",
          "txtKiosk",
          "boolOffice",
          "txtOffice"
        ],
        "title": "StatusCourseclubOutUpdate"
      },
      "StatusInfoIn": {
        "properties": {
          "statusID": {
            "type": "integer",
            "title": "Statusid"
          },
          "statusLabel": {
            "type": "string",
            "title": "Statuslabel"
          },
          "boolOpen": {
            "type": "integer",
            "title": "Boolopen"
          },
          "statusText": {
            "type": "string",
            "title": "Statustext"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "StatusInfoIn"
      },
      "StatusInfoOut": {
        "properties": {
          "statusID": {
            "type": "integer",
            "title": "Statusid"
          },
          "statusLabel": {
            "type": "string",
            "title": "Statuslabel"
          },
          "boolOpen": {
            "type": "integer",
            "title": "Boolopen"
          },
          "statusText": {
            "type": "string",
            "title": "Statustext"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "statusID"
        ],
        "title": "StatusInfoOut"
      },
      "StatusInfoOutUpdate": {
        "properties": {
          "statusLabel": {
            "type": "string",
            "title": "Statuslabel"
          },
          "boolOpen": {
            "type": "integer",
            "title": "Boolopen"
          },
          "statusText": {
            "type": "string",
            "title": "Statustext"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "statusLabel",
          "boolOpen",
          "statusText",
          "sortnum"
        ],
        "title": "StatusInfoOutUpdate"
      },
      "TaxcodesIn": {
        "properties": {
          "taxCode": {
            "type": "integer",
            "title": "Taxcode"
          },
          "taxPros": {
            "type": "integer",
            "title": "Taxpros"
          }
        },
        "type": "object",
        "title": "TaxcodesIn"
      },
      "TaxcodesOut": {
        "properties": {
          "taxCode": {
            "type": "integer",
            "title": "Taxcode"
          },
          "taxPros": {
            "type": "integer",
            "title": "Taxpros"
          }
        },
        "type": "object",
        "required": [
          "taxCode"
        ],
        "title": "TaxcodesOut"
      },
      "TaxcodesOutUpdate": {
        "properties": {
          "taxPros": {
            "type": "integer",
            "title": "Taxpros"
          }
        },
        "type": "object",
        "required": [
          "taxPros"
        ],
        "title": "TaxcodesOutUpdate"
      },
      "TemplateContentIn": {
        "properties": {
          "templateID": {
            "type": "integer",
            "title": "Templateid"
          },
          "template": {
            "type": "string",
            "title": "Template"
          },
          "col_left": {
            "type": "string",
            "title": "Col Left"
          },
          "col_right": {
            "type": "string",
            "title": "Col Right"
          }
        },
        "type": "object",
        "title": "TemplateContentIn"
      },
      "TemplateContentOut": {
        "properties": {
          "templateID": {
            "type": "integer",
            "title": "Templateid"
          },
          "template": {
            "type": "string",
            "title": "Template"
          },
          "col_left": {
            "type": "string",
            "title": "Col Left"
          },
          "col_right": {
            "type": "string",
            "title": "Col Right"
          }
        },
        "type": "object",
        "required": [
          "templateID"
        ],
        "title": "TemplateContentOut"
      },
      "TemplateContentOutUpdate": {
        "properties": {
          "template": {
            "type": "string",
            "title": "Template"
          },
          "col_left": {
            "type": "string",
            "title": "Col Left"
          },
          "col_right": {
            "type": "string",
            "title": "Col Right"
          }
        },
        "type": "object",
        "required": [
          "template",
          "col_left",
          "col_right"
        ],
        "title": "TemplateContentOutUpdate"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "TourPlayersIn": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          }
        },
        "type": "object",
        "title": "TourPlayersIn"
      },
      "TourPlayersOut": {
        "properties": {
          "recID": {
            "type": "integer",
            "title": "Recid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          }
        },
        "type": "object",
        "required": [
          "recID"
        ],
        "title": "TourPlayersOut"
      },
      "TourPlayersOutUpdate": {
        "properties": {
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          }
        },
        "type": "object",
        "required": [
          "tourID",
          "tournID",
          "playerID",
          "firstname",
          "lastname",
          "hcp"
        ],
        "title": "TourPlayersOutUpdate"
      },
      "TourScoresIn": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "par": {
            "type": "integer",
            "title": "Par"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          },
          "brutto": {
            "type": "integer",
            "title": "Brutto"
          },
          "netto": {
            "type": "integer",
            "title": "Netto"
          },
          "points": {
            "type": "integer",
            "title": "Points"
          }
        },
        "type": "object",
        "title": "TourScoresIn"
      },
      "TourScoresOut": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "par": {
            "type": "integer",
            "title": "Par"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          },
          "brutto": {
            "type": "integer",
            "title": "Brutto"
          },
          "netto": {
            "type": "integer",
            "title": "Netto"
          },
          "points": {
            "type": "integer",
            "title": "Points"
          }
        },
        "type": "object",
        "required": [
          "scoreID"
        ],
        "title": "TourScoresOut"
      },
      "TourScoresOutUpdate": {
        "properties": {
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "par": {
            "type": "integer",
            "title": "Par"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          },
          "brutto": {
            "type": "integer",
            "title": "Brutto"
          },
          "netto": {
            "type": "integer",
            "title": "Netto"
          },
          "points": {
            "type": "integer",
            "title": "Points"
          }
        },
        "type": "object",
        "required": [
          "tourID",
          "tournID",
          "playerID",
          "par",
          "hcp",
          "brutto",
          "netto",
          "points"
        ],
        "title": "TourScoresOutUpdate"
      },
      "TournamentsIn": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "tournName": {
            "type": "string",
            "title": "Tournname"
          },
          "tournAlias": {
            "type": "string",
            "title": "Tournalias"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "tournDescription": {
            "type": "string",
            "title": "Tourndescription"
          },
          "date_start": {
            "type": "integer",
            "title": "Date Start"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "time_to": {
            "type": "string",
            "title": "Time To"
          },
          "boolGolfboxSignup": {
            "type": "integer",
            "title": "Boolgolfboxsignup"
          },
          "gbTournID": {
            "type": "integer",
            "title": "Gbtournid"
          },
          "boolOnlineSignup": {
            "type": "integer",
            "title": "Boolonlinesignup"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "boolOnlinePay": {
            "type": "integer",
            "title": "Boolonlinepay"
          },
          "boolWaitlist": {
            "type": "integer",
            "title": "Boolwaitlist"
          },
          "maxParticipants": {
            "type": "string",
            "title": "Maxparticipants"
          },
          "partReserved": {
            "type": "string",
            "title": "Partreserved"
          },
          "signup_from": {
            "type": "integer",
            "title": "Signup From"
          },
          "signup_to": {
            "type": "integer",
            "title": "Signup To"
          },
          "boolSuCouple": {
            "type": "integer",
            "title": "Boolsucouple"
          },
          "boolSuTeetime": {
            "type": "integer",
            "title": "Boolsuteetime"
          },
          "boolSuHomeclub": {
            "type": "integer",
            "title": "Boolsuhomeclub"
          },
          "boolSuPhone": {
            "type": "integer",
            "title": "Boolsuphone"
          },
          "boolSuBornyear": {
            "type": "integer",
            "title": "Boolsubornyear"
          },
          "boolSignupToMail": {
            "type": "integer",
            "title": "Boolsignuptomail"
          },
          "signupMailTo": {
            "type": "string",
            "title": "Signupmailto"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolTeeTimePubl": {
            "type": "integer",
            "title": "Boolteetimepubl"
          },
          "teeTimeLink": {
            "type": "string",
            "title": "Teetimelink"
          },
          "boolTeeTimeLinkExt": {
            "type": "integer",
            "title": "Boolteetimelinkext"
          },
          "boolResPubl": {
            "type": "integer",
            "title": "Boolrespubl"
          },
          "resLink": {
            "type": "string",
            "title": "Reslink"
          },
          "boolResLinkExt": {
            "type": "integer",
            "title": "Boolreslinkext"
          },
          "refnr": {
            "type": "string",
            "title": "Refnr"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "boolExternal": {
            "type": "integer",
            "title": "Boolexternal"
          },
          "priceGroupID": {
            "type": "integer",
            "title": "Pricegroupid"
          },
          "boolSuHcp": {
            "type": "integer",
            "title": "Boolsuhcp"
          },
          "boolSuMembernum": {
            "type": "integer",
            "title": "Boolsumembernum"
          },
          "boolShowSignups": {
            "type": "integer",
            "title": "Boolshowsignups"
          }
        },
        "type": "object",
        "title": "TournamentsIn"
      },
      "TournamentsListIn": {
        "properties": {
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "listname": {
            "type": "string",
            "title": "Listname"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "listDescription": {
            "type": "string",
            "title": "Listdescription"
          },
          "listYear": {
            "type": "string",
            "title": "Listyear"
          },
          "gb_customerid": {
            "type": "string",
            "title": "Gb Customerid"
          },
          "boolGbList": {
            "type": "integer",
            "title": "Boolgblist"
          },
          "gbListUrl": {
            "type": "string",
            "title": "Gblisturl"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "listFilter": {
            "type": "string",
            "title": "Listfilter"
          },
          "gbListID": {
            "type": "string",
            "title": "Gblistid"
          }
        },
        "type": "object",
        "title": "TournamentsListIn"
      },
      "TournamentsListOut": {
        "properties": {
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "listname": {
            "type": "string",
            "title": "Listname"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "listDescription": {
            "type": "string",
            "title": "Listdescription"
          },
          "listYear": {
            "type": "string",
            "title": "Listyear"
          },
          "gb_customerid": {
            "type": "string",
            "title": "Gb Customerid"
          },
          "boolGbList": {
            "type": "integer",
            "title": "Boolgblist"
          },
          "gbListUrl": {
            "type": "string",
            "title": "Gblisturl"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "listFilter": {
            "type": "string",
            "title": "Listfilter"
          },
          "gbListID": {
            "type": "string",
            "title": "Gblistid"
          }
        },
        "type": "object",
        "required": [
          "listID"
        ],
        "title": "TournamentsListOut"
      },
      "TournamentsListOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "listname": {
            "type": "string",
            "title": "Listname"
          },
          "urlTitle": {
            "type": "string",
            "title": "Urltitle"
          },
          "listDescription": {
            "type": "string",
            "title": "Listdescription"
          },
          "listYear": {
            "type": "string",
            "title": "Listyear"
          },
          "gb_customerid": {
            "type": "string",
            "title": "Gb Customerid"
          },
          "boolGbList": {
            "type": "integer",
            "title": "Boolgblist"
          },
          "gbListUrl": {
            "type": "string",
            "title": "Gblisturl"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "listFilter": {
            "type": "string",
            "title": "Listfilter"
          },
          "gbListID": {
            "type": "string",
            "title": "Gblistid"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "sortnum",
          "tourID",
          "listname",
          "urlTitle",
          "listDescription",
          "listYear",
          "gb_customerid",
          "boolGbList",
          "gbListUrl",
          "boolShow",
          "date_created",
          "created_by",
          "listFilter",
          "gbListID"
        ],
        "title": "TournamentsListOutUpdate"
      },
      "TournamentsOut": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "tournName": {
            "type": "string",
            "title": "Tournname"
          },
          "tournAlias": {
            "type": "string",
            "title": "Tournalias"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "tournDescription": {
            "type": "string",
            "title": "Tourndescription"
          },
          "date_start": {
            "type": "integer",
            "title": "Date Start"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "time_to": {
            "type": "string",
            "title": "Time To"
          },
          "boolGolfboxSignup": {
            "type": "integer",
            "title": "Boolgolfboxsignup"
          },
          "gbTournID": {
            "type": "integer",
            "title": "Gbtournid"
          },
          "boolOnlineSignup": {
            "type": "integer",
            "title": "Boolonlinesignup"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "boolOnlinePay": {
            "type": "integer",
            "title": "Boolonlinepay"
          },
          "boolWaitlist": {
            "type": "integer",
            "title": "Boolwaitlist"
          },
          "maxParticipants": {
            "type": "string",
            "title": "Maxparticipants"
          },
          "partReserved": {
            "type": "string",
            "title": "Partreserved"
          },
          "signup_from": {
            "type": "integer",
            "title": "Signup From"
          },
          "signup_to": {
            "type": "integer",
            "title": "Signup To"
          },
          "boolSuCouple": {
            "type": "integer",
            "title": "Boolsucouple"
          },
          "boolSuTeetime": {
            "type": "integer",
            "title": "Boolsuteetime"
          },
          "boolSuHomeclub": {
            "type": "integer",
            "title": "Boolsuhomeclub"
          },
          "boolSuPhone": {
            "type": "integer",
            "title": "Boolsuphone"
          },
          "boolSuBornyear": {
            "type": "integer",
            "title": "Boolsubornyear"
          },
          "boolSignupToMail": {
            "type": "integer",
            "title": "Boolsignuptomail"
          },
          "signupMailTo": {
            "type": "string",
            "title": "Signupmailto"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolTeeTimePubl": {
            "type": "integer",
            "title": "Boolteetimepubl"
          },
          "teeTimeLink": {
            "type": "string",
            "title": "Teetimelink"
          },
          "boolTeeTimeLinkExt": {
            "type": "integer",
            "title": "Boolteetimelinkext"
          },
          "boolResPubl": {
            "type": "integer",
            "title": "Boolrespubl"
          },
          "resLink": {
            "type": "string",
            "title": "Reslink"
          },
          "boolResLinkExt": {
            "type": "integer",
            "title": "Boolreslinkext"
          },
          "refnr": {
            "type": "string",
            "title": "Refnr"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "boolExternal": {
            "type": "integer",
            "title": "Boolexternal"
          },
          "priceGroupID": {
            "type": "integer",
            "title": "Pricegroupid"
          },
          "boolSuHcp": {
            "type": "integer",
            "title": "Boolsuhcp"
          },
          "boolSuMembernum": {
            "type": "integer",
            "title": "Boolsumembernum"
          },
          "boolShowSignups": {
            "type": "integer",
            "title": "Boolshowsignups"
          }
        },
        "type": "object",
        "required": [
          "tournID"
        ],
        "title": "TournamentsOut"
      },
      "TournamentsOutUpdate": {
        "properties": {
          "listID": {
            "type": "integer",
            "title": "Listid"
          },
          "tourID": {
            "type": "integer",
            "title": "Tourid"
          },
          "boolShow": {
            "type": "integer",
            "title": "Boolshow"
          },
          "tournName": {
            "type": "string",
            "title": "Tournname"
          },
          "tournAlias": {
            "type": "string",
            "title": "Tournalias"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "tournDescription": {
            "type": "string",
            "title": "Tourndescription"
          },
          "date_start": {
            "type": "integer",
            "title": "Date Start"
          },
          "time_from": {
            "type": "string",
            "title": "Time From"
          },
          "time_to": {
            "type": "string",
            "title": "Time To"
          },
          "boolGolfboxSignup": {
            "type": "integer",
            "title": "Boolgolfboxsignup"
          },
          "gbTournID": {
            "type": "integer",
            "title": "Gbtournid"
          },
          "boolOnlineSignup": {
            "type": "integer",
            "title": "Boolonlinesignup"
          },
          "formID": {
            "type": "integer",
            "title": "Formid"
          },
          "boolOnlinePay": {
            "type": "integer",
            "title": "Boolonlinepay"
          },
          "boolWaitlist": {
            "type": "integer",
            "title": "Boolwaitlist"
          },
          "maxParticipants": {
            "type": "string",
            "title": "Maxparticipants"
          },
          "partReserved": {
            "type": "string",
            "title": "Partreserved"
          },
          "signup_from": {
            "type": "integer",
            "title": "Signup From"
          },
          "signup_to": {
            "type": "integer",
            "title": "Signup To"
          },
          "boolSuCouple": {
            "type": "integer",
            "title": "Boolsucouple"
          },
          "boolSuTeetime": {
            "type": "integer",
            "title": "Boolsuteetime"
          },
          "boolSuHomeclub": {
            "type": "integer",
            "title": "Boolsuhomeclub"
          },
          "boolSuPhone": {
            "type": "integer",
            "title": "Boolsuphone"
          },
          "boolSuBornyear": {
            "type": "integer",
            "title": "Boolsubornyear"
          },
          "boolSignupToMail": {
            "type": "integer",
            "title": "Boolsignuptomail"
          },
          "signupMailTo": {
            "type": "string",
            "title": "Signupmailto"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "boolTeeTimePubl": {
            "type": "integer",
            "title": "Boolteetimepubl"
          },
          "teeTimeLink": {
            "type": "string",
            "title": "Teetimelink"
          },
          "boolTeeTimeLinkExt": {
            "type": "integer",
            "title": "Boolteetimelinkext"
          },
          "boolResPubl": {
            "type": "integer",
            "title": "Boolrespubl"
          },
          "resLink": {
            "type": "string",
            "title": "Reslink"
          },
          "boolResLinkExt": {
            "type": "integer",
            "title": "Boolreslinkext"
          },
          "refnr": {
            "type": "string",
            "title": "Refnr"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "boolExternal": {
            "type": "integer",
            "title": "Boolexternal"
          },
          "priceGroupID": {
            "type": "integer",
            "title": "Pricegroupid"
          },
          "boolSuHcp": {
            "type": "integer",
            "title": "Boolsuhcp"
          },
          "boolSuMembernum": {
            "type": "integer",
            "title": "Boolsumembernum"
          },
          "boolShowSignups": {
            "type": "integer",
            "title": "Boolshowsignups"
          }
        },
        "type": "object",
        "required": [
          "listID",
          "tourID",
          "boolShow",
          "tournName",
          "tournAlias",
          "location",
          "tournDescription",
          "date_start",
          "time_from",
          "time_to",
          "boolGolfboxSignup",
          "gbTournID",
          "boolOnlineSignup",
          "formID",
          "boolOnlinePay",
          "boolWaitlist",
          "maxParticipants",
          "partReserved",
          "signup_from",
          "signup_to",
          "boolSuCouple",
          "boolSuTeetime",
          "boolSuHomeclub",
          "boolSuPhone",
          "boolSuBornyear",
          "boolSignupToMail",
          "signupMailTo",
          "date_created",
          "boolTeeTimePubl",
          "teeTimeLink",
          "boolTeeTimeLinkExt",
          "boolResPubl",
          "resLink",
          "boolResLinkExt",
          "refnr",
          "created_by",
          "boolExternal",
          "priceGroupID",
          "boolSuHcp",
          "boolSuMembernum",
          "boolShowSignups"
        ],
        "title": "TournamentsOutUpdate"
      },
      "TournamentsParticipantsIn": {
        "properties": {
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "boolSuConfirmed": {
            "type": "integer",
            "title": "Boolsuconfirmed"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "memberID": {
            "type": "string",
            "title": "Memberid"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "sname": {
            "type": "string",
            "title": "Sname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "bornYear": {
            "type": "string",
            "title": "Bornyear"
          },
          "telephone": {
            "type": "string",
            "title": "Telephone"
          },
          "homeClub": {
            "type": "string",
            "title": "Homeclub"
          },
          "memberID_mark": {
            "type": "string",
            "title": "Memberid Mark"
          },
          "fname_mark": {
            "type": "string",
            "title": "Fname Mark"
          },
          "sname_mark": {
            "type": "string",
            "title": "Sname Mark"
          },
          "bornYear_mark": {
            "type": "string",
            "title": "Bornyear Mark"
          },
          "hcp_mark": {
            "type": "string",
            "title": "Hcp Mark"
          },
          "homeClub_mark": {
            "type": "string",
            "title": "Homeclub Mark"
          },
          "suTeeTime": {
            "type": "string",
            "title": "Suteetime"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "suVerified": {
            "type": "integer",
            "title": "Suverified"
          },
          "onWaitlist": {
            "type": "integer",
            "title": "Onwaitlist"
          },
          "refnr": {
            "type": "string",
            "title": "Refnr"
          },
          "date_signup": {
            "type": "integer",
            "title": "Date Signup"
          }
        },
        "type": "object",
        "title": "TournamentsParticipantsIn"
      },
      "TournamentsParticipantsOut": {
        "properties": {
          "participantID": {
            "type": "integer",
            "title": "Participantid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "boolSuConfirmed": {
            "type": "integer",
            "title": "Boolsuconfirmed"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "memberID": {
            "type": "string",
            "title": "Memberid"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "sname": {
            "type": "string",
            "title": "Sname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "bornYear": {
            "type": "string",
            "title": "Bornyear"
          },
          "telephone": {
            "type": "string",
            "title": "Telephone"
          },
          "homeClub": {
            "type": "string",
            "title": "Homeclub"
          },
          "memberID_mark": {
            "type": "string",
            "title": "Memberid Mark"
          },
          "fname_mark": {
            "type": "string",
            "title": "Fname Mark"
          },
          "sname_mark": {
            "type": "string",
            "title": "Sname Mark"
          },
          "bornYear_mark": {
            "type": "string",
            "title": "Bornyear Mark"
          },
          "hcp_mark": {
            "type": "string",
            "title": "Hcp Mark"
          },
          "homeClub_mark": {
            "type": "string",
            "title": "Homeclub Mark"
          },
          "suTeeTime": {
            "type": "string",
            "title": "Suteetime"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "suVerified": {
            "type": "integer",
            "title": "Suverified"
          },
          "onWaitlist": {
            "type": "integer",
            "title": "Onwaitlist"
          },
          "refnr": {
            "type": "string",
            "title": "Refnr"
          },
          "date_signup": {
            "type": "integer",
            "title": "Date Signup"
          }
        },
        "type": "object",
        "required": [
          "participantID"
        ],
        "title": "TournamentsParticipantsOut"
      },
      "TournamentsParticipantsOutUpdate": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "boolSuConfirmed": {
            "type": "integer",
            "title": "Boolsuconfirmed"
          },
          "orderID": {
            "type": "integer",
            "title": "Orderid"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "memberID": {
            "type": "string",
            "title": "Memberid"
          },
          "hcp": {
            "type": "string",
            "title": "Hcp"
          },
          "fname": {
            "type": "string",
            "title": "Fname"
          },
          "sname": {
            "type": "string",
            "title": "Sname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "bornYear": {
            "type": "string",
            "title": "Bornyear"
          },
          "telephone": {
            "type": "string",
            "title": "Telephone"
          },
          "homeClub": {
            "type": "string",
            "title": "Homeclub"
          },
          "memberID_mark": {
            "type": "string",
            "title": "Memberid Mark"
          },
          "fname_mark": {
            "type": "string",
            "title": "Fname Mark"
          },
          "sname_mark": {
            "type": "string",
            "title": "Sname Mark"
          },
          "bornYear_mark": {
            "type": "string",
            "title": "Bornyear Mark"
          },
          "hcp_mark": {
            "type": "string",
            "title": "Hcp Mark"
          },
          "homeClub_mark": {
            "type": "string",
            "title": "Homeclub Mark"
          },
          "suTeeTime": {
            "type": "string",
            "title": "Suteetime"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "suVerified": {
            "type": "integer",
            "title": "Suverified"
          },
          "onWaitlist": {
            "type": "integer",
            "title": "Onwaitlist"
          },
          "refnr": {
            "type": "string",
            "title": "Refnr"
          },
          "date_signup": {
            "type": "integer",
            "title": "Date Signup"
          }
        },
        "type": "object",
        "required": [
          "tournID",
          "boolSuConfirmed",
          "orderID",
          "price",
          "memberID",
          "hcp",
          "fname",
          "sname",
          "email",
          "bornYear",
          "telephone",
          "homeClub",
          "memberID_mark",
          "fname_mark",
          "sname_mark",
          "bornYear_mark",
          "hcp_mark",
          "homeClub_mark",
          "suTeeTime",
          "comments",
          "suVerified",
          "onWaitlist",
          "refnr",
          "date_signup"
        ],
        "title": "TournamentsParticipantsOutUpdate"
      },
      "TournamentsResultsIn": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "boolHtml": {
            "type": "integer",
            "title": "Boolhtml"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "TournamentsResultsIn"
      },
      "TournamentsResultsOut": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "boolHtml": {
            "type": "integer",
            "title": "Boolhtml"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "tournID"
        ],
        "title": "TournamentsResultsOut"
      },
      "TournamentsResultsOutUpdate": {
        "properties": {
          "boolHtml": {
            "type": "integer",
            "title": "Boolhtml"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "boolHtml",
          "result",
          "created_by"
        ],
        "title": "TournamentsResultsOutUpdate"
      },
      "TournamentsScoreIn": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          },
          "netto": {
            "type": "integer",
            "title": "Netto"
          },
          "brutto": {
            "type": "integer",
            "title": "Brutto"
          }
        },
        "type": "object",
        "title": "TournamentsScoreIn"
      },
      "TournamentsScoreOut": {
        "properties": {
          "scoreID": {
            "type": "integer",
            "title": "Scoreid"
          },
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          },
          "netto": {
            "type": "integer",
            "title": "Netto"
          },
          "brutto": {
            "type": "integer",
            "title": "Brutto"
          }
        },
        "type": "object",
        "required": [
          "scoreID"
        ],
        "title": "TournamentsScoreOut"
      },
      "TournamentsScoreOutUpdate": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "playerID": {
            "type": "integer",
            "title": "Playerid"
          },
          "hcp": {
            "type": "integer",
            "title": "Hcp"
          },
          "netto": {
            "type": "integer",
            "title": "Netto"
          },
          "brutto": {
            "type": "integer",
            "title": "Brutto"
          }
        },
        "type": "object",
        "required": [
          "tournID",
          "playerID",
          "hcp",
          "netto",
          "brutto"
        ],
        "title": "TournamentsScoreOutUpdate"
      },
      "TournamentsStartlistsIn": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "boolHtml": {
            "type": "integer",
            "title": "Boolhtml"
          },
          "startlist": {
            "type": "string",
            "title": "Startlist"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "TournamentsStartlistsIn"
      },
      "TournamentsStartlistsOut": {
        "properties": {
          "tournID": {
            "type": "integer",
            "title": "Tournid"
          },
          "boolHtml": {
            "type": "integer",
            "title": "Boolhtml"
          },
          "startlist": {
            "type": "string",
            "title": "Startlist"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "tournID"
        ],
        "title": "TournamentsStartlistsOut"
      },
      "TournamentsStartlistsOutUpdate": {
        "properties": {
          "boolHtml": {
            "type": "integer",
            "title": "Boolhtml"
          },
          "startlist": {
            "type": "string",
            "title": "Startlist"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "boolHtml",
          "startlist",
          "created_by"
        ],
        "title": "TournamentsStartlistsOutUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WidgetsIn": {
        "properties": {
          "widgetID": {
            "type": "integer",
            "title": "Widgetid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "widgetWidth": {
            "type": "string",
            "title": "Widgetwidth"
          },
          "widgetName": {
            "type": "string",
            "title": "Widgetname"
          },
          "widgetType": {
            "type": "integer",
            "title": "Widgettype"
          },
          "widgetFunction": {
            "type": "string",
            "title": "Widgetfunction"
          },
          "widgetHeading": {
            "type": "string",
            "title": "Widgetheading"
          },
          "widgetContent": {
            "type": "string",
            "title": "Widgetcontent"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "title": "WidgetsIn"
      },
      "WidgetsOut": {
        "properties": {
          "widgetID": {
            "type": "integer",
            "title": "Widgetid"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "widgetWidth": {
            "type": "string",
            "title": "Widgetwidth"
          },
          "widgetName": {
            "type": "string",
            "title": "Widgetname"
          },
          "widgetType": {
            "type": "integer",
            "title": "Widgettype"
          },
          "widgetFunction": {
            "type": "string",
            "title": "Widgetfunction"
          },
          "widgetHeading": {
            "type": "string",
            "title": "Widgetheading"
          },
          "widgetContent": {
            "type": "string",
            "title": "Widgetcontent"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "widgetID"
        ],
        "title": "WidgetsOut"
      },
      "WidgetsOutUpdate": {
        "properties": {
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "widgetWidth": {
            "type": "string",
            "title": "Widgetwidth"
          },
          "widgetName": {
            "type": "string",
            "title": "Widgetname"
          },
          "widgetType": {
            "type": "integer",
            "title": "Widgettype"
          },
          "widgetFunction": {
            "type": "string",
            "title": "Widgetfunction"
          },
          "widgetHeading": {
            "type": "string",
            "title": "Widgetheading"
          },
          "widgetContent": {
            "type": "string",
            "title": "Widgetcontent"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "date_created": {
            "type": "integer",
            "title": "Date Created"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "depID",
          "widgetWidth",
          "widgetName",
          "widgetType",
          "widgetFunction",
          "widgetHeading",
          "widgetContent",
          "comments",
          "date_created",
          "created_by"
        ],
        "title": "WidgetsOutUpdate"
      },
      "WidgetsPlacedIn": {
        "properties": {
          "widgetID": {
            "type": "integer",
            "title": "Widgetid"
          },
          "widgetType": {
            "type": "integer",
            "title": "Widgettype"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "area": {
            "type": "string",
            "title": "Area"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "title": "WidgetsPlacedIn"
      },
      "WidgetsPlacedOut": {
        "properties": {
          "widgetID": {
            "type": "integer",
            "title": "Widgetid"
          },
          "widgetType": {
            "type": "integer",
            "title": "Widgettype"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "area": {
            "type": "string",
            "title": "Area"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "widgetID"
        ],
        "title": "WidgetsPlacedOut"
      },
      "WidgetsPlacedOutUpdate": {
        "properties": {
          "widgetType": {
            "type": "integer",
            "title": "Widgettype"
          },
          "depID": {
            "type": "integer",
            "title": "Depid"
          },
          "area": {
            "type": "string",
            "title": "Area"
          },
          "sortnum": {
            "type": "integer",
            "title": "Sortnum"
          }
        },
        "type": "object",
        "required": [
          "widgetType",
          "depID",
          "area",
          "sortnum"
        ],
        "title": "WidgetsPlacedOutUpdate"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "token"
          }
        }
      }
    }
  }
}